/*
 * generated by Xtext 2.12.0
 */
package tools.vitruv.dsls.commonalities.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Test
import org.junit.runner.RunWith
import tools.vitruv.dsls.commonalities.commonalitiesLanguage.CommonalitiesFile
import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.CoreMatchers.*;
import static tools.vitruv.dsls.commonalities.tests.matchers.EResourceMatchers.*;

@RunWith(XtextRunner)
@InjectWith(CommonalitiesLanguageInjectorProvider)
class CommonalitiesLanguageParsingTest {
	@Inject
	ParseHelper<CommonalitiesFile> parseHelper
	
	@Test
	def void importDeclaration() {
		'''
		import 'http://www.eclipse.org/emf/2002/Ecore'
		'''
			.variation("'", '"')
			.parseTest
	}
	
	@Test
	def void importDeclarationWithAlias() {
		'''
		import 'http://www.eclipse.org/emf/2002/Ecore' as ecore
		'''
			.variation("'", '"')
			.parseTest
	}
	
	def void parseTest(CharSequence... inputs) {
		inputs.forEach [input | 
			val result = parseHelper.parse(input)
			val errorMessage = '''Could not parse:
			
			 «input»
			 '''
			assertThat(errorMessage, result, is(notNullValue))
			assertThat(errorMessage, result.eResource, hasNoErrors)
		]
	}
	
	def CharSequence[] variation(CharSequence input, CharSequence find, CharSequence replace) {
		#[
			input,
			input.toString.replace(find, replace)
		]
	}
	
	
}
