import http:$//$sdq.ipd.uka.de/PCM/Repository/5.0 as repo
import http:$//$www.eclipse.org/uml2/2.1.0/UML as umlcd

// correspondence rules
map repo:OperationInterface to umlcd:Interface
  with signatures::OperationSignature 
      to ownedOperation::Operation
    with returnType::DataType 
      to ownedParameter::Parameter.type::Type 
      when ownedParameter.direction = return
    and with parameters::Parameter 
      to ownedParameter::Parameter 
      when ownedParameter.direction <> return

      
// consistency invariant
context repo:Repository
inv uniqueInterfaceNames(i::repo:Interface,j::repo:Interface):
 self.interfaces$\hspace{-0.6ex}$-$\hspace{-0.3ex}$>forAll(i,j | i <> j implies $\hspace{-0.6ex}$i.entityName <> j.entityName)

// global variable
var interfaceNameCount : Map<String,Integer>

// response action
on creation of interface:repo:Interface 
restore inv interfaceNamesUnique(i::repo:Interface, j::repo:Interface)
by { 
  var occurrences = interfaceNameCount.get(i.entityName)
  occurrences = (occurrences == null) ? 2 : occurrences++
  interfaceNameCount.put(i.entityName, occurrences)
  interface.entityName += occurrences
}