import http://east-adl.info/2.1.10/eastadl21/east_adl/structure/functionmodeling as eastadl
import http://edu.kit.ipd.sdq.smlnk/1.0 as smlnk

map eastadl::FunctionType to smlnk::Block {
// the port reference of FunctionType is typed with FunctionPort 
// instead of writing port:FunctionPort to ... { when port instanceof FunctionFlowPort
// we shortly write port:FunctionFlowPort to ... {
	with port:FunctionFlowPort to inPorts:InPortBlock { 
		when port.direction = EADirectionKind::in
	}
	with port:FunctionFlowPort to outPorts:OutPortBlock { 
		when port.direction = EADirectionKind::out
	}
	// we cannot add an or-Condition for inout to the when clauses for the directions (when port.direction = EADirectionKind::in or port.direction = EADirectionKind::inout)
	// 		if an InPort is created in smlnk, a transformation has to create a FunctionFlowPort with direction inout
	//		from the or-clause we would not be able to know whether a FunctionFlowPort with direction in or inout should be created
	// TODO: SUCH CASES HAVE TO BE CHECKED BY THE MIR-COMPILER!
	// therefore, we add a new language feature for this special 1to2-mapping: and (semantics 
	with port:FunctionFlowPort to inPorts:InPortBlock and outPorts:OutPortBlock {
		when port.direction = EADirectionKind::inout
	} 
}