/**
 * generated by Xtext 2.10.0
 */
package tools.vitruv.dsls.response.responseLanguage.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import tools.vitruv.dsls.mirbase.mirBase.MirBasePackage;
import tools.vitruv.dsls.mirbase.mirBase.ModelElement;

import tools.vitruv.dsls.response.responseLanguage.CorrespondingObjectCodeBlock;
import tools.vitruv.dsls.response.responseLanguage.PreconditionCodeBlock;
import tools.vitruv.dsls.response.responseLanguage.ResponseLanguagePackage;
import tools.vitruv.dsls.response.responseLanguage.RetrieveModelElement;
import tools.vitruv.dsls.response.responseLanguage.TagCodeBlock;
import tools.vitruv.dsls.response.responseLanguage.Taggable;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Retrieve Model Element</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link tools.vitruv.dsls.response.responseLanguage.impl.RetrieveModelElementImpl#getElement <em>Element</em>}</li>
 *   <li>{@link tools.vitruv.dsls.response.responseLanguage.impl.RetrieveModelElementImpl#getTag <em>Tag</em>}</li>
 *   <li>{@link tools.vitruv.dsls.response.responseLanguage.impl.RetrieveModelElementImpl#getName <em>Name</em>}</li>
 *   <li>{@link tools.vitruv.dsls.response.responseLanguage.impl.RetrieveModelElementImpl#isOptional <em>Optional</em>}</li>
 *   <li>{@link tools.vitruv.dsls.response.responseLanguage.impl.RetrieveModelElementImpl#isAbscence <em>Abscence</em>}</li>
 *   <li>{@link tools.vitruv.dsls.response.responseLanguage.impl.RetrieveModelElementImpl#getCorrespondenceSource <em>Correspondence Source</em>}</li>
 *   <li>{@link tools.vitruv.dsls.response.responseLanguage.impl.RetrieveModelElementImpl#getPrecondition <em>Precondition</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RetrieveModelElementImpl extends MatcherStatementImpl implements RetrieveModelElement
{
  /**
   * The cached value of the '{@link #getElement() <em>Element</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElement()
   * @generated
   * @ordered
   */
  protected EClass element;

  /**
   * The cached value of the '{@link #getTag() <em>Tag</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTag()
   * @generated
   * @ordered
   */
  protected TagCodeBlock tag;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #isOptional() <em>Optional</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOptional()
   * @generated
   * @ordered
   */
  protected static final boolean OPTIONAL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isOptional() <em>Optional</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOptional()
   * @generated
   * @ordered
   */
  protected boolean optional = OPTIONAL_EDEFAULT;

  /**
   * The default value of the '{@link #isAbscence() <em>Abscence</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAbscence()
   * @generated
   * @ordered
   */
  protected static final boolean ABSCENCE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isAbscence() <em>Abscence</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAbscence()
   * @generated
   * @ordered
   */
  protected boolean abscence = ABSCENCE_EDEFAULT;

  /**
   * The cached value of the '{@link #getCorrespondenceSource() <em>Correspondence Source</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCorrespondenceSource()
   * @generated
   * @ordered
   */
  protected CorrespondingObjectCodeBlock correspondenceSource;

  /**
   * The cached value of the '{@link #getPrecondition() <em>Precondition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrecondition()
   * @generated
   * @ordered
   */
  protected PreconditionCodeBlock precondition;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RetrieveModelElementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ResponseLanguagePackage.Literals.RETRIEVE_MODEL_ELEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getElement()
  {
    if (element != null && element.eIsProxy())
    {
      InternalEObject oldElement = (InternalEObject)element;
      element = (EClass)eResolveProxy(oldElement);
      if (element != oldElement)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__ELEMENT, oldElement, element));
      }
    }
    return element;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass basicGetElement()
  {
    return element;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setElement(EClass newElement)
  {
    EClass oldElement = element;
    element = newElement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__ELEMENT, oldElement, element));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TagCodeBlock getTag()
  {
    return tag;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTag(TagCodeBlock newTag, NotificationChain msgs)
  {
    TagCodeBlock oldTag = tag;
    tag = newTag;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__TAG, oldTag, newTag);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTag(TagCodeBlock newTag)
  {
    if (newTag != tag)
    {
      NotificationChain msgs = null;
      if (tag != null)
        msgs = ((InternalEObject)tag).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__TAG, null, msgs);
      if (newTag != null)
        msgs = ((InternalEObject)newTag).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__TAG, null, msgs);
      msgs = basicSetTag(newTag, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__TAG, newTag, newTag));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isOptional()
  {
    return optional;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOptional(boolean newOptional)
  {
    boolean oldOptional = optional;
    optional = newOptional;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__OPTIONAL, oldOptional, optional));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isAbscence()
  {
    return abscence;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAbscence(boolean newAbscence)
  {
    boolean oldAbscence = abscence;
    abscence = newAbscence;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__ABSCENCE, oldAbscence, abscence));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CorrespondingObjectCodeBlock getCorrespondenceSource()
  {
    return correspondenceSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCorrespondenceSource(CorrespondingObjectCodeBlock newCorrespondenceSource, NotificationChain msgs)
  {
    CorrespondingObjectCodeBlock oldCorrespondenceSource = correspondenceSource;
    correspondenceSource = newCorrespondenceSource;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__CORRESPONDENCE_SOURCE, oldCorrespondenceSource, newCorrespondenceSource);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCorrespondenceSource(CorrespondingObjectCodeBlock newCorrespondenceSource)
  {
    if (newCorrespondenceSource != correspondenceSource)
    {
      NotificationChain msgs = null;
      if (correspondenceSource != null)
        msgs = ((InternalEObject)correspondenceSource).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__CORRESPONDENCE_SOURCE, null, msgs);
      if (newCorrespondenceSource != null)
        msgs = ((InternalEObject)newCorrespondenceSource).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__CORRESPONDENCE_SOURCE, null, msgs);
      msgs = basicSetCorrespondenceSource(newCorrespondenceSource, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__CORRESPONDENCE_SOURCE, newCorrespondenceSource, newCorrespondenceSource));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PreconditionCodeBlock getPrecondition()
  {
    return precondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrecondition(PreconditionCodeBlock newPrecondition, NotificationChain msgs)
  {
    PreconditionCodeBlock oldPrecondition = precondition;
    precondition = newPrecondition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__PRECONDITION, oldPrecondition, newPrecondition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPrecondition(PreconditionCodeBlock newPrecondition)
  {
    if (newPrecondition != precondition)
    {
      NotificationChain msgs = null;
      if (precondition != null)
        msgs = ((InternalEObject)precondition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__PRECONDITION, null, msgs);
      if (newPrecondition != null)
        msgs = ((InternalEObject)newPrecondition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__PRECONDITION, null, msgs);
      msgs = basicSetPrecondition(newPrecondition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__PRECONDITION, newPrecondition, newPrecondition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__TAG:
        return basicSetTag(null, msgs);
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__CORRESPONDENCE_SOURCE:
        return basicSetCorrespondenceSource(null, msgs);
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__PRECONDITION:
        return basicSetPrecondition(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__ELEMENT:
        if (resolve) return getElement();
        return basicGetElement();
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__TAG:
        return getTag();
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__NAME:
        return getName();
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__OPTIONAL:
        return isOptional();
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__ABSCENCE:
        return isAbscence();
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__CORRESPONDENCE_SOURCE:
        return getCorrespondenceSource();
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__PRECONDITION:
        return getPrecondition();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__ELEMENT:
        setElement((EClass)newValue);
        return;
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__TAG:
        setTag((TagCodeBlock)newValue);
        return;
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__NAME:
        setName((String)newValue);
        return;
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__OPTIONAL:
        setOptional((Boolean)newValue);
        return;
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__ABSCENCE:
        setAbscence((Boolean)newValue);
        return;
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__CORRESPONDENCE_SOURCE:
        setCorrespondenceSource((CorrespondingObjectCodeBlock)newValue);
        return;
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__PRECONDITION:
        setPrecondition((PreconditionCodeBlock)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__ELEMENT:
        setElement((EClass)null);
        return;
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__TAG:
        setTag((TagCodeBlock)null);
        return;
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__OPTIONAL:
        setOptional(OPTIONAL_EDEFAULT);
        return;
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__ABSCENCE:
        setAbscence(ABSCENCE_EDEFAULT);
        return;
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__CORRESPONDENCE_SOURCE:
        setCorrespondenceSource((CorrespondingObjectCodeBlock)null);
        return;
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__PRECONDITION:
        setPrecondition((PreconditionCodeBlock)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__ELEMENT:
        return element != null;
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__TAG:
        return tag != null;
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__OPTIONAL:
        return optional != OPTIONAL_EDEFAULT;
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__ABSCENCE:
        return abscence != ABSCENCE_EDEFAULT;
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__CORRESPONDENCE_SOURCE:
        return correspondenceSource != null;
      case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__PRECONDITION:
        return precondition != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == ModelElement.class)
    {
      switch (derivedFeatureID)
      {
        case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__ELEMENT: return MirBasePackage.MODEL_ELEMENT__ELEMENT;
        default: return -1;
      }
    }
    if (baseClass == Taggable.class)
    {
      switch (derivedFeatureID)
      {
        case ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__TAG: return ResponseLanguagePackage.TAGGABLE__TAG;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == ModelElement.class)
    {
      switch (baseFeatureID)
      {
        case MirBasePackage.MODEL_ELEMENT__ELEMENT: return ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__ELEMENT;
        default: return -1;
      }
    }
    if (baseClass == Taggable.class)
    {
      switch (baseFeatureID)
      {
        case ResponseLanguagePackage.TAGGABLE__TAG: return ResponseLanguagePackage.RETRIEVE_MODEL_ELEMENT__TAG;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", optional: ");
    result.append(optional);
    result.append(", abscence: ");
    result.append(abscence);
    result.append(')');
    return result.toString();
  }

} //RetrieveModelElementImpl
