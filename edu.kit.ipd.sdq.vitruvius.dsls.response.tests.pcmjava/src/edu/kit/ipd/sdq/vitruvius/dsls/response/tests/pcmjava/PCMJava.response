import "http://www.emftext.org/java" as java
import "http://palladiosimulator.org/PalladioComponentModel/5.1" as pcm

response: CreateHelperClassForRepository
trigger: insert root pcm.repository.Repository
create model: file name relative to project folder: {
	edu.kit.ipd.sdq.vitruvius.dsls.response.tests.pcmjava.PCMJavaHelper.repositoryToJavaHelper.getPathInProject(change.newValue);
}
create root element: compilationUnit of type java.containers.CompilationUnit corresponding to change.newValue
create model element: javaClass of type java.classifiers.Class corresponding to change.newValue
execute: {
	val helper = edu.kit.ipd.sdq.vitruvius.dsls.response.tests.pcmjava.PCMJavaHelper.repositoryToJavaHelper;
	compilationUnit.namespaces += helper.getPackageName(change.newValue);
	val helperClassName = helper.getClassName(change.newValue);
	compilationUnit.name = helperClassName;
	javaClass.name = helperClassName;
	javaClass.addModifier(org.emftext.language.java.modifiers.ModifiersFactory.eINSTANCE.createPublic());
	compilationUnit.classifiers.add(javaClass);
}

response: CreateClassForBasicComponent
trigger: insert in list pcm.repository.Repository[components__Repository]
create model: file name relative to project folder: {
	edu.kit.ipd.sdq.vitruvius.dsls.response.tests.pcmjava.PCMJavaHelper.componentToClass.getPathInProject(change.newValue);
}
create root element: compilationUnit of type java.containers.CompilationUnit corresponding to change.newValue
create model element: javaClass of type java.classifiers.Class corresponding to change.newValue
execute: {
	val helper = edu.kit.ipd.sdq.vitruvius.dsls.response.tests.pcmjava.PCMJavaHelper.componentToClass;
	compilationUnit.namespaces += helper.getPackageName(change.newValue);
	val componentClassName = helper.getClassName(change.newValue);
	compilationUnit.name = componentClassName;
	javaClass.name = componentClassName;
	javaClass.addModifier(org.emftext.language.java.modifiers.ModifiersFactory.eINSTANCE.createPublic());
	compilationUnit.classifiers.add(javaClass);
}

response: CreateInterfaceForInterface
trigger: insert in list pcm.repository.Repository[interfaces__Repository]
create model: file name relative to project folder: {
	edu.kit.ipd.sdq.vitruvius.dsls.response.tests.pcmjava.PCMJavaHelper.interfaceToInterface.getPathInProject(change.newValue);
}
create root element: compilationUnit of type java.containers.CompilationUnit corresponding to change.newValue
create model element: javaInterface of type java.classifiers.Interface corresponding to change.newValue
execute: {
	val helper = edu.kit.ipd.sdq.vitruvius.dsls.response.tests.pcmjava.PCMJavaHelper.interfaceToInterface;
	compilationUnit.namespaces += helper.getPackageName(change.newValue);
	val helperClassName = helper.getClassName(change.newValue);
	compilationUnit.name = helperClassName;
	javaInterface.name = helperClassName;
	javaInterface.addModifier(org.emftext.language.java.modifiers.ModifiersFactory.eINSTANCE.createPublic());
	compilationUnit.classifiers.add(javaInterface);
}