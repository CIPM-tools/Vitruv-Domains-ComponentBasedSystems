/*
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package tools.vitruvius.dsls.mapping

import com.google.inject.Binder
import com.google.inject.name.Names
import tools.vitruvius.dsls.mapping.generator.IMappingLanguageGenerator
import tools.vitruvius.dsls.mapping.generator.MappingLanguageGenerator
import tools.vitruvius.dsls.mapping.linking.MappingLanguageLinkingService
import tools.vitruvius.dsls.mapping.postprocessor.MappingLanguageDerivedStateComputer
import tools.vitruvius.dsls.mapping.scoping.MappingLanguageScopeProviderDelegate
import tools.vitruvius.dsls.mirbase.scoping.MirBaseGlobalScopeProvider
import tools.vitruvius.dsls.mirbase.scoping.MirBaseQualifiedNameConverter
import org.eclipse.xtext.naming.IQualifiedNameConverter
import org.eclipse.xtext.resource.IDerivedStateComputer
import org.eclipse.xtext.scoping.IScopeProvider
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
class MappingLanguageRuntimeModule extends AbstractMappingLanguageRuntimeModule {
	override bindIGlobalScopeProvider() {
		return MirBaseGlobalScopeProvider
	}
	
	override bindILinkingService() {
		return MappingLanguageLinkingService
	}
	
	override void configureIScopeProviderDelegate(Binder binder) {
		binder.bind(IScopeProvider)
		      .annotatedWith(Names.named(AbstractDeclarativeScopeProvider.NAMED_DELEGATE))
		      .to(MappingLanguageScopeProviderDelegate)
	}
	
	override Class<? extends IQualifiedNameConverter> bindIQualifiedNameConverter() {
		return MirBaseQualifiedNameConverter
	}
	
	override Class<? extends IDerivedStateComputer> bindIDerivedStateComputer() {
		return MappingLanguageDerivedStateComputer
	}
	
	def Class<? extends IMappingLanguageGenerator> bindIMappingLanguageGenerator() {
		return MappingLanguageGenerator
	}
	
	def void configureGenerator(Binder binder) {
		binder.bind(String)
		      .annotatedWith(Names.named(MappingLanguageGenerator.PACKAGE_NAME_FIELD))
		      .toInstance("mappings.generated")
	}
}
