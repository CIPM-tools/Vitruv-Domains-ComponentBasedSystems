import "edu.kit.ipd.sdq.metamodels.persons" as persons
import "edu.kit.ipd.sdq.metamodels.families" as families

reactions: FamiliesToPersons
in reaction to changes in Families
execute actions in Persons

reaction CreatedMember {
	after element families::Member created  and inserted as root
	call createPerson(newValue)
}

routine createPerson(families::Member member){
	action{
		    //Sollte vorher überprüft werden ob wirklich männlich
			val person = create persons::Male and initialize {
			person.fullName = member.firstName +" "+member.familyFather.lastName
			if(member.familySon != null || member.familyFather != null ){
				
			}
		}
		add correspondence between member and person
		add correspondence between member.familyFather and person
	}
}

reaction DeletedMember {
	after element families::Member deleted
	call deletePerson(affectedEObject)
}

routine deletePerson(families::Member member){
	match{
		val person = retrieve persons::Person corresponding to member
	}
	
	action{
		delete person
	}
}

reaction ChangedFirstName {
	after attribute replaced at families::Member[firstName]
	call changeFullNameFromFirst(affectedEObject) 
}

routine changeFullNameFromFirst(families::Member member){
	match {
		val person = retrieve persons::Person corresponding to member
	}
	action {
		update person {
			person.fullName = member.firstName + " " + member.familyFather.lastName 
			}
	}
}

reaction ChangedLastName {
	after attribute replaced at families::Family[lastName]
	call changeFullNameFromLast(affectedEObject)
}

routine changeFullNameFromLast(families::Family family){
	match {
		//Sollten mehrere sein
		val person = retrieve persons::Person corresponding to family
	}
	action {
		update person {
			person.fullName = person.fullName.split(" ").get(0) + " " + family.lastName 
			}
	}
}