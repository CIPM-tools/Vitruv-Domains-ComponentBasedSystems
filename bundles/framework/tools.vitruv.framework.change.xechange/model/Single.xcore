@Ecore(nsURI="http://tools.vitruv/EChange/Feature/Single/1.0")
@GenModel(modelName="Change") //@GenModel(editDirectory="/tools.vitruv.framework.change.echange.edit/src", editorDirectory="/tools.vitruv.framework.change.echange.editor/src", modelName="Change", modelPluginClass="", editPluginClass="tools.vitruv.framework.change.provider.ChangeEditPlugin", editorPluginClass="tools.vitruv.framework.change.echange.presentation.ChangeEditorPlugin", testsDirectory="tools.vitruv.framework.change.echange.tests/src", testSuiteClass="tools.vitruv.framework.change.echange.tests.ChangeAllTests", importerID="org.eclipse.emf.importer.ecore", editorPluginID="tools.vitruv.framework.change.echange.editor", testsPluginID="tools.vitruv.framework.change.echange.tests")
package tools.vitruv.framework.change.echange.feature.single

import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EStructuralFeature

abstract class ReplaceSingleValuedFeatureEChange<A extends EObject , F extends EStructuralFeature , T extends Object> extends tools.vitruv.framework.change.echange.feature.UpdateSingleValuedFeatureEChange < A , F > , tools.vitruv.framework.change.echange.AdditiveEChange < T > , tools.vitruv.framework.change.echange.SubtractiveEChange < T > {
	@GenModel(body="return !java.util.Objects.equals(getOldValue(), getAffectedFeature().getDefaultValue());")
	op boolean isFromNonDefaultValue()
	@GenModel(body="return !java.util.Objects.equals(getNewValue(), getAffectedFeature().getDefaultValue());")
	op boolean isToNonDefaultValue()
}