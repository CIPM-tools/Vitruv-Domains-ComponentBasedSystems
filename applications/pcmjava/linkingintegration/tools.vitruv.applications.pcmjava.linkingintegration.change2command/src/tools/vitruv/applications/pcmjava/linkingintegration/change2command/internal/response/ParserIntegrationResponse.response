import org.emftext.language.java.members.Method
import tools.vitruv.framework.correspondence.CorrespondenceModelUtil

import "http://www.emftext.org/java" as java using simple names
import "http://palladiosimulator.org/PalladioComponentModel/5.1" as pcm using simple names

response collection: ParserIntegrationResponse
from metamodel java to metamodel pcm

response: ChangeFieldModifierEventParser {
	after list entry inserted java.Field[annotationsAndModifiers]
	call { }
}

response: RemoveFieldModifierEventParser {
	after list entry removed java.Field[annotationsAndModifiers]
	call { }
}

response: AddMethodEventParser {
	after list entry inserted java.ConcreteClassifier[members]
		with  change.newValue instanceof Method
	call addedMethodEventParser(change.affectedEObject, change.newValue as Method)
}

routine: addedMethodEventParser(java.ConcreteClassifier clazz, java.Method method) {
	match {
		retrieve required element pcm.OperationInterface as opInterface corresponding to clazz
	}
	effect {
		create element pcm.OperationSignature as opSig initialized as {
			opSig.entityName = method.name
			opSig.interface__OperationSignature = opInterface
			// TODO is this necessary or can we use the add correspondence statement creating a ResponseCorrespondence?
			CorrespondenceModelUtil.createAndAddCorrespondence(correspondenceModel, opSig, method)		
		}
	}
}
