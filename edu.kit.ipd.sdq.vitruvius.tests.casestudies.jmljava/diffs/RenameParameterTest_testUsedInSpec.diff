===================================================================
--- specs\javacard\framework\APDU.jml
+++ specs\javacard\framework\APDU.jml
@@ -31,27 +31,22 @@
 	/*@
 	public invariant _Lc >= 0 && _Lc < 256;
 	@*/
-
 	private /*@ spec_public */ short _Lc;
 
 	/*@
 	public invariant _Lr >= 0 && _Lr <= 256;
 	@*/
-
 	private /*@ spec_public */ short _Lr;
 
 	/*@
 	public invariant _Le >= 0 && _Le <= 256;
 	@*/
-
 	private /*@ spec_public */ short _Le;
 
 	/*@
 	public invariant BUFFER_LENGTH >= 37;
 	@*/
-
 	private final static /*@ spec_public */ short BUFFER_LENGTH;
-
 	private /*@ spec_public */ byte[] _buffer;
 
 	/*@
@@ -73,83 +68,44 @@
 	/*@
 	public invariant ( _apduState >= STATE_INITIAL && _apduState <= STATE_FULL_OUTGOING ) || _apduState == STATE_ERROR_NO_T0_GETRESPONSE || _apduState == STATE_ERROR_T1_IFD_ABORT || _apduState == STATE_ERROR_IO || _apduState == STATE_ERROR_NO_T0_REISSUE;
 	@*/
-
 	private /*@ spec_public */ byte _apduState;
-
 	public static final byte PROTOCOL_MEDIA_CONTACTLESS_TYPE_A;
-
 	public static final byte PROTOCOL_MEDIA_CONTACTLESS_TYPE_B;
-
 	public static final byte PROTOCOL_MEDIA_DEFAULT;
-
 	public static final byte PROTOCOL_MEDIA_MASK;
-
 	public static final byte PROTOCOL_MEDIA_USB;
-
 	public static final byte PROTOCOL_T0;
-
 	public static final byte PROTOCOL_T1;
-
 	public static final byte PROTOCOL_TYPE_MASK;
-
 	public static final byte STATE_ERROR_NO_T0_GETRESPONSE;
-
 	public static final byte STATE_ERROR_T1_IFD_ABORT;
-
 	public static final byte STATE_ERROR_IO;
-
 	public static final byte STATE_ERROR_NO_T0_REISSUE;
-
 	public static final byte STATE_INITIAL;
-
 	public static final byte STATE_PARTIAL_INCOMING;
-
 	public static final byte STATE_FULL_INCOMING;
-
 	public static final byte STATE_OUTGOING;
-
 	public static final byte STATE_OUTGOING_LENGTH_KNOWN;
-
 	public static final byte STATE_PARTIAL_OUTGOING;
-
 	public static final byte STATE_FULL_OUTGOING;
-
 	//@ public static invariant PROTOCOL_MEDIA_CONTACTLESS_TYPE_A == 0xff;
-
 	//@ public static invariant PROTOCOL_MEDIA_CONTACTLESS_TYPE_B == 0xef;
-
 	//@ public static invariant PROTOCOL_MEDIA_DEFAULT == 0;
-
 	//@ public static invariant PROTOCOL_MEDIA_MASK == 0x8f;
-
 	//@ public static invariant PROTOCOL_MEDIA_USB == 0xdf;
-
 	//@ public static invariant PROTOCOL_T0 == 0;
-
 	//@ public static invariant PROTOCOL_T1 == 1;
-
 	//@ public static invariant PROTOCOL_TYPE_MASK == 0xf;
-
 	//@ public static invariant STATE_ERROR_NO_T0_GETRESPONSE == 0x80;
-
 	//@ public static invariant STATE_ERROR_T1_IFD_ABORT == 0x81;
-
 	//@ public static invariant STATE_ERROR_IO == 0x82;
-
 	//@ public static invariant STATE_ERROR_NO_T0_REISSUE == 0x83;
-
 	//@ public static invariant STATE_INITIAL == 0;
-
 	//@ public static invariant STATE_PARTIAL_INCOMING == 1;
-
 	//@ public static invariant STATE_FULL_INCOMING == 2;
-
 	//@ public static invariant STATE_OUTGOING == 3;
-
 	//@ public static invariant STATE_OUTGOING_LENGTH_KNOWN == 4;
-
 	//@ public static invariant STATE_PARTIAL_OUTGOING == 5;
-
 	//@ public static invariant STATE_FULL_OUTGOING == 6;
 
 	/*@
@@ -232,12 +188,12 @@
 
 	/*@
 	public normal_behavior
-	requires _apduState == STATE_PARTIAL_INCOMING || _apduState == STATE_FULL_INCOMING && bOff >= 0 && bOff <= _buffer.length;
+	requires _apduState == STATE_PARTIAL_INCOMING || _apduState == STATE_FULL_INCOMING && bOffRENAMED >= 0 && bOffRENAMED <= _buffer.length;
 	ensures ! ( \old( _apduState ) == STATE_FULL_INCOMING ) || ( \result == 0 );
-	ensures ! ( \old( _apduState ) == STATE_PARTIAL_INCOMING ) || ( ! ( \old( _Lc ) <= BUFFER_LENGTH - bOff ) || ( \result == \old( _Lc ) && _apduState == STATE_FULL_INCOMING ) );
-	ensures ( \old( _apduState ) == STATE_PARTIAL_INCOMING ) || ( ! ( \old( _Lc ) > BUFFER_LENGTH - bOff ) || ( \result == BUFFER_LENGTH - bOff && ( ! ( _Lc > 0 ) || ( _apduState == STATE_PARTIAL_INCOMING ) ) && ( ! ( _Lc == 0 ) || ( _apduState == STATE_FULL_INCOMING ) ) ) );
+	ensures ! ( \old( _apduState ) == STATE_PARTIAL_INCOMING ) || ( ! ( \old( _Lc ) <= BUFFER_LENGTH - bOffRENAMED ) || ( \result == \old( _Lc ) && _apduState == STATE_FULL_INCOMING ) );
+	ensures ( \old( _apduState ) == STATE_PARTIAL_INCOMING ) || ( ! ( \old( _Lc ) > BUFFER_LENGTH - bOffRENAMED ) || ( \result == BUFFER_LENGTH - bOffRENAMED && ( ! ( _Lc > 0 ) || ( _apduState == STATE_PARTIAL_INCOMING ) ) && ( ! ( _Lc == 0 ) || ( _apduState == STATE_FULL_INCOMING ) ) ) );
 	@*/
-	public short receiveBytes (short bOff) throws APDUException;
+	public short receiveBytes (short bOffRENAMED) throws APDUException;
 
 	/*@
 	public normal_behavior

===================================================================
--- src\javacard\framework\APDU.java
+++ src\javacard\framework\APDU.java
@@ -150,21 +150,21 @@
         return (short) (BUFFER_LENGTH - ISO7816.OFFSET_LC - 1);
     }
 
-    public short receiveBytes(short bOff) throws APDUException {
+    public short receiveBytes(short bOffRENAMED) throws APDUException {
         if (_apduState != STATE_PARTIAL_INCOMING
                 && _apduState != STATE_FULL_INCOMING) {
             APDUException.throwIt(APDUException.ILLEGAL_USE);
         }
         if (_apduState == STATE_FULL_INCOMING)
             return (short) 0;
-        if (_Lc <= (short) (BUFFER_LENGTH - bOff)) {
+        if (_Lc <= (short) (BUFFER_LENGTH - bOffRENAMED)) {
             _apduState = STATE_FULL_INCOMING;
             return _Lc;
         }
-        _Lc = (short) (_Lc - (short) (BUFFER_LENGTH - bOff));
+        _Lc = (short) (_Lc - (short) (BUFFER_LENGTH - bOffRENAMED));
         if (_Lc == 0)
             _apduState = STATE_FULL_INCOMING;
-        return (short) (BUFFER_LENGTH - bOff);
+        return (short) (BUFFER_LENGTH - bOffRENAMED);
     }
 
     public static APDU getCurrentAPDU() throws SecurityException {
