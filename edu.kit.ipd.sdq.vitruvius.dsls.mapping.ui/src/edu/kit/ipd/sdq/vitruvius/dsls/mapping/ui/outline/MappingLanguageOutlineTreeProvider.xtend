/*
 * generated by Xtext
 */
package edu.kit.ipd.sdq.vitruvius.dsls.mapping.ui.outline

import edu.kit.ipd.sdq.vitruvius.dsls.mapping.mappingLanguage.MappingFile
import edu.kit.ipd.sdq.vitruvius.dsls.mapping.mappingLanguage.NamedEClass
import org.eclipse.xtext.ui.editor.outline.impl.AbstractOutlineNode
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider
import org.eclipse.xtext.ui.editor.outline.impl.DocumentRootNode
import edu.kit.ipd.sdq.vitruvius.dsls.mapping.mappingLanguage.ConstraintBlock
import edu.kit.ipd.sdq.vitruvius.dsls.mapping.mappingLanguage.Mapping

/**
 * Customization of the default outline structure.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#outline
 */
class MappingLanguageOutlineTreeProvider extends DefaultOutlineTreeProvider {
	protected def _createChildren(DocumentRootNode parentNode, MappingFile mappingFile) {
		for (element : mappingFile.mappings) {
			createNode(parentNode, element);
		}
	}

//	protected def _createNode(AbstractOutlineNode parent, MappingFile mappingFile) {
//	  for (element : mappingFile.mappings) {
//	    createNode(parent, element);
//	  }
//	}
	protected def _createChildren(AbstractOutlineNode parent, NamedEClass eClass) {
		// only create node for the NamedEClass
	}

	protected def _createChildren(AbstractOutlineNode parent, ConstraintBlock constraintBlock) {
		// only create node for the ConstraintBlock
	}

	protected def _createChildren(AbstractOutlineNode parent, Mapping mapping) {
		mapping.signatures.filterNull.forEach [ createChildren(parent, it) ]
		mapping.constraintBlocks.filterNull.forEach [ createNode(parent, it) ]

		for (submapping : mapping.submappings) {
			createNode(parent, submapping)
		}
	}
}
