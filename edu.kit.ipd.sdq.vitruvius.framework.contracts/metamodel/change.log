+ AdditiveChange
+ SubtractiveChange
+ ReplaciveChange
+ AdditiveAttributeChange
+ SubtractiveAttributeChange
+ ReplaciveAttributeChange
+ AdditiveReferenceChange
+ SubtractiveReferenceChange
+ ReplaciveReferenceChange

- UnsetEAttribute.oldValue
+ UnsetEAttribute extends SubtractiveAttributeChange
- UnsetERefernce.oldValue
+ UnsetERefernce extends SubtractiveReferenceChange
- UnsetContainmentEReference
- UnsetNonContainmentEReference
+ UnsetEReference.isContainment():bool

+ InsertRootEObject
+ RemoveRootEObject
- CreateRootEObject.newValue
+ CreateRootEObject extends InsertRootEObject
- DeleteRootEObject.oldValue
+ DeleteRootEObject extends RemoveRootEObject
- ReplaceRootEObject.newValue
- ReplaceRootEObject.oldValue
+ ReplaceRootEObject extends DeleteERootObject, CreateRootEObject, 
+ MoveEObject

- InsertInEList.newValue
  + InsertInEList extends AdditiveChange
- RemoveFromEList.oldValue
  + RemoveFromEList extends SubtractiveChange
- ReplaceInEList.newValue
- ReplaceInEList.oldValue
- ReplaceInEList extends UpdateMultiValuedEFeature
+ ReplaceInEList extends RemoveFromEList, InsertInEList
~ PermuteEList.newIndexForElementAt:EIntegerObject -> EInt
~ PermuteEList.newIndexForElementAt.upperBound -1 -> 1

~ UpdateSingleValuedEAttribute -> ReplaceSingleValuedEAttribute
- UpdateSingleValuedEAttribute.oldValue
- UpdateSingleValuedEAttribute.newValue
+ UpdateSingleValuedEAttribute extends ReplaciveAttributeChange
+ InsertEAttributeValue extends AdditiveAttributeChange
+ RemoveEAttributeValue extends SubtractiveAttributeChange
- ReplaceEAttributeValue extends ReplaceInEList, UpdateEAttribute
+ ReplaceEAttributeValue extends RemoveEAttributeValue, InsertEAttributeValue, ReplaciveAttributeChange

+ UpdateEReference.isContainment():bool
- UpdateNonContainmentEReference
# jedes extends UpdateNonContainmentEReference durch extends UpdateEReference ersetzt
~ UpdateSingleValuedNonContainmentEReference -> ReplaceSingleValuedEReference
- ReplaceSingleValuedEReference.oldValue
- ReplaceSingleValuedEReference.newValue
+ ReplaceSingleValuedEReference extends ReplaciveReferenceChange
~ InsertNonContainmentEReference -> InsertEReference
+ InsertEReference extends AdditiveReferenceChange
~ RemoveNonContainmentEReference -> RemoveEReference
+ RemoveEReference extends SubtractiveReferenceChange
~ ReplaceNonContainmentEReference -> ReplaceEReference
+ ReplaceEReference extends ReplaciveReferenceChange
~ PermuteNonContainmentEReferenceValues -> PermuteEReferenceValues

~ UpdateSingleValuedContainmentEReference -> ReplaceSingleValuedContainmentEReference
- ReplaceSingleValuedContainmentEReference extends UpdateSingleValuedEAttribute, UpdateContainmentEReference
+ ReplaceSingleValuedContainmentEReference extends ReplaceSingleValuedEReference
~ CreateNonRootEObjectSingle -> CreateNonRootEObject
- CreateNonRootEObject.newValue
~ DeleteNonRootEObjectSingle -> DeleteNonRootEObject
- DeleteNonRootEObject.oldValue
~ ReplaceNonRootEObjectSingle -> ReplaceNonRootEObject
- ReplaceNonRootEObject.oldValue
- ReplaceNonRootEObject.newValue
- ReplaceNonRootEObject extends ReplaceSingleValuedContainmentEReference
+ ReplaceNonRootEObject extends DeleteNonRootEObject, CreateNonRootEObject
- InsertNonRootEObjectInContainmentList extends InsertInEList, UpdateContainmentEReference
+ InsertNonRootEObjectInContainmentList extends InsertEReference
- RemoveNonRootEObjectInContainmentList extends RemoveInEList, UpdateContainmentEReference
+ RemoveNonRootEObjectInContainmentList extends RemoveEReference
- CreateNonRootEObjectInList extends InsertInEList, UpdateContainmentEReference
+ CreateNonRootEObjectInList extends InsertNonRootEObjectInContainmentList
- DeleteNonRootEObjectInList extends DeleteInEList, UpdateContainmentEReference
+ DeleteNonRootEObjectInList extends RemoveNonRootEObjectInContainmentList
- ReplaceNonRootEObjectInList extends ReplaceInEList, UpdateContainmentEReference
+ ReplaceNonRootEObjectInList extends ReplaceEReference
- PermuteContainmentEReferenceValues
- UpdateContainmentEReference

-----------------------------------------


T so selten wie möglich festlegen



nicht jeder der von Add und Sub erbt erbt auch von Replacive, daher Replacive raus?

ReplaciveChange wieder löschen?
InsertInEList und RemoveFromEList können doch nicht vom allgemeinen AdditiveChange und SubtractiveChange erben