===================================================================
--- specs\javacard\framework\AID.jml
+++ specs\javacard\framework\AID.jml
@@ -18,26 +18,26 @@
 
 public class AID {
 
-	private /*@ spec_public */ byte[] _theAID;
+	private /*@ spec_public */ byte[] _theAIDRENAMED;
 
 	/*@
-	public invariant _theAID != null;
+	public invariant _theAIDRENAMED != null;
 	@*/
 
 	/*@
-	public invariant _theAID.length >= 5 && _theAID.length <= 16;
+	public invariant _theAIDRENAMED.length >= 5 && _theAIDRENAMED.length <= 16;
 	@*/
 
 	/*@
-	public invariant _theAID.owner == this;
+	public invariant _theAIDRENAMED.owner == this;
 	@*/
 
 	/*@
-	public constraint _theAID == \old( _theAID );
+	public constraint _theAIDRENAMED == \old( _theAIDRENAMED );
 	@*/
 
 	/*@
-	public constraint ( \forall short i; i >= 0 && i < _theAID.length; _theAID[i] == \old( _theAID[i] ) );
+	public constraint ( \forall short i; i >= 0 && i < _theAIDRENAMED.length; _theAIDRENAMED[i] == \old( _theAIDRENAMED[i] ) );
 	@*/
 
 	/*@
@@ -45,17 +45,17 @@
 	requires bArray != null;
 	requires length >= 5 && length <= 16;
 	requires offset >= 0 && offset + length <= bArray.length;
-	ensures _theAID.length == length;
-	ensures ( \forall short i; i >= 0 && i < length; _theAID[i] == bArray[offset + i] );
+	ensures _theAIDRENAMED.length == length;
+	ensures ( \forall short i; i >= 0 && i < length; _theAIDRENAMED[i] == bArray[offset + i] );
 	@*/
 	public AID (byte[] bArray, short offset, byte length) throws SystemException, SecurityException, NullPointerException, ArrayIndexOutOfBoundsException;
 
 	/*@
 	public normal_behavior
 	requires dest != null;
-	requires offset >= 0 && offset + _theAID.length <= dest.length;
-	ensures \result == _theAID.length;
-	ensures ( \forall int i; i >= 0 && i < _theAID.length; dest[offset + i] == _theAID[i] );
+	requires offset >= 0 && offset + _theAIDRENAMED.length <= dest.length;
+	ensures \result == _theAIDRENAMED.length;
+	ensures ( \forall int i; i >= 0 && i < _theAIDRENAMED.length; dest[offset + i] == _theAIDRENAMED[i] );
 	@*/
 	public final byte getBytes (byte[] dest, short offset) throws SecurityException, NullPointerException, ArrayIndexOutOfBoundsException;
 
@@ -95,9 +95,9 @@
 	/*@
 	public normal_behavior
 	requires dest != null;
-	requires aidOffset >= 0 && aidOffset <= _theAID.length;
+	requires aidOffset >= 0 && aidOffset <= _theAIDRENAMED.length;
 	requires oLength >= 0 && oOffset >= 0;
-	requires ! ( oLength == 0 ) || ( oOffset + _theAID.length - aidOffset <= dest.length );
+	requires ! ( oLength == 0 ) || ( oOffset + _theAIDRENAMED.length - aidOffset <= dest.length );
 	@*/
 	public final byte getPartialBytes (short aidOffset, byte[] dest, short oOffset, byte oLength) throws SecurityException, NullPointerException, ArrayIndexOutOfBoundsException;
 }

===================================================================
--- specs\javacard\framework\APDU.jml
+++ specs\javacard\framework\APDU.jml
@@ -31,27 +31,22 @@
 	/*@
 	public invariant _Lc >= 0 && _Lc < 256;
 	@*/
-
 	private /*@ spec_public */ short _Lc;
 
 	/*@
 	public invariant _Lr >= 0 && _Lr <= 256;
 	@*/
-
 	private /*@ spec_public */ short _Lr;
 
 	/*@
 	public invariant _Le >= 0 && _Le <= 256;
 	@*/
-
 	private /*@ spec_public */ short _Le;
 
 	/*@
 	public invariant BUFFER_LENGTH >= 37;
 	@*/
-
 	private final static /*@ spec_public */ short BUFFER_LENGTH;
-
 	private /*@ spec_public */ byte[] _buffer;
 
 	/*@
@@ -73,83 +68,44 @@
 	/*@
 	public invariant ( _apduState >= STATE_INITIAL && _apduState <= STATE_FULL_OUTGOING ) || _apduState == STATE_ERROR_NO_T0_GETRESPONSE || _apduState == STATE_ERROR_T1_IFD_ABORT || _apduState == STATE_ERROR_IO || _apduState == STATE_ERROR_NO_T0_REISSUE;
 	@*/
-
 	private /*@ spec_public */ byte _apduState;
-
 	public static final byte PROTOCOL_MEDIA_CONTACTLESS_TYPE_A;
-
 	public static final byte PROTOCOL_MEDIA_CONTACTLESS_TYPE_B;
-
 	public static final byte PROTOCOL_MEDIA_DEFAULT;
-
 	public static final byte PROTOCOL_MEDIA_MASK;
-
 	public static final byte PROTOCOL_MEDIA_USB;
-
 	public static final byte PROTOCOL_T0;
-
 	public static final byte PROTOCOL_T1;
-
 	public static final byte PROTOCOL_TYPE_MASK;
-
 	public static final byte STATE_ERROR_NO_T0_GETRESPONSE;
-
 	public static final byte STATE_ERROR_T1_IFD_ABORT;
-
 	public static final byte STATE_ERROR_IO;
-
 	public static final byte STATE_ERROR_NO_T0_REISSUE;
-
 	public static final byte STATE_INITIAL;
-
 	public static final byte STATE_PARTIAL_INCOMING;
-
 	public static final byte STATE_FULL_INCOMING;
-
 	public static final byte STATE_OUTGOING;
-
 	public static final byte STATE_OUTGOING_LENGTH_KNOWN;
-
 	public static final byte STATE_PARTIAL_OUTGOING;
-
 	public static final byte STATE_FULL_OUTGOING;
-
 	//@ public static invariant PROTOCOL_MEDIA_CONTACTLESS_TYPE_A == 0xff;
-
 	//@ public static invariant PROTOCOL_MEDIA_CONTACTLESS_TYPE_B == 0xef;
-
 	//@ public static invariant PROTOCOL_MEDIA_DEFAULT == 0;
-
 	//@ public static invariant PROTOCOL_MEDIA_MASK == 0x8f;
-
 	//@ public static invariant PROTOCOL_MEDIA_USB == 0xdf;
-
 	//@ public static invariant PROTOCOL_T0 == 0;
-
 	//@ public static invariant PROTOCOL_T1 == 1;
-
 	//@ public static invariant PROTOCOL_TYPE_MASK == 0xf;
-
 	//@ public static invariant STATE_ERROR_NO_T0_GETRESPONSE == 0x80;
-
 	//@ public static invariant STATE_ERROR_T1_IFD_ABORT == 0x81;
-
 	//@ public static invariant STATE_ERROR_IO == 0x82;
-
 	//@ public static invariant STATE_ERROR_NO_T0_REISSUE == 0x83;
-
 	//@ public static invariant STATE_INITIAL == 0;
-
 	//@ public static invariant STATE_PARTIAL_INCOMING == 1;
-
 	//@ public static invariant STATE_FULL_INCOMING == 2;
-
 	//@ public static invariant STATE_OUTGOING == 3;
-
 	//@ public static invariant STATE_OUTGOING_LENGTH_KNOWN == 4;
-
 	//@ public static invariant STATE_PARTIAL_OUTGOING == 5;
-
 	//@ public static invariant STATE_FULL_OUTGOING == 6;
 
 	/*@

===================================================================
--- src\javacard\framework\AID.java
+++ src\javacard\framework\AID.java
@@ -14,7 +14,7 @@
 
 public class AID {
 
-    private /*@spec_public*/ byte[] _theAID;
+    private /*@spec_public*/ byte[] _theAIDRENAMED;
 
     public AID(byte[] bArray, short offset, byte length)
             throws SystemException, SecurityException, NullPointerException,
@@ -26,9 +26,9 @@
         if (length < 0 || offset < 0
                 || (short) (offset + length) > bArray.length)
             throw KeYJCSystem.aioobe;
-        _theAID = new byte[length];
-        KeYJCSystem.setJavaOwner(_theAID, this);
-        Util.arrayCopy(bArray, offset, _theAID, (short) 0, length);
+        _theAIDRENAMED = new byte[length];
+        KeYJCSystem.setJavaOwner(_theAIDRENAMED, this);
+        Util.arrayCopy(bArray, offset, _theAIDRENAMED, (short) 0, length);
         KeYJCSystem.jvmSetOwner(this, KeYJCSystem.getInstance());
         KeYJCSystem.jvmSetPrivs(this, KeYJCSystem.P_PEP_OBJECT);
     }
@@ -43,12 +43,12 @@
                         .jvmGetOwner(KeYJCSystem.previousActiveObject))
                 && KeYJCSystem.jvmGetPrivs(dest) != KeYJCSystem.P_GLOBAL_ARRAY)
             throw KeYJCSystem.se;
-        if (offset < 0 || offset + _theAID.length > dest.length)
+        if (offset < 0 || offset + _theAIDRENAMED.length > dest.length)
             throw KeYJCSystem.aioobe;
         Util
-                .arrayCopy(_theAID, (short) 0, dest, offset,
-                        (short) _theAID.length);
-        return (byte) _theAID.length;
+                .arrayCopy(_theAIDRENAMED, (short) 0, dest, offset,
+                        (short) _theAIDRENAMED.length);
+        return (byte) _theAIDRENAMED.length;
     }
 
     public final boolean equals(Object anObject) throws SecurityException {
@@ -58,10 +58,10 @@
                 && KeYJCSystem.jvmGetPrivs(anObject) != KeYJCSystem.P_GLOBAL_ARRAY)
             throw KeYJCSystem.se;
         if (anObject == null || !(anObject instanceof AID)
-                || ((AID) anObject)._theAID.length != _theAID.length)
+                || ((AID) anObject)._theAIDRENAMED.length != _theAIDRENAMED.length)
             return false;
-        return (Util.arrayCompare(((AID) anObject)._theAID, (short) 0, _theAID,
-                (short) 0, (short) _theAID.length) == 0);
+        return (Util.arrayCompare(((AID) anObject)._theAIDRENAMED, (short) 0, _theAIDRENAMED,
+                (short) 0, (short) _theAIDRENAMED.length) == 0);
     }
 
     public final boolean equals(byte[] bArray, short offset, byte length)
@@ -76,9 +76,9 @@
         if (length < 0 || offset < 0
                 || (short) (offset + length) > bArray.length)
             throw KeYJCSystem.aioobe;
-        if (length != _theAID.length)
+        if (length != _theAIDRENAMED.length)
             return false;
-        return Util.arrayCompare(bArray, offset, _theAID, (short) 0, length) == 0;
+        return Util.arrayCompare(bArray, offset, _theAIDRENAMED, (short) 0, length) == 0;
     }
 
     public final boolean partialEquals(byte[] bArray, short offset, byte length)
@@ -93,9 +93,9 @@
         if (length < 0 || offset < 0
                 || (short) (offset + length) > bArray.length)
             throw KeYJCSystem.aioobe;
-        if (length > _theAID.length)
+        if (length > _theAIDRENAMED.length)
             return false;
-        return Util.arrayCompare(bArray, offset, _theAID, (short) 0, length) == 0;
+        return Util.arrayCompare(bArray, offset, _theAIDRENAMED, (short) 0, length) == 0;
     }
 
     public final boolean RIDEquals(AID otherAID) throws SecurityException {
@@ -106,7 +106,7 @@
                         .jvmGetOwner(KeYJCSystem.previousActiveObject))
                 && KeYJCSystem.jvmGetPrivs(otherAID) != KeYJCSystem.P_GLOBAL_ARRAY)
             throw KeYJCSystem.se;
-        return Util.arrayCompare(_theAID, (short) 0, otherAID._theAID,
+        return Util.arrayCompare(_theAIDRENAMED, (short) 0, otherAID._theAIDRENAMED,
                 (short) 0, (short) 5) == 0;
 
     }
@@ -121,15 +121,15 @@
                         .jvmGetOwner(KeYJCSystem.previousActiveObject))
                 && KeYJCSystem.jvmGetPrivs(dest) != KeYJCSystem.P_GLOBAL_ARRAY)
             throw KeYJCSystem.se;
-        if (oLength < 0 || aidOffset < 0 || aidOffset > _theAID.length
+        if (oLength < 0 || aidOffset < 0 || aidOffset > _theAIDRENAMED.length
                 || oOffset < 0)
             throw KeYJCSystem.aioobe;
-        short i = (oLength == 0) ? (short) (_theAID.length - aidOffset)
+        short i = (oLength == 0) ? (short) (_theAIDRENAMED.length - aidOffset)
                 : oLength;
-        if ((short) (aidOffset + i) > _theAID.length
+        if ((short) (aidOffset + i) > _theAIDRENAMED.length
                 || (short) (oOffset + i) > dest.length)
             throw KeYJCSystem.aioobe;
-        Util.arrayCopy(_theAID, aidOffset, dest, oOffset, i);
+        Util.arrayCopy(_theAIDRENAMED, aidOffset, dest, oOffset, i);
         return (byte) i;
     }
 }
