/*
 * generated by Xtext 2.9.0
 */
package edu.kit.ipd.sdq.vitruvius.dsls.response

import org.eclipse.xtext.scoping.IGlobalScopeProvider
import com.google.inject.name.Names
import com.google.inject.Binder
import org.eclipse.xtext.naming.IQualifiedNameConverter
import org.eclipse.xtext.linking.ILinkingService
import edu.kit.ipd.sdq.vitruvius.dsls.response.linking.ResponseLinkingService
import edu.kit.ipd.sdq.vitruvius.dsls.response.scoping.ResponseLanguageScopeProviderDelegate
import edu.kit.ipd.sdq.vitruvius.dsls.response.scoping.ResponseLanguageGlobalScopeProvider
import edu.kit.ipd.sdq.vitruvius.dsls.response.scoping.ResponseLanguageQualifiedNameConverter

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
class ResponseLanguageRuntimeModule extends AbstractResponseLanguageRuntimeModule {
	public override Class<? extends IGlobalScopeProvider> bindIGlobalScopeProvider() {
		return ResponseLanguageGlobalScopeProvider;
	}

	public override void configureIScopeProviderDelegate(Binder binder) {
		binder.bind(org.eclipse.xtext.scoping.IScopeProvider)
		      .annotatedWith(Names.named(org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider.NAMED_DELEGATE))
		      .to(ResponseLanguageScopeProviderDelegate);
	}
	
	public override Class<? extends IQualifiedNameConverter> bindIQualifiedNameConverter() {
		return ResponseLanguageQualifiedNameConverter;
	}
	
	public override Class<? extends ILinkingService> bindILinkingService() {
		return ResponseLinkingService;
	}
	
}
