/**
 * generated by Xtext 2.9.1
 */
package edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.util;

import edu.kit.ipd.sdq.vitruvius.dsls.mirbase.mirBase.MirBaseFile;

import edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ResponseLanguagePackage
 * @generated
 */
public class ResponseLanguageAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static ResponseLanguagePackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ResponseLanguageAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = ResponseLanguagePackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ResponseLanguageSwitch<Adapter> modelSwitch =
    new ResponseLanguageSwitch<Adapter>()
    {
      @Override
      public Adapter caseResponse(Response object)
      {
        return createResponseAdapter();
      }
      @Override
      public Adapter caseEffects(Effects object)
      {
        return createEffectsAdapter();
      }
      @Override
      public Adapter caseTargetChange(TargetChange object)
      {
        return createTargetChangeAdapter();
      }
      @Override
      public Adapter caseConcreteTargetModelChange(ConcreteTargetModelChange object)
      {
        return createConcreteTargetModelChangeAdapter();
      }
      @Override
      public Adapter caseCorrespondingModelElementCreate(CorrespondingModelElementCreate object)
      {
        return createCorrespondingModelElementCreateAdapter();
      }
      @Override
      public Adapter caseModelPersistence(ModelPersistence object)
      {
        return createModelPersistenceAdapter();
      }
      @Override
      public Adapter caseCorrespondingModelElementDelete(CorrespondingModelElementDelete object)
      {
        return createCorrespondingModelElementDeleteAdapter();
      }
      @Override
      public Adapter caseCorrespondingModelElementRetrieve(CorrespondingModelElementRetrieve object)
      {
        return createCorrespondingModelElementRetrieveAdapter();
      }
      @Override
      public Adapter caseCorrespondingModelElementRetrieveOrDelete(CorrespondingModelElementRetrieveOrDelete object)
      {
        return createCorrespondingModelElementRetrieveOrDeleteAdapter();
      }
      @Override
      public Adapter caseCorrespondingModelElementSpecificationWithPrecondition(CorrespondingModelElementSpecificationWithPrecondition object)
      {
        return createCorrespondingModelElementSpecificationWithPreconditionAdapter();
      }
      @Override
      public Adapter caseCorrespondingModelElementSpecification(CorrespondingModelElementSpecification object)
      {
        return createCorrespondingModelElementSpecificationAdapter();
      }
      @Override
      public Adapter caseArbitraryTargetMetamodelInstanceUpdate(ArbitraryTargetMetamodelInstanceUpdate object)
      {
        return createArbitraryTargetMetamodelInstanceUpdateAdapter();
      }
      @Override
      public Adapter casePreconditionCodeBlock(PreconditionCodeBlock object)
      {
        return createPreconditionCodeBlockAdapter();
      }
      @Override
      public Adapter caseCorrespondingObjectCodeBlock(CorrespondingObjectCodeBlock object)
      {
        return createCorrespondingObjectCodeBlockAdapter();
      }
      @Override
      public Adapter caseModelPathCodeBlock(ModelPathCodeBlock object)
      {
        return createModelPathCodeBlockAdapter();
      }
      @Override
      public Adapter caseExecutionCodeBlock(ExecutionCodeBlock object)
      {
        return createExecutionCodeBlockAdapter();
      }
      @Override
      public Adapter caseCodeBlock(CodeBlock object)
      {
        return createCodeBlockAdapter();
      }
      @Override
      public Adapter caseInvariantViolationEvent(InvariantViolationEvent object)
      {
        return createInvariantViolationEventAdapter();
      }
      @Override
      public Adapter caseTrigger(Trigger object)
      {
        return createTriggerAdapter();
      }
      @Override
      public Adapter caseModelChange(ModelChange object)
      {
        return createModelChangeAdapter();
      }
      @Override
      public Adapter caseConcreteModelElementChange(ConcreteModelElementChange object)
      {
        return createConcreteModelElementChangeAdapter();
      }
      @Override
      public Adapter caseAtomicConcreteModelElementChange(AtomicConcreteModelElementChange object)
      {
        return createAtomicConcreteModelElementChangeAdapter();
      }
      @Override
      public Adapter caseAtomicRootObjectChange(AtomicRootObjectChange object)
      {
        return createAtomicRootObjectChangeAdapter();
      }
      @Override
      public Adapter caseAtomicFeatureChange(AtomicFeatureChange object)
      {
        return createAtomicFeatureChangeAdapter();
      }
      @Override
      public Adapter caseAtomicMultiValuedFeatureChange(AtomicMultiValuedFeatureChange object)
      {
        return createAtomicMultiValuedFeatureChangeAdapter();
      }
      @Override
      public Adapter caseAtomicSingleValuedFeatureChange(AtomicSingleValuedFeatureChange object)
      {
        return createAtomicSingleValuedFeatureChangeAdapter();
      }
      @Override
      public Adapter caseArbitraryModelElementChange(ArbitraryModelElementChange object)
      {
        return createArbitraryModelElementChangeAdapter();
      }
      @Override
      public Adapter caseResponseFile(ResponseFile object)
      {
        return createResponseFileAdapter();
      }
      @Override
      public Adapter caseInsertRootChange(InsertRootChange object)
      {
        return createInsertRootChangeAdapter();
      }
      @Override
      public Adapter caseRemoveRootChange(RemoveRootChange object)
      {
        return createRemoveRootChangeAdapter();
      }
      @Override
      public Adapter caseMultiValuedFeatureInsertChange(MultiValuedFeatureInsertChange object)
      {
        return createMultiValuedFeatureInsertChangeAdapter();
      }
      @Override
      public Adapter caseMultiValuedFeatureRemoveChange(MultiValuedFeatureRemoveChange object)
      {
        return createMultiValuedFeatureRemoveChangeAdapter();
      }
      @Override
      public Adapter caseMultiValuedFeaturePermuteChange(MultiValuedFeaturePermuteChange object)
      {
        return createMultiValuedFeaturePermuteChangeAdapter();
      }
      @Override
      public Adapter caseSingleValuedFeatureCreate(SingleValuedFeatureCreate object)
      {
        return createSingleValuedFeatureCreateAdapter();
      }
      @Override
      public Adapter caseSingleValuedFeatureDelete(SingleValuedFeatureDelete object)
      {
        return createSingleValuedFeatureDeleteAdapter();
      }
      @Override
      public Adapter caseSingleValuedFeatureReplace(SingleValuedFeatureReplace object)
      {
        return createSingleValuedFeatureReplaceAdapter();
      }
      @Override
      public Adapter caseMirBaseFile(MirBaseFile object)
      {
        return createMirBaseFileAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.Response <em>Response</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.Response
   * @generated
   */
  public Adapter createResponseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.Effects <em>Effects</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.Effects
   * @generated
   */
  public Adapter createEffectsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.TargetChange <em>Target Change</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.TargetChange
   * @generated
   */
  public Adapter createTargetChangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ConcreteTargetModelChange <em>Concrete Target Model Change</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ConcreteTargetModelChange
   * @generated
   */
  public Adapter createConcreteTargetModelChangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.CorrespondingModelElementCreate <em>Corresponding Model Element Create</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.CorrespondingModelElementCreate
   * @generated
   */
  public Adapter createCorrespondingModelElementCreateAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ModelPersistence <em>Model Persistence</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ModelPersistence
   * @generated
   */
  public Adapter createModelPersistenceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.CorrespondingModelElementDelete <em>Corresponding Model Element Delete</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.CorrespondingModelElementDelete
   * @generated
   */
  public Adapter createCorrespondingModelElementDeleteAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.CorrespondingModelElementRetrieve <em>Corresponding Model Element Retrieve</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.CorrespondingModelElementRetrieve
   * @generated
   */
  public Adapter createCorrespondingModelElementRetrieveAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.CorrespondingModelElementRetrieveOrDelete <em>Corresponding Model Element Retrieve Or Delete</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.CorrespondingModelElementRetrieveOrDelete
   * @generated
   */
  public Adapter createCorrespondingModelElementRetrieveOrDeleteAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.CorrespondingModelElementSpecificationWithPrecondition <em>Corresponding Model Element Specification With Precondition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.CorrespondingModelElementSpecificationWithPrecondition
   * @generated
   */
  public Adapter createCorrespondingModelElementSpecificationWithPreconditionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.CorrespondingModelElementSpecification <em>Corresponding Model Element Specification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.CorrespondingModelElementSpecification
   * @generated
   */
  public Adapter createCorrespondingModelElementSpecificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ArbitraryTargetMetamodelInstanceUpdate <em>Arbitrary Target Metamodel Instance Update</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ArbitraryTargetMetamodelInstanceUpdate
   * @generated
   */
  public Adapter createArbitraryTargetMetamodelInstanceUpdateAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.PreconditionCodeBlock <em>Precondition Code Block</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.PreconditionCodeBlock
   * @generated
   */
  public Adapter createPreconditionCodeBlockAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.CorrespondingObjectCodeBlock <em>Corresponding Object Code Block</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.CorrespondingObjectCodeBlock
   * @generated
   */
  public Adapter createCorrespondingObjectCodeBlockAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ModelPathCodeBlock <em>Model Path Code Block</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ModelPathCodeBlock
   * @generated
   */
  public Adapter createModelPathCodeBlockAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ExecutionCodeBlock <em>Execution Code Block</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ExecutionCodeBlock
   * @generated
   */
  public Adapter createExecutionCodeBlockAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.CodeBlock <em>Code Block</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.CodeBlock
   * @generated
   */
  public Adapter createCodeBlockAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.InvariantViolationEvent <em>Invariant Violation Event</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.InvariantViolationEvent
   * @generated
   */
  public Adapter createInvariantViolationEventAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.Trigger <em>Trigger</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.Trigger
   * @generated
   */
  public Adapter createTriggerAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ModelChange <em>Model Change</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ModelChange
   * @generated
   */
  public Adapter createModelChangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ConcreteModelElementChange <em>Concrete Model Element Change</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ConcreteModelElementChange
   * @generated
   */
  public Adapter createConcreteModelElementChangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.AtomicConcreteModelElementChange <em>Atomic Concrete Model Element Change</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.AtomicConcreteModelElementChange
   * @generated
   */
  public Adapter createAtomicConcreteModelElementChangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.AtomicRootObjectChange <em>Atomic Root Object Change</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.AtomicRootObjectChange
   * @generated
   */
  public Adapter createAtomicRootObjectChangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.AtomicFeatureChange <em>Atomic Feature Change</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.AtomicFeatureChange
   * @generated
   */
  public Adapter createAtomicFeatureChangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.AtomicMultiValuedFeatureChange <em>Atomic Multi Valued Feature Change</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.AtomicMultiValuedFeatureChange
   * @generated
   */
  public Adapter createAtomicMultiValuedFeatureChangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.AtomicSingleValuedFeatureChange <em>Atomic Single Valued Feature Change</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.AtomicSingleValuedFeatureChange
   * @generated
   */
  public Adapter createAtomicSingleValuedFeatureChangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ArbitraryModelElementChange <em>Arbitrary Model Element Change</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ArbitraryModelElementChange
   * @generated
   */
  public Adapter createArbitraryModelElementChangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ResponseFile <em>Response File</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ResponseFile
   * @generated
   */
  public Adapter createResponseFileAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.InsertRootChange <em>Insert Root Change</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.InsertRootChange
   * @generated
   */
  public Adapter createInsertRootChangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.RemoveRootChange <em>Remove Root Change</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.RemoveRootChange
   * @generated
   */
  public Adapter createRemoveRootChangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.MultiValuedFeatureInsertChange <em>Multi Valued Feature Insert Change</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.MultiValuedFeatureInsertChange
   * @generated
   */
  public Adapter createMultiValuedFeatureInsertChangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.MultiValuedFeatureRemoveChange <em>Multi Valued Feature Remove Change</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.MultiValuedFeatureRemoveChange
   * @generated
   */
  public Adapter createMultiValuedFeatureRemoveChangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.MultiValuedFeaturePermuteChange <em>Multi Valued Feature Permute Change</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.MultiValuedFeaturePermuteChange
   * @generated
   */
  public Adapter createMultiValuedFeaturePermuteChangeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.SingleValuedFeatureCreate <em>Single Valued Feature Create</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.SingleValuedFeatureCreate
   * @generated
   */
  public Adapter createSingleValuedFeatureCreateAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.SingleValuedFeatureDelete <em>Single Valued Feature Delete</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.SingleValuedFeatureDelete
   * @generated
   */
  public Adapter createSingleValuedFeatureDeleteAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.SingleValuedFeatureReplace <em>Single Valued Feature Replace</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.SingleValuedFeatureReplace
   * @generated
   */
  public Adapter createSingleValuedFeatureReplaceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link edu.kit.ipd.sdq.vitruvius.dsls.mirbase.mirBase.MirBaseFile <em>File</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see edu.kit.ipd.sdq.vitruvius.dsls.mirbase.mirBase.MirBaseFile
   * @generated
   */
  public Adapter createMirBaseFileAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //ResponseLanguageAdapterFactory
