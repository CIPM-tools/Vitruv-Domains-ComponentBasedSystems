/**
 * generated by Xtext 2.9.1
 */
package edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.impl;

import edu.kit.ipd.sdq.vitruvius.dsls.mirbase.mirBase.MetamodelReference;

import edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ArbitraryTargetMetamodelInstanceUpdate;
import edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.ResponseLanguagePackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Arbitrary Target Metamodel Instance Update</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link edu.kit.ipd.sdq.vitruvius.dsls.response.responseLanguage.impl.ArbitraryTargetMetamodelInstanceUpdateImpl#getMetamodelReference <em>Metamodel Reference</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ArbitraryTargetMetamodelInstanceUpdateImpl extends TargetChangeImpl implements ArbitraryTargetMetamodelInstanceUpdate
{
  /**
   * The cached value of the '{@link #getMetamodelReference() <em>Metamodel Reference</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMetamodelReference()
   * @generated
   * @ordered
   */
  protected MetamodelReference metamodelReference;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ArbitraryTargetMetamodelInstanceUpdateImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ResponseLanguagePackage.Literals.ARBITRARY_TARGET_METAMODEL_INSTANCE_UPDATE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MetamodelReference getMetamodelReference()
  {
    return metamodelReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMetamodelReference(MetamodelReference newMetamodelReference, NotificationChain msgs)
  {
    MetamodelReference oldMetamodelReference = metamodelReference;
    metamodelReference = newMetamodelReference;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ResponseLanguagePackage.ARBITRARY_TARGET_METAMODEL_INSTANCE_UPDATE__METAMODEL_REFERENCE, oldMetamodelReference, newMetamodelReference);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMetamodelReference(MetamodelReference newMetamodelReference)
  {
    if (newMetamodelReference != metamodelReference)
    {
      NotificationChain msgs = null;
      if (metamodelReference != null)
        msgs = ((InternalEObject)metamodelReference).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ResponseLanguagePackage.ARBITRARY_TARGET_METAMODEL_INSTANCE_UPDATE__METAMODEL_REFERENCE, null, msgs);
      if (newMetamodelReference != null)
        msgs = ((InternalEObject)newMetamodelReference).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ResponseLanguagePackage.ARBITRARY_TARGET_METAMODEL_INSTANCE_UPDATE__METAMODEL_REFERENCE, null, msgs);
      msgs = basicSetMetamodelReference(newMetamodelReference, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ResponseLanguagePackage.ARBITRARY_TARGET_METAMODEL_INSTANCE_UPDATE__METAMODEL_REFERENCE, newMetamodelReference, newMetamodelReference));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ResponseLanguagePackage.ARBITRARY_TARGET_METAMODEL_INSTANCE_UPDATE__METAMODEL_REFERENCE:
        return basicSetMetamodelReference(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ResponseLanguagePackage.ARBITRARY_TARGET_METAMODEL_INSTANCE_UPDATE__METAMODEL_REFERENCE:
        return getMetamodelReference();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ResponseLanguagePackage.ARBITRARY_TARGET_METAMODEL_INSTANCE_UPDATE__METAMODEL_REFERENCE:
        setMetamodelReference((MetamodelReference)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ResponseLanguagePackage.ARBITRARY_TARGET_METAMODEL_INSTANCE_UPDATE__METAMODEL_REFERENCE:
        setMetamodelReference((MetamodelReference)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ResponseLanguagePackage.ARBITRARY_TARGET_METAMODEL_INSTANCE_UPDATE__METAMODEL_REFERENCE:
        return metamodelReference != null;
    }
    return super.eIsSet(featureID);
  }

} //ArbitraryTargetMetamodelInstanceUpdateImpl
