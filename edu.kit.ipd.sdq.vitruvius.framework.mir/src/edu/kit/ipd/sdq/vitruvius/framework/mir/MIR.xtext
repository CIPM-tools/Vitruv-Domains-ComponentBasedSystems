grammar edu.kit.ipd.sdq.vitruvius.framework.mir.MIR
	with org.eclipse.xtext.xbase.Xbase

generate mIR "http://www.kit.edu/ipd/sdq/vitruvius/framework/mir/MIR"

import "http://www.eclipse.org/xtext/xbase/Xbase" as xbase
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.eclipse.org/xtext/common/JavaVMTypes" as types

MIRFile:
	'generates' 'package' generatedPackage=QualifiedName
	('generates' 'type' generatedClass=QualifiedName)?
		
	(
		bundles+=Bundle |
		imports+=Import |
		mappings+=ClassMapping | 
		invariants+=Invariant |
		responses+=Response
	)*
;

Import:
	'import' 'package' package=[ecore::EPackage|STRING] 
	'as' name=ValidID;
	
Bundle:
	'bundle' bundleFQN=QualifiedName
;


// Mappings
ClassMapping:
	'map'
		mappedElements+=NamedEClass
	'and'
		mappedElements+=NamedEClass
	('{'
		('when-where' whenwhere = XBlockExpression)?
		(
		  ('with-block' withBlocks += XBlockExpression) |
		  ('with' withs += FeatureMapping)
		)*
	'}')?
;

FeatureMapping:
		mappedElements+=FeatureCall
	'and'
		mappedElements+=FeatureCall
	('{'
		(
		  ('with-block' withBlocks += XBlockExpression) |
		  ('with' withs += FeatureMapping)
		)*
	'}')?
;

NamedEClass returns TypedElement:
	{NamedEClass}
	representedEClass=[ecore::EClass|QualifiedName]
	('as' name=ValidID)?
;

TypedElementRef returns Ref:
	{TypedElementRef}
	ref=[TypedElement]
;

FeatureCall returns TypedElement:
	TypedElementRef
	({FeatureCall.ref=current} "."
		(
			'('
				tail=[ecore::EStructuralFeature|ValidID]
				("[" type=[ecore::EClassifier|QualifiedName] "]")?
			 ('as' name=ValidID)? ')'
		) 
	)*
;



// Invariants
EClassParameter:
	type=[ecore::EClass|QualifiedName]
	name=ValidID
;

Invariant:
	'context' context=[ecore::EClass|QualifiedName]
	'inv' name=ValidID ( '('
		((params += EClassParameter)
		 (',' params += EClassParameter)*)?
	')'
	)? ':'
	predicate=PredicateBlock
;

PredicateBlock returns ecore::EObject:
	('xbase' XBlockExpression) |
	('ocl' OCLBlock) |
	('java' JavaBlock)
;

ExpressionBlock returns ecore::EObject:
	('xbase' XBlockExpression) |
	('java' JavaBlock)
;

OCLBlock:
	oclString=STRING
;

JavaBlock:
	javaString=STRING
;

// Response
Response:
	'on'
	(action=ResponseAction 'of')?
	context=NamedEClass
	('restore' inv=[Invariant] 'by')?
	restoreAction=XBlockExpression
;

enum ResponseAction:
	ANY='any' |
	CREATE='create' |
	CHANGE='change'
;