/*
 * generated by Xtext
 */
grammar InternalJML;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package tools.vitruvius.domains.jml.language.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package tools.vitruvius.domains.jml.language.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import tools.vitruvius.domains.jml.language.services.JMLGrammarAccess;

}

@parser::members {
 
 	private JMLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(JMLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleCompilationUnit
entryRuleCompilationUnit 
:
{ before(grammarAccess.getCompilationUnitRule()); }
	 ruleCompilationUnit
{ after(grammarAccess.getCompilationUnitRule()); } 
	 EOF 
;

// Rule CompilationUnit
ruleCompilationUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompilationUnitAccess().getGroup()); }
(rule__CompilationUnit__Group__0)
{ after(grammarAccess.getCompilationUnitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration 
:
{ before(grammarAccess.getPackageDeclarationRule()); }
	 rulePackageDeclaration
{ after(grammarAccess.getPackageDeclarationRule()); } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDeclarationAccess().getGroup()); }
(rule__PackageDeclaration__Group__0)
{ after(grammarAccess.getPackageDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportDeclaration
entryRuleImportDeclaration 
:
{ before(grammarAccess.getImportDeclarationRule()); }
	 ruleImportDeclaration
{ after(grammarAccess.getImportDeclarationRule()); } 
	 EOF 
;

// Rule ImportDeclaration
ruleImportDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportDeclarationAccess().getGroup()); }
(rule__ImportDeclaration__Group__0)
{ after(grammarAccess.getImportDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifierDeclarationWithModifier
entryRuleClassifierDeclarationWithModifier 
:
{ before(grammarAccess.getClassifierDeclarationWithModifierRule()); }
	 ruleClassifierDeclarationWithModifier
{ after(grammarAccess.getClassifierDeclarationWithModifierRule()); } 
	 EOF 
;

// Rule ClassifierDeclarationWithModifier
ruleClassifierDeclarationWithModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassifierDeclarationWithModifierAccess().getGroup()); }
(rule__ClassifierDeclarationWithModifier__Group__0)
{ after(grammarAccess.getClassifierDeclarationWithModifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassOrInterfaceDeclaration
entryRuleClassOrInterfaceDeclaration 
:
{ before(grammarAccess.getClassOrInterfaceDeclarationRule()); }
	 ruleClassOrInterfaceDeclaration
{ after(grammarAccess.getClassOrInterfaceDeclarationRule()); } 
	 EOF 
;

// Rule ClassOrInterfaceDeclaration
ruleClassOrInterfaceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassOrInterfaceDeclarationAccess().getAlternatives()); }
(rule__ClassOrInterfaceDeclaration__Alternatives)
{ after(grammarAccess.getClassOrInterfaceDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModifier
entryRuleModifier 
:
{ before(grammarAccess.getModifierRule()); }
	 ruleModifier
{ after(grammarAccess.getModifierRule()); } 
	 EOF 
;

// Rule Modifier
ruleModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModifierAccess().getAlternatives()); }
(rule__Modifier__Alternatives)
{ after(grammarAccess.getModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegularModifier
entryRuleRegularModifier 
:
{ before(grammarAccess.getRegularModifierRule()); }
	 ruleRegularModifier
{ after(grammarAccess.getRegularModifierRule()); } 
	 EOF 
;

// Rule RegularModifier
ruleRegularModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegularModifierAccess().getModifierAssignment()); }
(rule__RegularModifier__ModifierAssignment)
{ after(grammarAccess.getRegularModifierAccess().getModifierAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassDeclaration
entryRuleClassDeclaration 
:
{ before(grammarAccess.getClassDeclarationRule()); }
	 ruleClassDeclaration
{ after(grammarAccess.getClassDeclarationRule()); } 
	 EOF 
;

// Rule ClassDeclaration
ruleClassDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassDeclarationAccess().getAlternatives()); }
(rule__ClassDeclaration__Alternatives)
{ after(grammarAccess.getClassDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNormalClassDeclaration
entryRuleNormalClassDeclaration 
:
{ before(grammarAccess.getNormalClassDeclarationRule()); }
	 ruleNormalClassDeclaration
{ after(grammarAccess.getNormalClassDeclarationRule()); } 
	 EOF 
;

// Rule NormalClassDeclaration
ruleNormalClassDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getGroup()); }
(rule__NormalClassDeclaration__Group__0)
{ after(grammarAccess.getNormalClassDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeParameters
entryRuleTypeParameters 
:
{ before(grammarAccess.getTypeParametersRule()); }
	 ruleTypeParameters
{ after(grammarAccess.getTypeParametersRule()); } 
	 EOF 
;

// Rule TypeParameters
ruleTypeParameters
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeParametersAccess().getGroup()); }
(rule__TypeParameters__Group__0)
{ after(grammarAccess.getTypeParametersAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeParameter
entryRuleTypeParameter 
:
{ before(grammarAccess.getTypeParameterRule()); }
	 ruleTypeParameter
{ after(grammarAccess.getTypeParameterRule()); } 
	 EOF 
;

// Rule TypeParameter
ruleTypeParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeParameterAccess().getGroup()); }
(rule__TypeParameter__Group__0)
{ after(grammarAccess.getTypeParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeBound
entryRuleTypeBound 
:
{ before(grammarAccess.getTypeBoundRule()); }
	 ruleTypeBound
{ after(grammarAccess.getTypeBoundRule()); } 
	 EOF 
;

// Rule TypeBound
ruleTypeBound
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeBoundAccess().getGroup()); }
(rule__TypeBound__Group__0)
{ after(grammarAccess.getTypeBoundAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumDeclaration
entryRuleEnumDeclaration 
:
{ before(grammarAccess.getEnumDeclarationRule()); }
	 ruleEnumDeclaration
{ after(grammarAccess.getEnumDeclarationRule()); } 
	 EOF 
;

// Rule EnumDeclaration
ruleEnumDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumDeclarationAccess().getGroup()); }
(rule__EnumDeclaration__Group__0)
{ after(grammarAccess.getEnumDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumConstants
entryRuleEnumConstants 
:
{ before(grammarAccess.getEnumConstantsRule()); }
	 ruleEnumConstants
{ after(grammarAccess.getEnumConstantsRule()); } 
	 EOF 
;

// Rule EnumConstants
ruleEnumConstants
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumConstantsAccess().getGroup()); }
(rule__EnumConstants__Group__0)
{ after(grammarAccess.getEnumConstantsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumConstant
entryRuleEnumConstant 
:
{ before(grammarAccess.getEnumConstantRule()); }
	 ruleEnumConstant
{ after(grammarAccess.getEnumConstantRule()); } 
	 EOF 
;

// Rule EnumConstant
ruleEnumConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumConstantAccess().getGroup()); }
(rule__EnumConstant__Group__0)
{ after(grammarAccess.getEnumConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumBodyDeclarations
entryRuleEnumBodyDeclarations 
:
{ before(grammarAccess.getEnumBodyDeclarationsRule()); }
	 ruleEnumBodyDeclarations
{ after(grammarAccess.getEnumBodyDeclarationsRule()); } 
	 EOF 
;

// Rule EnumBodyDeclarations
ruleEnumBodyDeclarations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumBodyDeclarationsAccess().getGroup()); }
(rule__EnumBodyDeclarations__Group__0)
{ after(grammarAccess.getEnumBodyDeclarationsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArguments
entryRuleArguments 
:
{ before(grammarAccess.getArgumentsRule()); }
	 ruleArguments
{ after(grammarAccess.getArgumentsRule()); } 
	 EOF 
;

// Rule Arguments
ruleArguments
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentsAccess().getGroup()); }
(rule__Arguments__Group__0)
{ after(grammarAccess.getArgumentsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceDeclaration
entryRuleInterfaceDeclaration 
:
{ before(grammarAccess.getInterfaceDeclarationRule()); }
	 ruleInterfaceDeclaration
{ after(grammarAccess.getInterfaceDeclarationRule()); } 
	 EOF 
;

// Rule InterfaceDeclaration
ruleInterfaceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getAlternatives()); }
(rule__InterfaceDeclaration__Alternatives)
{ after(grammarAccess.getInterfaceDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNormalInterfaceDeclaration
entryRuleNormalInterfaceDeclaration 
:
{ before(grammarAccess.getNormalInterfaceDeclarationRule()); }
	 ruleNormalInterfaceDeclaration
{ after(grammarAccess.getNormalInterfaceDeclarationRule()); } 
	 EOF 
;

// Rule NormalInterfaceDeclaration
ruleNormalInterfaceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNormalInterfaceDeclarationAccess().getGroup()); }
(rule__NormalInterfaceDeclaration__Group__0)
{ after(grammarAccess.getNormalInterfaceDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassBodyDeclaration
entryRuleClassBodyDeclaration 
:
{ before(grammarAccess.getClassBodyDeclarationRule()); }
	 ruleClassBodyDeclaration
{ after(grammarAccess.getClassBodyDeclarationRule()); } 
	 EOF 
;

// Rule ClassBodyDeclaration
ruleClassBodyDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassBodyDeclarationAccess().getAlternatives()); }
(rule__ClassBodyDeclaration__Alternatives)
{ after(grammarAccess.getClassBodyDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStaticBlock
entryRuleStaticBlock 
:
{ before(grammarAccess.getStaticBlockRule()); }
	 ruleStaticBlock
{ after(grammarAccess.getStaticBlockRule()); } 
	 EOF 
;

// Rule StaticBlock
ruleStaticBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStaticBlockAccess().getGroup()); }
(rule__StaticBlock__Group__0)
{ after(grammarAccess.getStaticBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLSpecifiedElement
entryRuleJMLSpecifiedElement 
:
{ before(grammarAccess.getJMLSpecifiedElementRule()); }
	 ruleJMLSpecifiedElement
{ after(grammarAccess.getJMLSpecifiedElementRule()); } 
	 EOF 
;

// Rule JMLSpecifiedElement
ruleJMLSpecifiedElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLSpecifiedElementAccess().getAlternatives()); }
(rule__JMLSpecifiedElement__Alternatives)
{ after(grammarAccess.getJMLSpecifiedElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLMultilineSpec
entryRuleJMLMultilineSpec 
:
{ before(grammarAccess.getJMLMultilineSpecRule()); }
	 ruleJMLMultilineSpec
{ after(grammarAccess.getJMLMultilineSpecRule()); } 
	 EOF 
;

// Rule JMLMultilineSpec
ruleJMLMultilineSpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLMultilineSpecAccess().getGroup()); }
(rule__JMLMultilineSpec__Group__0)
{ after(grammarAccess.getJMLMultilineSpecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLSinglelineSpec
entryRuleJMLSinglelineSpec 
:
{ before(grammarAccess.getJMLSinglelineSpecRule()); }
	 ruleJMLSinglelineSpec
{ after(grammarAccess.getJMLSinglelineSpecRule()); } 
	 EOF 
;

// Rule JMLSinglelineSpec
ruleJMLSinglelineSpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLSinglelineSpecAccess().getAlternatives()); }
(rule__JMLSinglelineSpec__Alternatives)
{ after(grammarAccess.getJMLSinglelineSpecAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleVisiblityModifier
entryRuleVisiblityModifier 
:
{ before(grammarAccess.getVisiblityModifierRule()); }
	 ruleVisiblityModifier
{ after(grammarAccess.getVisiblityModifierRule()); } 
	 EOF 
;

// Rule VisiblityModifier
ruleVisiblityModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVisiblityModifierAccess().getModifierAssignment()); }
(rule__VisiblityModifier__ModifierAssignment)
{ after(grammarAccess.getVisiblityModifierAccess().getModifierAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLMethodSpecificationWithModifier
entryRuleJMLMethodSpecificationWithModifier 
:
{ before(grammarAccess.getJMLMethodSpecificationWithModifierRule()); }
	 ruleJMLMethodSpecificationWithModifier
{ after(grammarAccess.getJMLMethodSpecificationWithModifierRule()); } 
	 EOF 
;

// Rule JMLMethodSpecificationWithModifier
ruleJMLMethodSpecificationWithModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLMethodSpecificationWithModifierAccess().getAlternatives()); }
(rule__JMLMethodSpecificationWithModifier__Alternatives)
{ after(grammarAccess.getJMLMethodSpecificationWithModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLMethodSpecificationWithModifierRegular
entryRuleJMLMethodSpecificationWithModifierRegular 
:
{ before(grammarAccess.getJMLMethodSpecificationWithModifierRegularRule()); }
	 ruleJMLMethodSpecificationWithModifierRegular
{ after(grammarAccess.getJMLMethodSpecificationWithModifierRegularRule()); } 
	 EOF 
;

// Rule JMLMethodSpecificationWithModifierRegular
ruleJMLMethodSpecificationWithModifierRegular
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLMethodSpecificationWithModifierRegularAccess().getGroup()); }
(rule__JMLMethodSpecificationWithModifierRegular__Group__0)
{ after(grammarAccess.getJMLMethodSpecificationWithModifierRegularAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLMethodSpecificationWithModifierExtended
entryRuleJMLMethodSpecificationWithModifierExtended 
:
{ before(grammarAccess.getJMLMethodSpecificationWithModifierExtendedRule()); }
	 ruleJMLMethodSpecificationWithModifierExtended
{ after(grammarAccess.getJMLMethodSpecificationWithModifierExtendedRule()); } 
	 EOF 
;

// Rule JMLMethodSpecificationWithModifierExtended
ruleJMLMethodSpecificationWithModifierExtended
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLMethodSpecificationWithModifierExtendedAccess().getGroup()); }
(rule__JMLMethodSpecificationWithModifierExtended__Group__0)
{ after(grammarAccess.getJMLMethodSpecificationWithModifierExtendedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLMethodSpecification
entryRuleJMLMethodSpecification 
:
{ before(grammarAccess.getJMLMethodSpecificationRule()); }
	 ruleJMLMethodSpecification
{ after(grammarAccess.getJMLMethodSpecificationRule()); } 
	 EOF 
;

// Rule JMLMethodSpecification
ruleJMLMethodSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLMethodSpecificationAccess().getAlternatives()); }
(rule__JMLMethodSpecification__Alternatives)
{ after(grammarAccess.getJMLMethodSpecificationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLMethodBehavior
entryRuleJMLMethodBehavior 
:
{ before(grammarAccess.getJMLMethodBehaviorRule()); }
	 ruleJMLMethodBehavior
{ after(grammarAccess.getJMLMethodBehaviorRule()); } 
	 EOF 
;

// Rule JMLMethodBehavior
ruleJMLMethodBehavior
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLMethodBehaviorAccess().getAlternatives()); }
(rule__JMLMethodBehavior__Alternatives)
{ after(grammarAccess.getJMLMethodBehaviorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLExceptionalBehaviorBlock
entryRuleJMLExceptionalBehaviorBlock 
:
{ before(grammarAccess.getJMLExceptionalBehaviorBlockRule()); }
	 ruleJMLExceptionalBehaviorBlock
{ after(grammarAccess.getJMLExceptionalBehaviorBlockRule()); } 
	 EOF 
;

// Rule JMLExceptionalBehaviorBlock
ruleJMLExceptionalBehaviorBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLExceptionalBehaviorBlockAccess().getGroup()); }
(rule__JMLExceptionalBehaviorBlock__Group__0)
{ after(grammarAccess.getJMLExceptionalBehaviorBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLNormalBehaviorBlock
entryRuleJMLNormalBehaviorBlock 
:
{ before(grammarAccess.getJMLNormalBehaviorBlockRule()); }
	 ruleJMLNormalBehaviorBlock
{ after(grammarAccess.getJMLNormalBehaviorBlockRule()); } 
	 EOF 
;

// Rule JMLNormalBehaviorBlock
ruleJMLNormalBehaviorBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLNormalBehaviorBlockAccess().getGroup()); }
(rule__JMLNormalBehaviorBlock__Group__0)
{ after(grammarAccess.getJMLNormalBehaviorBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLBehaviorBlock
entryRuleJMLBehaviorBlock 
:
{ before(grammarAccess.getJMLBehaviorBlockRule()); }
	 ruleJMLBehaviorBlock
{ after(grammarAccess.getJMLBehaviorBlockRule()); } 
	 EOF 
;

// Rule JMLBehaviorBlock
ruleJMLBehaviorBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLBehaviorBlockAccess().getGroup()); }
(rule__JMLBehaviorBlock__Group__0)
{ after(grammarAccess.getJMLBehaviorBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLMethodExpression
entryRuleJMLMethodExpression 
:
{ before(grammarAccess.getJMLMethodExpressionRule()); }
	 ruleJMLMethodExpression
{ after(grammarAccess.getJMLMethodExpressionRule()); } 
	 EOF 
;

// Rule JMLMethodExpression
ruleJMLMethodExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLMethodExpressionAccess().getGroup()); }
(rule__JMLMethodExpression__Group__0)
{ after(grammarAccess.getJMLMethodExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLEnsuresExpression
entryRuleJMLEnsuresExpression 
:
{ before(grammarAccess.getJMLEnsuresExpressionRule()); }
	 ruleJMLEnsuresExpression
{ after(grammarAccess.getJMLEnsuresExpressionRule()); } 
	 EOF 
;

// Rule JMLEnsuresExpression
ruleJMLEnsuresExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLEnsuresExpressionAccess().getGroup()); }
(rule__JMLEnsuresExpression__Group__0)
{ after(grammarAccess.getJMLEnsuresExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLRequiresExpression
entryRuleJMLRequiresExpression 
:
{ before(grammarAccess.getJMLRequiresExpressionRule()); }
	 ruleJMLRequiresExpression
{ after(grammarAccess.getJMLRequiresExpressionRule()); } 
	 EOF 
;

// Rule JMLRequiresExpression
ruleJMLRequiresExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLRequiresExpressionAccess().getGroup()); }
(rule__JMLRequiresExpression__Group__0)
{ after(grammarAccess.getJMLRequiresExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLSpecificationOnlyElementWithModifier
entryRuleJMLSpecificationOnlyElementWithModifier 
:
{ before(grammarAccess.getJMLSpecificationOnlyElementWithModifierRule()); }
	 ruleJMLSpecificationOnlyElementWithModifier
{ after(grammarAccess.getJMLSpecificationOnlyElementWithModifierRule()); } 
	 EOF 
;

// Rule JMLSpecificationOnlyElementWithModifier
ruleJMLSpecificationOnlyElementWithModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLSpecificationOnlyElementWithModifierAccess().getGroup()); }
(rule__JMLSpecificationOnlyElementWithModifier__Group__0)
{ after(grammarAccess.getJMLSpecificationOnlyElementWithModifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLSpecificationOnlyElement
entryRuleJMLSpecificationOnlyElement 
:
{ before(grammarAccess.getJMLSpecificationOnlyElementRule()); }
	 ruleJMLSpecificationOnlyElement
{ after(grammarAccess.getJMLSpecificationOnlyElementRule()); } 
	 EOF 
;

// Rule JMLSpecificationOnlyElement
ruleJMLSpecificationOnlyElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLSpecificationOnlyElementAccess().getAlternatives()); }
(rule__JMLSpecificationOnlyElement__Alternatives)
{ after(grammarAccess.getJMLSpecificationOnlyElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLModelElement
entryRuleJMLModelElement 
:
{ before(grammarAccess.getJMLModelElementRule()); }
	 ruleJMLModelElement
{ after(grammarAccess.getJMLModelElementRule()); } 
	 EOF 
;

// Rule JMLModelElement
ruleJMLModelElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLModelElementAccess().getGroup()); }
(rule__JMLModelElement__Group__0)
{ after(grammarAccess.getJMLModelElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLGhostElement
entryRuleJMLGhostElement 
:
{ before(grammarAccess.getJMLGhostElementRule()); }
	 ruleJMLGhostElement
{ after(grammarAccess.getJMLGhostElementRule()); } 
	 EOF 
;

// Rule JMLGhostElement
ruleJMLGhostElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLGhostElementAccess().getGroup()); }
(rule__JMLGhostElement__Group__0)
{ after(grammarAccess.getJMLGhostElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLTypeExpressionWithModifier
entryRuleJMLTypeExpressionWithModifier 
:
{ before(grammarAccess.getJMLTypeExpressionWithModifierRule()); }
	 ruleJMLTypeExpressionWithModifier
{ after(grammarAccess.getJMLTypeExpressionWithModifierRule()); } 
	 EOF 
;

// Rule JMLTypeExpressionWithModifier
ruleJMLTypeExpressionWithModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLTypeExpressionWithModifierAccess().getGroup()); }
(rule__JMLTypeExpressionWithModifier__Group__0)
{ after(grammarAccess.getJMLTypeExpressionWithModifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLTypeExpression
entryRuleJMLTypeExpression 
:
{ before(grammarAccess.getJMLTypeExpressionRule()); }
	 ruleJMLTypeExpression
{ after(grammarAccess.getJMLTypeExpressionRule()); } 
	 EOF 
;

// Rule JMLTypeExpression
ruleJMLTypeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLTypeExpressionAccess().getGroup()); }
(rule__JMLTypeExpression__Group__0)
{ after(grammarAccess.getJMLTypeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLInvariantExpression
entryRuleJMLInvariantExpression 
:
{ before(grammarAccess.getJMLInvariantExpressionRule()); }
	 ruleJMLInvariantExpression
{ after(grammarAccess.getJMLInvariantExpressionRule()); } 
	 EOF 
;

// Rule JMLInvariantExpression
ruleJMLInvariantExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLInvariantExpressionAccess().getGroup()); }
(rule__JMLInvariantExpression__Group__0)
{ after(grammarAccess.getJMLInvariantExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLConstraintExpression
entryRuleJMLConstraintExpression 
:
{ before(grammarAccess.getJMLConstraintExpressionRule()); }
	 ruleJMLConstraintExpression
{ after(grammarAccess.getJMLConstraintExpressionRule()); } 
	 EOF 
;

// Rule JMLConstraintExpression
ruleJMLConstraintExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLConstraintExpressionAccess().getGroup()); }
(rule__JMLConstraintExpression__Group__0)
{ after(grammarAccess.getJMLConstraintExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLAxiomExpression
entryRuleJMLAxiomExpression 
:
{ before(grammarAccess.getJMLAxiomExpressionRule()); }
	 ruleJMLAxiomExpression
{ after(grammarAccess.getJMLAxiomExpressionRule()); } 
	 EOF 
;

// Rule JMLAxiomExpression
ruleJMLAxiomExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLAxiomExpressionAccess().getGroup()); }
(rule__JMLAxiomExpression__Group__0)
{ after(grammarAccess.getJMLAxiomExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLMemberModifier
entryRuleJMLMemberModifier 
:
{ before(grammarAccess.getJMLMemberModifierRule()); }
	 ruleJMLMemberModifier
{ after(grammarAccess.getJMLMemberModifierRule()); } 
	 EOF 
;

// Rule JMLMemberModifier
ruleJMLMemberModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLMemberModifierAccess().getModifierAssignment()); }
(rule__JMLMemberModifier__ModifierAssignment)
{ after(grammarAccess.getJMLMemberModifierAccess().getModifierAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMemberDeclWithModifier
entryRuleMemberDeclWithModifier 
:
{ before(grammarAccess.getMemberDeclWithModifierRule()); }
	 ruleMemberDeclWithModifier
{ after(grammarAccess.getMemberDeclWithModifierRule()); } 
	 EOF 
;

// Rule MemberDeclWithModifier
ruleMemberDeclWithModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberDeclWithModifierAccess().getAlternatives()); }
(rule__MemberDeclWithModifier__Alternatives)
{ after(grammarAccess.getMemberDeclWithModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMemberDeclWithModifierRegular
entryRuleMemberDeclWithModifierRegular 
:
{ before(grammarAccess.getMemberDeclWithModifierRegularRule()); }
	 ruleMemberDeclWithModifierRegular
{ after(grammarAccess.getMemberDeclWithModifierRegularRule()); } 
	 EOF 
;

// Rule MemberDeclWithModifierRegular
ruleMemberDeclWithModifierRegular
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberDeclWithModifierRegularAccess().getGroup()); }
(rule__MemberDeclWithModifierRegular__Group__0)
{ after(grammarAccess.getMemberDeclWithModifierRegularAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMemberDeclWithModifierSpec
entryRuleMemberDeclWithModifierSpec 
:
{ before(grammarAccess.getMemberDeclWithModifierSpecRule()); }
	 ruleMemberDeclWithModifierSpec
{ after(grammarAccess.getMemberDeclWithModifierSpecRule()); } 
	 EOF 
;

// Rule MemberDeclWithModifierSpec
ruleMemberDeclWithModifierSpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberDeclWithModifierSpecAccess().getGroup()); }
(rule__MemberDeclWithModifierSpec__Group__0)
{ after(grammarAccess.getMemberDeclWithModifierSpecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMemberDecl
entryRuleMemberDecl 
:
{ before(grammarAccess.getMemberDeclRule()); }
	 ruleMemberDecl
{ after(grammarAccess.getMemberDeclRule()); } 
	 EOF 
;

// Rule MemberDecl
ruleMemberDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberDeclAccess().getAlternatives()); }
(rule__MemberDecl__Alternatives)
{ after(grammarAccess.getMemberDeclAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructor
entryRuleConstructor 
:
{ before(grammarAccess.getConstructorRule()); }
	 ruleConstructor
{ after(grammarAccess.getConstructorRule()); } 
	 EOF 
;

// Rule Constructor
ruleConstructor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructorAccess().getGroup()); }
(rule__Constructor__Group__0)
{ after(grammarAccess.getConstructorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMemberDeclaration
entryRuleMemberDeclaration 
:
{ before(grammarAccess.getMemberDeclarationRule()); }
	 ruleMemberDeclaration
{ after(grammarAccess.getMemberDeclarationRule()); } 
	 EOF 
;

// Rule MemberDeclaration
ruleMemberDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberDeclarationAccess().getGroup()); }
(rule__MemberDeclaration__Group__0)
{ after(grammarAccess.getMemberDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleGenericMethodOrConstructorDecl
entryRuleGenericMethodOrConstructorDecl 
:
{ before(grammarAccess.getGenericMethodOrConstructorDeclRule()); }
	 ruleGenericMethodOrConstructorDecl
{ after(grammarAccess.getGenericMethodOrConstructorDeclRule()); } 
	 EOF 
;

// Rule GenericMethodOrConstructorDecl
ruleGenericMethodOrConstructorDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGenericMethodOrConstructorDeclAccess().getGroup()); }
(rule__GenericMethodOrConstructorDecl__Group__0)
{ after(grammarAccess.getGenericMethodOrConstructorDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodDeclaration
entryRuleMethodDeclaration 
:
{ before(grammarAccess.getMethodDeclarationRule()); }
	 ruleMethodDeclaration
{ after(grammarAccess.getMethodDeclarationRule()); } 
	 EOF 
;

// Rule MethodDeclaration
ruleMethodDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodDeclarationAccess().getGroup()); }
(rule__MethodDeclaration__Group__0)
{ after(grammarAccess.getMethodDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldDeclaration
entryRuleFieldDeclaration 
:
{ before(grammarAccess.getFieldDeclarationRule()); }
	 ruleFieldDeclaration
{ after(grammarAccess.getFieldDeclarationRule()); } 
	 EOF 
;

// Rule FieldDeclaration
ruleFieldDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldDeclarationAccess().getGroup()); }
(rule__FieldDeclaration__Group__0)
{ after(grammarAccess.getFieldDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaredException
entryRuleDeclaredException 
:
{ before(grammarAccess.getDeclaredExceptionRule()); }
	 ruleDeclaredException
{ after(grammarAccess.getDeclaredExceptionRule()); } 
	 EOF 
;

// Rule DeclaredException
ruleDeclaredException
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclaredExceptionAccess().getNameAssignment()); }
(rule__DeclaredException__NameAssignment)
{ after(grammarAccess.getDeclaredExceptionAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclarator
entryRuleVariableDeclarator 
:
{ before(grammarAccess.getVariableDeclaratorRule()); }
	 ruleVariableDeclarator
{ after(grammarAccess.getVariableDeclaratorRule()); } 
	 EOF 
;

// Rule VariableDeclarator
ruleVariableDeclarator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getGroup()); }
(rule__VariableDeclarator__Group__0)
{ after(grammarAccess.getVariableDeclaratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassOrInterfaceTypeWithBrackets
entryRuleClassOrInterfaceTypeWithBrackets 
:
{ before(grammarAccess.getClassOrInterfaceTypeWithBracketsRule()); }
	 ruleClassOrInterfaceTypeWithBrackets
{ after(grammarAccess.getClassOrInterfaceTypeWithBracketsRule()); } 
	 EOF 
;

// Rule ClassOrInterfaceTypeWithBrackets
ruleClassOrInterfaceTypeWithBrackets
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getGroup()); }
(rule__ClassOrInterfaceTypeWithBrackets__Group__0)
{ after(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimitiveTypeWithBrackets
entryRulePrimitiveTypeWithBrackets 
:
{ before(grammarAccess.getPrimitiveTypeWithBracketsRule()); }
	 rulePrimitiveTypeWithBrackets
{ after(grammarAccess.getPrimitiveTypeWithBracketsRule()); } 
	 EOF 
;

// Rule PrimitiveTypeWithBrackets
rulePrimitiveTypeWithBrackets
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimitiveTypeWithBracketsAccess().getGroup()); }
(rule__PrimitiveTypeWithBrackets__Group__0)
{ after(grammarAccess.getPrimitiveTypeWithBracketsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBrackets
entryRuleBrackets 
:
{ before(grammarAccess.getBracketsRule()); }
	 ruleBrackets
{ after(grammarAccess.getBracketsRule()); } 
	 EOF 
;

// Rule Brackets
ruleBrackets
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBracketsAccess().getGroup()); }
(rule__Brackets__Group__0)
{ after(grammarAccess.getBracketsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleClassifierType
entryRuleClassifierType 
:
{ before(grammarAccess.getClassifierTypeRule()); }
	 ruleClassifierType
{ after(grammarAccess.getClassifierTypeRule()); } 
	 EOF 
;

// Rule ClassifierType
ruleClassifierType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassifierTypeAccess().getGroup()); }
(rule__ClassifierType__Group__0)
{ after(grammarAccess.getClassifierTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeArguments
entryRuleTypeArguments 
:
{ before(grammarAccess.getTypeArgumentsRule()); }
	 ruleTypeArguments
{ after(grammarAccess.getTypeArgumentsRule()); } 
	 EOF 
;

// Rule TypeArguments
ruleTypeArguments
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeArgumentsAccess().getGroup()); }
(rule__TypeArguments__Group__0)
{ after(grammarAccess.getTypeArgumentsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeArgument
entryRuleTypeArgument 
:
{ before(grammarAccess.getTypeArgumentRule()); }
	 ruleTypeArgument
{ after(grammarAccess.getTypeArgumentRule()); } 
	 EOF 
;

// Rule TypeArgument
ruleTypeArgument
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeArgumentAccess().getGroup()); }
(rule__TypeArgument__Group__0)
{ after(grammarAccess.getTypeArgumentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFormalParameterDecl
entryRuleFormalParameterDecl 
:
{ before(grammarAccess.getFormalParameterDeclRule()); }
	 ruleFormalParameterDecl
{ after(grammarAccess.getFormalParameterDeclRule()); } 
	 EOF 
;

// Rule FormalParameterDecl
ruleFormalParameterDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFormalParameterDeclAccess().getGroup()); }
(rule__FormalParameterDecl__Group__0)
{ after(grammarAccess.getFormalParameterDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodBody
entryRuleMethodBody 
:
{ before(grammarAccess.getMethodBodyRule()); }
	 ruleMethodBody
{ after(grammarAccess.getMethodBodyRule()); } 
	 EOF 
;

// Rule MethodBody
ruleMethodBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodBodyAccess().getBlockParserRuleCall()); }
	ruleBlock
{ after(grammarAccess.getMethodBodyAccess().getBlockParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructorBody
entryRuleConstructorBody 
:
{ before(grammarAccess.getConstructorBodyRule()); }
	 ruleConstructorBody
{ after(grammarAccess.getConstructorBodyRule()); } 
	 EOF 
;

// Rule ConstructorBody
ruleConstructorBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructorBodyAccess().getGroup()); }
(rule__ConstructorBody__Group__0)
{ after(grammarAccess.getConstructorBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleAnnotations
entryRuleAnnotations 
:
{ before(grammarAccess.getAnnotationsRule()); }
	 ruleAnnotations
{ after(grammarAccess.getAnnotationsRule()); } 
	 EOF 
;

// Rule Annotations
ruleAnnotations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getAnnotationsAccess().getAnnotationAssignment()); }
(rule__Annotations__AnnotationAssignment)
{ after(grammarAccess.getAnnotationsAccess().getAnnotationAssignment()); }
)
(
{ before(grammarAccess.getAnnotationsAccess().getAnnotationAssignment()); }
(rule__Annotations__AnnotationAssignment)*
{ after(grammarAccess.getAnnotationsAccess().getAnnotationAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getGroup()); }
(rule__Annotation__Group__0)
{ after(grammarAccess.getAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationName
entryRuleAnnotationName 
:
{ before(grammarAccess.getAnnotationNameRule()); }
	 ruleAnnotationName
{ after(grammarAccess.getAnnotationNameRule()); } 
	 EOF 
;

// Rule AnnotationName
ruleAnnotationName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationNameAccess().getGroup()); }
(rule__AnnotationName__Group__0)
{ after(grammarAccess.getAnnotationNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElementValuePairs
entryRuleElementValuePairs 
:
{ before(grammarAccess.getElementValuePairsRule()); }
	 ruleElementValuePairs
{ after(grammarAccess.getElementValuePairsRule()); } 
	 EOF 
;

// Rule ElementValuePairs
ruleElementValuePairs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementValuePairsAccess().getGroup()); }
(rule__ElementValuePairs__Group__0)
{ after(grammarAccess.getElementValuePairsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElementValuePair
entryRuleElementValuePair 
:
{ before(grammarAccess.getElementValuePairRule()); }
	 ruleElementValuePair
{ after(grammarAccess.getElementValuePairRule()); } 
	 EOF 
;

// Rule ElementValuePair
ruleElementValuePair
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementValuePairAccess().getGroup()); }
(rule__ElementValuePair__Group__0)
{ after(grammarAccess.getElementValuePairAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElementValue
entryRuleElementValue 
:
{ before(grammarAccess.getElementValueRule()); }
	 ruleElementValue
{ after(grammarAccess.getElementValueRule()); } 
	 EOF 
;

// Rule ElementValue
ruleElementValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementValueAccess().getAlternatives()); }
(rule__ElementValue__Alternatives)
{ after(grammarAccess.getElementValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElementValueArrayInitializer
entryRuleElementValueArrayInitializer 
:
{ before(grammarAccess.getElementValueArrayInitializerRule()); }
	 ruleElementValueArrayInitializer
{ after(grammarAccess.getElementValueArrayInitializerRule()); } 
	 EOF 
;

// Rule ElementValueArrayInitializer
ruleElementValueArrayInitializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementValueArrayInitializerAccess().getGroup()); }
(rule__ElementValueArrayInitializer__Group__0)
{ after(grammarAccess.getElementValueArrayInitializerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationTypeDeclaration
entryRuleAnnotationTypeDeclaration 
:
{ before(grammarAccess.getAnnotationTypeDeclarationRule()); }
	 ruleAnnotationTypeDeclaration
{ after(grammarAccess.getAnnotationTypeDeclarationRule()); } 
	 EOF 
;

// Rule AnnotationTypeDeclaration
ruleAnnotationTypeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationTypeDeclarationAccess().getGroup()); }
(rule__AnnotationTypeDeclaration__Group__0)
{ after(grammarAccess.getAnnotationTypeDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationTypeElementDeclaration
entryRuleAnnotationTypeElementDeclaration 
:
{ before(grammarAccess.getAnnotationTypeElementDeclarationRule()); }
	 ruleAnnotationTypeElementDeclaration
{ after(grammarAccess.getAnnotationTypeElementDeclarationRule()); } 
	 EOF 
;

// Rule AnnotationTypeElementDeclaration
ruleAnnotationTypeElementDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationTypeElementDeclarationAccess().getGroup()); }
(rule__AnnotationTypeElementDeclaration__Group__0)
{ after(grammarAccess.getAnnotationTypeElementDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationTypeElementRest
entryRuleAnnotationTypeElementRest 
:
{ before(grammarAccess.getAnnotationTypeElementRestRule()); }
	 ruleAnnotationTypeElementRest
{ after(grammarAccess.getAnnotationTypeElementRestRule()); } 
	 EOF 
;

// Rule AnnotationTypeElementRest
ruleAnnotationTypeElementRest
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationTypeElementRestAccess().getAlternatives()); }
(rule__AnnotationTypeElementRest__Alternatives)
{ after(grammarAccess.getAnnotationTypeElementRestAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationMethodOrConstantRest
entryRuleAnnotationMethodOrConstantRest 
:
{ before(grammarAccess.getAnnotationMethodOrConstantRestRule()); }
	 ruleAnnotationMethodOrConstantRest
{ after(grammarAccess.getAnnotationMethodOrConstantRestRule()); } 
	 EOF 
;

// Rule AnnotationMethodOrConstantRest
ruleAnnotationMethodOrConstantRest
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationMethodOrConstantRestAccess().getGroup()); }
(rule__AnnotationMethodOrConstantRest__Group__0)
{ after(grammarAccess.getAnnotationMethodOrConstantRestAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationMethodRest
entryRuleAnnotationMethodRest 
:
{ before(grammarAccess.getAnnotationMethodRestRule()); }
	 ruleAnnotationMethodRest
{ after(grammarAccess.getAnnotationMethodRestRule()); } 
	 EOF 
;

// Rule AnnotationMethodRest
ruleAnnotationMethodRest
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationMethodRestAccess().getGroup()); }
(rule__AnnotationMethodRest__Group__0)
{ after(grammarAccess.getAnnotationMethodRestAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationConstantRest
entryRuleAnnotationConstantRest 
:
{ before(grammarAccess.getAnnotationConstantRestRule()); }
	 ruleAnnotationConstantRest
{ after(grammarAccess.getAnnotationConstantRestRule()); } 
	 EOF 
;

// Rule AnnotationConstantRest
ruleAnnotationConstantRest
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationConstantRestAccess().getGroup()); }
(rule__AnnotationConstantRest__Group__0)
{ after(grammarAccess.getAnnotationConstantRestAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefaultValue
entryRuleDefaultValue 
:
{ before(grammarAccess.getDefaultValueRule()); }
	 ruleDefaultValue
{ after(grammarAccess.getDefaultValueRule()); } 
	 EOF 
;

// Rule DefaultValue
ruleDefaultValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefaultValueAccess().getGroup()); }
(rule__DefaultValue__Group__0)
{ after(grammarAccess.getDefaultValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlockStatement
entryRuleBlockStatement 
:
{ before(grammarAccess.getBlockStatementRule()); }
	 ruleBlockStatement
{ after(grammarAccess.getBlockStatementRule()); } 
	 EOF 
;

// Rule BlockStatement
ruleBlockStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockStatementAccess().getAlternatives()); }
(rule__BlockStatement__Alternatives)
{ after(grammarAccess.getBlockStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAssignmentParserRuleCall()); }
	ruleAssignment
{ after(grammarAccess.getExpressionAccess().getAssignmentParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getAlternatives()); }
(rule__Assignment__Alternatives)
{ after(grammarAccess.getAssignmentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpSingleAssign
entryRuleOpSingleAssign 
:
{ before(grammarAccess.getOpSingleAssignRule()); }
	 ruleOpSingleAssign
{ after(grammarAccess.getOpSingleAssignRule()); } 
	 EOF 
;

// Rule OpSingleAssign
ruleOpSingleAssign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); }

	'=' 

{ after(grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpMultiAssign
entryRuleOpMultiAssign 
:
{ before(grammarAccess.getOpMultiAssignRule()); }
	 ruleOpMultiAssign
{ after(grammarAccess.getOpMultiAssignRule()); } 
	 EOF 
;

// Rule OpMultiAssign
ruleOpMultiAssign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpMultiAssignAccess().getAlternatives()); }
(rule__OpMultiAssign__Alternatives)
{ after(grammarAccess.getOpMultiAssignAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpression
entryRuleOrExpression 
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
(rule__OrExpression__Group__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpOr
entryRuleOpOr 
:
{ before(grammarAccess.getOpOrRule()); }
	 ruleOpOr
{ after(grammarAccess.getOpOrRule()); } 
	 EOF 
;

// Rule OpOr
ruleOpOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); }

	'||' 

{ after(grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpression
entryRuleAndExpression 
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpAnd
entryRuleOpAnd 
:
{ before(grammarAccess.getOpAndRule()); }
	 ruleOpAnd
{ after(grammarAccess.getOpAndRule()); } 
	 EOF 
;

// Rule OpAnd
ruleOpAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); }

	'&&' 

{ after(grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression 
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
(rule__EqualityExpression__Group__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpEquality
entryRuleOpEquality 
:
{ before(grammarAccess.getOpEqualityRule()); }
	 ruleOpEquality
{ after(grammarAccess.getOpEqualityRule()); } 
	 EOF 
;

// Rule OpEquality
ruleOpEquality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpEqualityAccess().getAlternatives()); }
(rule__OpEquality__Alternatives)
{ after(grammarAccess.getOpEqualityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression 
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
(rule__RelationalExpression__Group__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpCompare
entryRuleOpCompare 
:
{ before(grammarAccess.getOpCompareRule()); }
	 ruleOpCompare
{ after(grammarAccess.getOpCompareRule()); } 
	 EOF 
;

// Rule OpCompare
ruleOpCompare
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpCompareAccess().getAlternatives()); }
(rule__OpCompare__Alternatives)
{ after(grammarAccess.getOpCompareAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOtherOperatorExpression
entryRuleOtherOperatorExpression 
:
{ before(grammarAccess.getOtherOperatorExpressionRule()); }
	 ruleOtherOperatorExpression
{ after(grammarAccess.getOtherOperatorExpressionRule()); } 
	 EOF 
;

// Rule OtherOperatorExpression
ruleOtherOperatorExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getGroup()); }
(rule__OtherOperatorExpression__Group__0)
{ after(grammarAccess.getOtherOperatorExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpOther
entryRuleOpOther 
:
{ before(grammarAccess.getOpOtherRule()); }
	 ruleOpOther
{ after(grammarAccess.getOpOtherRule()); } 
	 EOF 
;

// Rule OpOther
ruleOpOther
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpOtherAccess().getAlternatives()); }
(rule__OpOther__Alternatives)
{ after(grammarAccess.getOpOtherAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression 
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
(rule__AdditiveExpression__Group__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpAdd
entryRuleOpAdd 
:
{ before(grammarAccess.getOpAddRule()); }
	 ruleOpAdd
{ after(grammarAccess.getOpAddRule()); } 
	 EOF 
;

// Rule OpAdd
ruleOpAdd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpAddAccess().getAlternatives()); }
(rule__OpAdd__Alternatives)
{ after(grammarAccess.getOpAddAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression 
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
(rule__MultiplicativeExpression__Group__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpMulti
entryRuleOpMulti 
:
{ before(grammarAccess.getOpMultiRule()); }
	 ruleOpMulti
{ after(grammarAccess.getOpMultiRule()); } 
	 EOF 
;

// Rule OpMulti
ruleOpMulti
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpMultiAccess().getAlternatives()); }
(rule__OpMulti__Alternatives)
{ after(grammarAccess.getOpMultiAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryOperation
entryRuleUnaryOperation 
:
{ before(grammarAccess.getUnaryOperationRule()); }
	 ruleUnaryOperation
{ after(grammarAccess.getUnaryOperationRule()); } 
	 EOF 
;

// Rule UnaryOperation
ruleUnaryOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryOperationAccess().getAlternatives()); }
(rule__UnaryOperation__Alternatives)
{ after(grammarAccess.getUnaryOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpUnary
entryRuleOpUnary 
:
{ before(grammarAccess.getOpUnaryRule()); }
	 ruleOpUnary
{ after(grammarAccess.getOpUnaryRule()); } 
	 EOF 
;

// Rule OpUnary
ruleOpUnary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpUnaryAccess().getAlternatives()); }
(rule__OpUnary__Alternatives)
{ after(grammarAccess.getOpUnaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostfixOperation
entryRulePostfixOperation 
:
{ before(grammarAccess.getPostfixOperationRule()); }
	 rulePostfixOperation
{ after(grammarAccess.getPostfixOperationRule()); } 
	 EOF 
;

// Rule PostfixOperation
rulePostfixOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostfixOperationAccess().getGroup()); }
(rule__PostfixOperation__Group__0)
{ after(grammarAccess.getPostfixOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpPostfix
entryRuleOpPostfix 
:
{ before(grammarAccess.getOpPostfixRule()); }
	 ruleOpPostfix
{ after(grammarAccess.getOpPostfixRule()); } 
	 EOF 
;

// Rule OpPostfix
ruleOpPostfix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpPostfixAccess().getAlternatives()); }
(rule__OpPostfix__Alternatives)
{ after(grammarAccess.getOpPostfixAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMemberFeatureCall
entryRuleMemberFeatureCall 
:
{ before(grammarAccess.getMemberFeatureCallRule()); }
	 ruleMemberFeatureCall
{ after(grammarAccess.getMemberFeatureCallRule()); } 
	 EOF 
;

// Rule MemberFeatureCall
ruleMemberFeatureCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup()); }
(rule__MemberFeatureCall__Group__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParenthesisExpression
entryRuleParenthesisExpression 
:
{ before(grammarAccess.getParenthesisExpressionRule()); }
	 ruleParenthesisExpression
{ after(grammarAccess.getParenthesisExpressionRule()); } 
	 EOF 
;

// Rule ParenthesisExpression
ruleParenthesisExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParenthesisExpressionAccess().getGroup()); }
(rule__ParenthesisExpression__Group__0)
{ after(grammarAccess.getParenthesisExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLOldExpression
entryRuleJMLOldExpression 
:
{ before(grammarAccess.getJMLOldExpressionRule()); }
	 ruleJMLOldExpression
{ after(grammarAccess.getJMLOldExpressionRule()); } 
	 EOF 
;

// Rule JMLOldExpression
ruleJMLOldExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLOldExpressionAccess().getGroup()); }
(rule__JMLOldExpression__Group__0)
{ after(grammarAccess.getJMLOldExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLFreshExpression
entryRuleJMLFreshExpression 
:
{ before(grammarAccess.getJMLFreshExpressionRule()); }
	 ruleJMLFreshExpression
{ after(grammarAccess.getJMLFreshExpressionRule()); } 
	 EOF 
;

// Rule JMLFreshExpression
ruleJMLFreshExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLFreshExpressionAccess().getGroup()); }
(rule__JMLFreshExpression__Group__0)
{ after(grammarAccess.getJMLFreshExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLResultExpression
entryRuleJMLResultExpression 
:
{ before(grammarAccess.getJMLResultExpressionRule()); }
	 ruleJMLResultExpression
{ after(grammarAccess.getJMLResultExpressionRule()); } 
	 EOF 
;

// Rule JMLResultExpression
ruleJMLResultExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLResultExpressionAccess().getGroup()); }
(rule__JMLResultExpression__Group__0)
{ after(grammarAccess.getJMLResultExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLForAllExpression
entryRuleJMLForAllExpression 
:
{ before(grammarAccess.getJMLForAllExpressionRule()); }
	 ruleJMLForAllExpression
{ after(grammarAccess.getJMLForAllExpressionRule()); } 
	 EOF 
;

// Rule JMLForAllExpression
ruleJMLForAllExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getGroup()); }
(rule__JMLForAllExpression__Group__0)
{ after(grammarAccess.getJMLForAllExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarDecl
entryRuleVarDecl 
:
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarDeclAccess().getGroup()); }
(rule__VarDecl__Group__0)
{ after(grammarAccess.getVarDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCollectionLiteral
entryRuleCollectionLiteral 
:
{ before(grammarAccess.getCollectionLiteralRule()); }
	 ruleCollectionLiteral
{ after(grammarAccess.getCollectionLiteralRule()); } 
	 EOF 
;

// Rule CollectionLiteral
ruleCollectionLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectionLiteralAccess().getAlternatives()); }
(rule__CollectionLiteral__Alternatives)
{ after(grammarAccess.getCollectionLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSetLiteral
entryRuleSetLiteral 
:
{ before(grammarAccess.getSetLiteralRule()); }
	 ruleSetLiteral
{ after(grammarAccess.getSetLiteralRule()); } 
	 EOF 
;

// Rule SetLiteral
ruleSetLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSetLiteralAccess().getGroup()); }
(rule__SetLiteral__Group__0)
{ after(grammarAccess.getSetLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListLiteral
entryRuleListLiteral 
:
{ before(grammarAccess.getListLiteralRule()); }
	 ruleListLiteral
{ after(grammarAccess.getListLiteralRule()); } 
	 EOF 
;

// Rule ListLiteral
ruleListLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListLiteralAccess().getGroup()); }
(rule__ListLiteral__Group__0)
{ after(grammarAccess.getListLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClosure
entryRuleClosure 
:
{ before(grammarAccess.getClosureRule()); }
	 ruleClosure
{ after(grammarAccess.getClosureRule()); } 
	 EOF 
;

// Rule Closure
ruleClosure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClosureAccess().getGroup()); }
(rule__Closure__Group__0)
{ after(grammarAccess.getClosureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionInClosure
entryRuleExpressionInClosure 
:
{ before(grammarAccess.getExpressionInClosureRule()); }
	 ruleExpressionInClosure
{ after(grammarAccess.getExpressionInClosureRule()); } 
	 EOF 
;

// Rule ExpressionInClosure
ruleExpressionInClosure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionInClosureAccess().getGroup()); }
(rule__ExpressionInClosure__Group__0)
{ after(grammarAccess.getExpressionInClosureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleShortClosure
entryRuleShortClosure 
:
{ before(grammarAccess.getShortClosureRule()); }
	 ruleShortClosure
{ after(grammarAccess.getShortClosureRule()); } 
	 EOF 
;

// Rule ShortClosure
ruleShortClosure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getShortClosureAccess().getGroup()); }
(rule__ShortClosure__Group__0)
{ after(grammarAccess.getShortClosureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParenthesizedExpression
entryRuleParenthesizedExpression 
:
{ before(grammarAccess.getParenthesizedExpressionRule()); }
	 ruleParenthesizedExpression
{ after(grammarAccess.getParenthesizedExpressionRule()); } 
	 EOF 
;

// Rule ParenthesizedExpression
ruleParenthesizedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
(rule__ParenthesizedExpression__Group__0)
{ after(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfExpression
entryRuleIfExpression 
:
{ before(grammarAccess.getIfExpressionRule()); }
	 ruleIfExpression
{ after(grammarAccess.getIfExpressionRule()); } 
	 EOF 
;

// Rule IfExpression
ruleIfExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfExpressionAccess().getGroup()); }
(rule__IfExpression__Group__0)
{ after(grammarAccess.getIfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchExpression
entryRuleSwitchExpression 
:
{ before(grammarAccess.getSwitchExpressionRule()); }
	 ruleSwitchExpression
{ after(grammarAccess.getSwitchExpressionRule()); } 
	 EOF 
;

// Rule SwitchExpression
ruleSwitchExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchExpressionAccess().getGroup()); }
(rule__SwitchExpression__Group__0)
{ after(grammarAccess.getSwitchExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCasePart
entryRuleCasePart 
:
{ before(grammarAccess.getCasePartRule()); }
	 ruleCasePart
{ after(grammarAccess.getCasePartRule()); } 
	 EOF 
;

// Rule CasePart
ruleCasePart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCasePartAccess().getGroup()); }
(rule__CasePart__Group__0)
{ after(grammarAccess.getCasePartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForLoopExpression
entryRuleForLoopExpression 
:
{ before(grammarAccess.getForLoopExpressionRule()); }
	 ruleForLoopExpression
{ after(grammarAccess.getForLoopExpressionRule()); } 
	 EOF 
;

// Rule ForLoopExpression
ruleForLoopExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForLoopExpressionAccess().getGroup()); }
(rule__ForLoopExpression__Group__0)
{ after(grammarAccess.getForLoopExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBasicForLoopExpression
entryRuleBasicForLoopExpression 
:
{ before(grammarAccess.getBasicForLoopExpressionRule()); }
	 ruleBasicForLoopExpression
{ after(grammarAccess.getBasicForLoopExpressionRule()); } 
	 EOF 
;

// Rule BasicForLoopExpression
ruleBasicForLoopExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getGroup()); }
(rule__BasicForLoopExpression__Group__0)
{ after(grammarAccess.getBasicForLoopExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhileExpression
entryRuleWhileExpression 
:
{ before(grammarAccess.getWhileExpressionRule()); }
	 ruleWhileExpression
{ after(grammarAccess.getWhileExpressionRule()); } 
	 EOF 
;

// Rule WhileExpression
ruleWhileExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileExpressionAccess().getGroup()); }
(rule__WhileExpression__Group__0)
{ after(grammarAccess.getWhileExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoWhileExpression
entryRuleDoWhileExpression 
:
{ before(grammarAccess.getDoWhileExpressionRule()); }
	 ruleDoWhileExpression
{ after(grammarAccess.getDoWhileExpressionRule()); } 
	 EOF 
;

// Rule DoWhileExpression
ruleDoWhileExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getGroup()); }
(rule__DoWhileExpression__Group__0)
{ after(grammarAccess.getDoWhileExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlockExpression
entryRuleBlockExpression 
:
{ before(grammarAccess.getBlockExpressionRule()); }
	 ruleBlockExpression
{ after(grammarAccess.getBlockExpressionRule()); } 
	 EOF 
;

// Rule BlockExpression
ruleBlockExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockExpressionAccess().getGroup()); }
(rule__BlockExpression__Group__0)
{ after(grammarAccess.getBlockExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionOrVarDeclaration
entryRuleExpressionOrVarDeclaration 
:
{ before(grammarAccess.getExpressionOrVarDeclarationRule()); }
	 ruleExpressionOrVarDeclaration
{ after(grammarAccess.getExpressionOrVarDeclarationRule()); } 
	 EOF 
;

// Rule ExpressionOrVarDeclaration
ruleExpressionOrVarDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionOrVarDeclarationAccess().getExpressionParserRuleCall()); }
	ruleExpression
{ after(grammarAccess.getExpressionOrVarDeclarationAccess().getExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmFormalParameter
entryRuleJvmFormalParameter 
:
{ before(grammarAccess.getJvmFormalParameterRule()); }
	 ruleJvmFormalParameter
{ after(grammarAccess.getJvmFormalParameterRule()); } 
	 EOF 
;

// Rule JvmFormalParameter
ruleJvmFormalParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getGroup()); }
(rule__JvmFormalParameter__Group__0)
{ after(grammarAccess.getJvmFormalParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFullJvmFormalParameter
entryRuleFullJvmFormalParameter 
:
{ before(grammarAccess.getFullJvmFormalParameterRule()); }
	 ruleFullJvmFormalParameter
{ after(grammarAccess.getFullJvmFormalParameterRule()); } 
	 EOF 
;

// Rule FullJvmFormalParameter
ruleFullJvmFormalParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getGroup()); }
(rule__FullJvmFormalParameter__Group__0)
{ after(grammarAccess.getFullJvmFormalParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureCall
entryRuleFeatureCall 
:
{ before(grammarAccess.getFeatureCallRule()); }
	 ruleFeatureCall
{ after(grammarAccess.getFeatureCallRule()); } 
	 EOF 
;

// Rule FeatureCall
ruleFeatureCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureCallAccess().getGroup()); }
(rule__FeatureCall__Group__0)
{ after(grammarAccess.getFeatureCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureCallID
entryRuleFeatureCallID 
:
{ before(grammarAccess.getFeatureCallIDRule()); }
	 ruleFeatureCallID
{ after(grammarAccess.getFeatureCallIDRule()); } 
	 EOF 
;

// Rule FeatureCallID
ruleFeatureCallID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall()); }
	ruleValidID
{ after(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdOrSuper
entryRuleIdOrSuper 
:
{ before(grammarAccess.getIdOrSuperRule()); }
	 ruleIdOrSuper
{ after(grammarAccess.getIdOrSuperRule()); } 
	 EOF 
;

// Rule IdOrSuper
ruleIdOrSuper
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdOrSuperAccess().getAlternatives()); }
(rule__IdOrSuper__Alternatives)
{ after(grammarAccess.getIdOrSuperAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructorCall
entryRuleConstructorCall 
:
{ before(grammarAccess.getConstructorCallRule()); }
	 ruleConstructorCall
{ after(grammarAccess.getConstructorCallRule()); } 
	 EOF 
;

// Rule ConstructorCall
ruleConstructorCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructorCallAccess().getGroup()); }
(rule__ConstructorCall__Group__0)
{ after(grammarAccess.getConstructorCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getGroup()); }
(rule__BooleanLiteral__Group__0)
{ after(grammarAccess.getBooleanLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullLiteral
entryRuleNullLiteral 
:
{ before(grammarAccess.getNullLiteralRule()); }
	 ruleNullLiteral
{ after(grammarAccess.getNullLiteralRule()); } 
	 EOF 
;

// Rule NullLiteral
ruleNullLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullLiteralAccess().getGroup()); }
(rule__NullLiteral__Group__0)
{ after(grammarAccess.getNullLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral 
:
{ before(grammarAccess.getNumberLiteralRule()); }
	 ruleNumberLiteral
{ after(grammarAccess.getNumberLiteralRule()); } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberLiteralAccess().getGroup()); }
(rule__NumberLiteral__Group__0)
{ after(grammarAccess.getNumberLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getGroup()); }
(rule__StringLiteral__Group__0)
{ after(grammarAccess.getStringLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCharLiteral
entryRuleCharLiteral 
:
{ before(grammarAccess.getCharLiteralRule()); }
	 ruleCharLiteral
{ after(grammarAccess.getCharLiteralRule()); } 
	 EOF 
;

// Rule CharLiteral
ruleCharLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCharLiteralAccess().getGroup()); }
(rule__CharLiteral__Group__0)
{ after(grammarAccess.getCharLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThrowExpression
entryRuleThrowExpression 
:
{ before(grammarAccess.getThrowExpressionRule()); }
	 ruleThrowExpression
{ after(grammarAccess.getThrowExpressionRule()); } 
	 EOF 
;

// Rule ThrowExpression
ruleThrowExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThrowExpressionAccess().getGroup()); }
(rule__ThrowExpression__Group__0)
{ after(grammarAccess.getThrowExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnExpression
entryRuleReturnExpression 
:
{ before(grammarAccess.getReturnExpressionRule()); }
	 ruleReturnExpression
{ after(grammarAccess.getReturnExpressionRule()); } 
	 EOF 
;

// Rule ReturnExpression
ruleReturnExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnExpressionAccess().getGroup()); }
(rule__ReturnExpression__Group__0)
{ after(grammarAccess.getReturnExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTryCatchFinallyExpression
entryRuleTryCatchFinallyExpression 
:
{ before(grammarAccess.getTryCatchFinallyExpressionRule()); }
	 ruleTryCatchFinallyExpression
{ after(grammarAccess.getTryCatchFinallyExpressionRule()); } 
	 EOF 
;

// Rule TryCatchFinallyExpression
ruleTryCatchFinallyExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTryCatchFinallyExpressionAccess().getGroup()); }
(rule__TryCatchFinallyExpression__Group__0)
{ after(grammarAccess.getTryCatchFinallyExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSynchronizedExpression
entryRuleSynchronizedExpression 
:
{ before(grammarAccess.getSynchronizedExpressionRule()); }
	 ruleSynchronizedExpression
{ after(grammarAccess.getSynchronizedExpressionRule()); } 
	 EOF 
;

// Rule SynchronizedExpression
ruleSynchronizedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSynchronizedExpressionAccess().getGroup()); }
(rule__SynchronizedExpression__Group__0)
{ after(grammarAccess.getSynchronizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCatchClause
entryRuleCatchClause 
:
{ before(grammarAccess.getCatchClauseRule()); }
	 ruleCatchClause
{ after(grammarAccess.getCatchClauseRule()); } 
	 EOF 
;

// Rule CatchClause
ruleCatchClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCatchClauseAccess().getGroup()); }
(rule__CatchClause__Group__0)
{ after(grammarAccess.getCatchClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumber
entryRuleNumber 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberAccess().getAlternatives()); }
(rule__Number__Alternatives)
{ after(grammarAccess.getNumberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}





// Entry rule entryRuleJMLMultilineSpecCommentStart
entryRuleJMLMultilineSpecCommentStart 
:
{ before(grammarAccess.getJMLMultilineSpecCommentStartRule()); }
	 ruleJMLMultilineSpecCommentStart
{ after(grammarAccess.getJMLMultilineSpecCommentStartRule()); } 
	 EOF 
;

// Rule JMLMultilineSpecCommentStart
ruleJMLMultilineSpecCommentStart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLMultilineSpecCommentStartAccess().getSolidusAsteriskCommercialAtKeyword()); }

	'/*@' 

{ after(grammarAccess.getJMLMultilineSpecCommentStartAccess().getSolidusAsteriskCommercialAtKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJMLMultilineSpecCommentEnd
entryRuleJMLMultilineSpecCommentEnd 
:
{ before(grammarAccess.getJMLMultilineSpecCommentEndRule()); }
	 ruleJMLMultilineSpecCommentEnd
{ after(grammarAccess.getJMLMultilineSpecCommentEndRule()); } 
	 EOF 
;

// Rule JMLMultilineSpecCommentEnd
ruleJMLMultilineSpecCommentEnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJMLMultilineSpecCommentEndAccess().getAlternatives()); }
(rule__JMLMultilineSpecCommentEnd__Alternatives)
{ after(grammarAccess.getJMLMultilineSpecCommentEndAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmTypeReference
entryRuleJvmTypeReference 
:
{ before(grammarAccess.getJvmTypeReferenceRule()); }
	 ruleJvmTypeReference
{ after(grammarAccess.getJvmTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmTypeReference
ruleJvmTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getAlternatives()); }
(rule__JvmTypeReference__Alternatives)
{ after(grammarAccess.getJvmTypeReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayBrackets
entryRuleArrayBrackets 
:
{ before(grammarAccess.getArrayBracketsRule()); }
	 ruleArrayBrackets
{ after(grammarAccess.getArrayBracketsRule()); } 
	 EOF 
;

// Rule ArrayBrackets
ruleArrayBrackets
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayBracketsAccess().getGroup()); }
(rule__ArrayBrackets__Group__0)
{ after(grammarAccess.getArrayBracketsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXFunctionTypeRef
entryRuleXFunctionTypeRef 
:
{ before(grammarAccess.getXFunctionTypeRefRule()); }
	 ruleXFunctionTypeRef
{ after(grammarAccess.getXFunctionTypeRefRule()); } 
	 EOF 
;

// Rule XFunctionTypeRef
ruleXFunctionTypeRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup()); }
(rule__XFunctionTypeRef__Group__0)
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmParameterizedTypeReference
entryRuleJvmParameterizedTypeReference 
:
{ before(grammarAccess.getJvmParameterizedTypeReferenceRule()); }
	 ruleJvmParameterizedTypeReference
{ after(grammarAccess.getJvmParameterizedTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmParameterizedTypeReference
ruleJvmParameterizedTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup()); }
(rule__JvmParameterizedTypeReference__Group__0)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmArgumentTypeReference
entryRuleJvmArgumentTypeReference 
:
{ before(grammarAccess.getJvmArgumentTypeReferenceRule()); }
	 ruleJvmArgumentTypeReference
{ after(grammarAccess.getJvmArgumentTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmArgumentTypeReference
ruleJvmArgumentTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmArgumentTypeReferenceAccess().getAlternatives()); }
(rule__JvmArgumentTypeReference__Alternatives)
{ after(grammarAccess.getJvmArgumentTypeReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmWildcardTypeReference
entryRuleJvmWildcardTypeReference 
:
{ before(grammarAccess.getJvmWildcardTypeReferenceRule()); }
	 ruleJvmWildcardTypeReference
{ after(grammarAccess.getJvmWildcardTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmWildcardTypeReference
ruleJvmWildcardTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup()); }
(rule__JvmWildcardTypeReference__Group__0)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmUpperBound
entryRuleJvmUpperBound 
:
{ before(grammarAccess.getJvmUpperBoundRule()); }
	 ruleJvmUpperBound
{ after(grammarAccess.getJvmUpperBoundRule()); } 
	 EOF 
;

// Rule JvmUpperBound
ruleJvmUpperBound
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmUpperBoundAccess().getGroup()); }
(rule__JvmUpperBound__Group__0)
{ after(grammarAccess.getJvmUpperBoundAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmUpperBoundAnded
entryRuleJvmUpperBoundAnded 
:
{ before(grammarAccess.getJvmUpperBoundAndedRule()); }
	 ruleJvmUpperBoundAnded
{ after(grammarAccess.getJvmUpperBoundAndedRule()); } 
	 EOF 
;

// Rule JvmUpperBoundAnded
ruleJvmUpperBoundAnded
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmUpperBoundAndedAccess().getGroup()); }
(rule__JvmUpperBoundAnded__Group__0)
{ after(grammarAccess.getJvmUpperBoundAndedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmLowerBound
entryRuleJvmLowerBound 
:
{ before(grammarAccess.getJvmLowerBoundRule()); }
	 ruleJvmLowerBound
{ after(grammarAccess.getJvmLowerBoundRule()); } 
	 EOF 
;

// Rule JvmLowerBound
ruleJvmLowerBound
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmLowerBoundAccess().getGroup()); }
(rule__JvmLowerBound__Group__0)
{ after(grammarAccess.getJvmLowerBoundAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmLowerBoundAnded
entryRuleJvmLowerBoundAnded 
:
{ before(grammarAccess.getJvmLowerBoundAndedRule()); }
	 ruleJvmLowerBoundAnded
{ after(grammarAccess.getJvmLowerBoundAndedRule()); } 
	 EOF 
;

// Rule JvmLowerBoundAnded
ruleJvmLowerBoundAnded
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmLowerBoundAndedAccess().getGroup()); }
(rule__JvmLowerBoundAnded__Group__0)
{ after(grammarAccess.getJvmLowerBoundAndedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValidID
entryRuleValidID 
:
{ before(grammarAccess.getValidIDRule()); }
	 ruleValidID
{ after(grammarAccess.getValidIDRule()); } 
	 EOF 
;

// Rule ValidID
ruleValidID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleXImportDeclaration
entryRuleXImportDeclaration 
:
{ before(grammarAccess.getXImportDeclarationRule()); }
	 ruleXImportDeclaration
{ after(grammarAccess.getXImportDeclarationRule()); } 
	 EOF 
;

// Rule XImportDeclaration
ruleXImportDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXImportDeclarationAccess().getGroup()); }
(rule__XImportDeclaration__Group__0)
{ after(grammarAccess.getXImportDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameInStaticImport
entryRuleQualifiedNameInStaticImport 
:
{ before(grammarAccess.getQualifiedNameInStaticImportRule()); }
	 ruleQualifiedNameInStaticImport
{ after(grammarAccess.getQualifiedNameInStaticImportRule()); } 
	 EOF 
;

// Rule QualifiedNameInStaticImport
ruleQualifiedNameInStaticImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup()); }
(rule__QualifiedNameInStaticImport__Group__0)
{ after(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup()); }
)
(
{ before(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup()); }
(rule__QualifiedNameInStaticImport__Group__0)*
{ after(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule ModifierValue
ruleModifierValue
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierValueAccess().getAlternatives()); }
(rule__ModifierValue__Alternatives)
{ after(grammarAccess.getModifierValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule VisibilityModifierValue
ruleVisibilityModifierValue
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityModifierValueAccess().getAlternatives()); }
(rule__VisibilityModifierValue__Alternatives)
{ after(grammarAccess.getVisibilityModifierValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule JMLSpecMemberModifier
ruleJMLSpecMemberModifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSpecMemberModifierAccess().getAlternatives()); }
(rule__JMLSpecMemberModifier__Alternatives)
{ after(grammarAccess.getJMLSpecMemberModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PrimitiveType
rulePrimitiveType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
(rule__PrimitiveType__Alternatives)
{ after(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ClassOrInterfaceDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOrInterfaceDeclarationAccess().getClassDeclarationParserRuleCall_0()); }
	ruleClassDeclaration
{ after(grammarAccess.getClassOrInterfaceDeclarationAccess().getClassDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassOrInterfaceDeclarationAccess().getInterfaceDeclarationParserRuleCall_1()); }
	ruleInterfaceDeclaration
{ after(grammarAccess.getClassOrInterfaceDeclarationAccess().getInterfaceDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getAnnotationParserRuleCall_0()); }
	ruleAnnotation
{ after(grammarAccess.getModifierAccess().getAnnotationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getRegularModifierParserRuleCall_1()); }
	ruleRegularModifier
{ after(grammarAccess.getModifierAccess().getRegularModifierParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getNormalClassDeclarationParserRuleCall_0()); }
	ruleNormalClassDeclaration
{ after(grammarAccess.getClassDeclarationAccess().getNormalClassDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassDeclarationAccess().getEnumDeclarationParserRuleCall_1()); }
	ruleEnumDeclaration
{ after(grammarAccess.getClassDeclarationAccess().getEnumDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getNormalInterfaceDeclarationParserRuleCall_0()); }
	ruleNormalInterfaceDeclaration
{ after(grammarAccess.getInterfaceDeclarationAccess().getNormalInterfaceDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInterfaceDeclarationAccess().getAnnotationTypeDeclarationParserRuleCall_1()); }
	ruleAnnotationTypeDeclaration
{ after(grammarAccess.getInterfaceDeclarationAccess().getAnnotationTypeDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBodyDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassBodyDeclarationAccess().getGroup_0()); }
(rule__ClassBodyDeclaration__Group_0__0)
{ after(grammarAccess.getClassBodyDeclarationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getClassBodyDeclarationAccess().getStaticBlockParserRuleCall_1()); }
	ruleStaticBlock
{ after(grammarAccess.getClassBodyDeclarationAccess().getStaticBlockParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getClassBodyDeclarationAccess().getJMLSpecifiedElementParserRuleCall_2()); }
	ruleJMLSpecifiedElement
{ after(grammarAccess.getClassBodyDeclarationAccess().getJMLSpecifiedElementParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSpecifiedElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSpecifiedElementAccess().getJMLMultilineSpecParserRuleCall_0()); }
	ruleJMLMultilineSpec
{ after(grammarAccess.getJMLSpecifiedElementAccess().getJMLMultilineSpecParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getJMLSpecifiedElementAccess().getJMLSinglelineSpecParserRuleCall_1()); }
	ruleJMLSinglelineSpec
{ after(grammarAccess.getJMLSpecifiedElementAccess().getJMLSinglelineSpecParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMultilineSpec__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMultilineSpecAccess().getGroup_1_0()); }
(rule__JMLMultilineSpec__Group_1_0__0)
{ after(grammarAccess.getJMLMultilineSpecAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getJMLMultilineSpecAccess().getGroup_1_1()); }
(rule__JMLMultilineSpec__Group_1_1__0)
{ after(grammarAccess.getJMLMultilineSpecAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMultilineSpec__Alternatives_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMultilineSpecAccess().getGroup_1_1_1_0()); }
(rule__JMLMultilineSpec__Group_1_1_1_0__0)
{ after(grammarAccess.getJMLMultilineSpecAccess().getGroup_1_1_1_0()); }
)

    |(
{ before(grammarAccess.getJMLMultilineSpecAccess().getGroup_1_1_1_1()); }
(rule__JMLMultilineSpec__Group_1_1_1_1__0)
{ after(grammarAccess.getJMLMultilineSpecAccess().getGroup_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSinglelineSpec__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSinglelineSpecAccess().getElementAssignment_0()); }
(rule__JMLSinglelineSpec__ElementAssignment_0)
{ after(grammarAccess.getJMLSinglelineSpecAccess().getElementAssignment_0()); }
)

    |(
{ before(grammarAccess.getJMLSinglelineSpecAccess().getGroup_1()); }
(rule__JMLSinglelineSpec__Group_1__0)
{ after(grammarAccess.getJMLSinglelineSpecAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSinglelineSpec__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSinglelineSpecAccess().getJmlTypeSpecificationsAssignment_1_1_0()); }
(rule__JMLSinglelineSpec__JmlTypeSpecificationsAssignment_1_1_0)
{ after(grammarAccess.getJMLSinglelineSpecAccess().getJmlTypeSpecificationsAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getJMLSinglelineSpecAccess().getGroup_1_1_1()); }
(rule__JMLSinglelineSpec__Group_1_1_1__0)
{ after(grammarAccess.getJMLSinglelineSpecAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLMethodSpecificationWithModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMethodSpecificationWithModifierAccess().getJMLMethodSpecificationWithModifierRegularParserRuleCall_0()); }
	ruleJMLMethodSpecificationWithModifierRegular
{ after(grammarAccess.getJMLMethodSpecificationWithModifierAccess().getJMLMethodSpecificationWithModifierRegularParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getJMLMethodSpecificationWithModifierAccess().getJMLMethodSpecificationWithModifierExtendedParserRuleCall_1()); }
	ruleJMLMethodSpecificationWithModifierExtended
{ after(grammarAccess.getJMLMethodSpecificationWithModifierAccess().getJMLMethodSpecificationWithModifierExtendedParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMethodSpecification__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMethodSpecificationAccess().getJMLMethodExpressionParserRuleCall_0()); }
	ruleJMLMethodExpression
{ after(grammarAccess.getJMLMethodSpecificationAccess().getJMLMethodExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getJMLMethodSpecificationAccess().getJMLMethodBehaviorParserRuleCall_1()); }
	ruleJMLMethodBehavior
{ after(grammarAccess.getJMLMethodSpecificationAccess().getJMLMethodBehaviorParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMethodBehavior__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMethodBehaviorAccess().getJMLExceptionalBehaviorBlockParserRuleCall_0()); }
	ruleJMLExceptionalBehaviorBlock
{ after(grammarAccess.getJMLMethodBehaviorAccess().getJMLExceptionalBehaviorBlockParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getJMLMethodBehaviorAccess().getJMLNormalBehaviorBlockParserRuleCall_1()); }
	ruleJMLNormalBehaviorBlock
{ after(grammarAccess.getJMLMethodBehaviorAccess().getJMLNormalBehaviorBlockParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getJMLMethodBehaviorAccess().getJMLBehaviorBlockParserRuleCall_2()); }
	ruleJMLBehaviorBlock
{ after(grammarAccess.getJMLMethodBehaviorAccess().getJMLBehaviorBlockParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMethodExpression__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMethodExpressionAccess().getJMLEnsuresExpressionParserRuleCall_0_0()); }
	ruleJMLEnsuresExpression
{ after(grammarAccess.getJMLMethodExpressionAccess().getJMLEnsuresExpressionParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getJMLMethodExpressionAccess().getJMLRequiresExpressionParserRuleCall_0_1()); }
	ruleJMLRequiresExpression
{ after(grammarAccess.getJMLMethodExpressionAccess().getJMLRequiresExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSpecificationOnlyElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSpecificationOnlyElementAccess().getJMLGhostElementParserRuleCall_0()); }
	ruleJMLGhostElement
{ after(grammarAccess.getJMLSpecificationOnlyElementAccess().getJMLGhostElementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getJMLSpecificationOnlyElementAccess().getJMLModelElementParserRuleCall_1()); }
	ruleJMLModelElement
{ after(grammarAccess.getJMLSpecificationOnlyElementAccess().getJMLModelElementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLTypeExpression__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLTypeExpressionAccess().getJMLInvariantExpressionParserRuleCall_0_0()); }
	ruleJMLInvariantExpression
{ after(grammarAccess.getJMLTypeExpressionAccess().getJMLInvariantExpressionParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getJMLTypeExpressionAccess().getJMLConstraintExpressionParserRuleCall_0_1()); }
	ruleJMLConstraintExpression
{ after(grammarAccess.getJMLTypeExpressionAccess().getJMLConstraintExpressionParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getJMLTypeExpressionAccess().getJMLAxiomExpressionParserRuleCall_0_2()); }
	ruleJMLAxiomExpression
{ after(grammarAccess.getJMLTypeExpressionAccess().getJMLAxiomExpressionParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclWithModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclWithModifierAccess().getMemberDeclWithModifierRegularParserRuleCall_0()); }
	ruleMemberDeclWithModifierRegular
{ after(grammarAccess.getMemberDeclWithModifierAccess().getMemberDeclWithModifierRegularParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMemberDeclWithModifierAccess().getMemberDeclWithModifierSpecParserRuleCall_1()); }
	ruleMemberDeclWithModifierSpec
{ after(grammarAccess.getMemberDeclWithModifierAccess().getMemberDeclWithModifierSpecParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDecl__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclAccess().getGenericMethodOrConstructorDeclParserRuleCall_0()); }
	ruleGenericMethodOrConstructorDecl
{ after(grammarAccess.getMemberDeclAccess().getGenericMethodOrConstructorDeclParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMemberDeclAccess().getMemberDeclarationParserRuleCall_1()); }
	ruleMemberDeclaration
{ after(grammarAccess.getMemberDeclAccess().getMemberDeclarationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getMemberDeclAccess().getConstructorParserRuleCall_2()); }
	ruleConstructor
{ after(grammarAccess.getMemberDeclAccess().getConstructorParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getMemberDeclAccess().getInterfaceDeclarationParserRuleCall_3()); }
	ruleInterfaceDeclaration
{ after(grammarAccess.getMemberDeclAccess().getInterfaceDeclarationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getMemberDeclAccess().getClassDeclarationParserRuleCall_4()); }
	ruleClassDeclaration
{ after(grammarAccess.getMemberDeclAccess().getClassDeclarationParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getConstructorbodyAssignment_5_0()); }
(rule__Constructor__ConstructorbodyAssignment_5_0)
{ after(grammarAccess.getConstructorAccess().getConstructorbodyAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getConstructorAccess().getSemicolonKeyword_5_1()); }

	';' 

{ after(grammarAccess.getConstructorAccess().getSemicolonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclaration__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclarationAccess().getTypeAssignment_0_0()); }
(rule__MemberDeclaration__TypeAssignment_0_0)
{ after(grammarAccess.getMemberDeclarationAccess().getTypeAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getMemberDeclarationAccess().getVoidKeyword_0_1()); }

	'void' 

{ after(grammarAccess.getMemberDeclarationAccess().getVoidKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclarationAccess().getMethodAssignment_1_0()); }
(rule__MemberDeclaration__MethodAssignment_1_0)
{ after(grammarAccess.getMemberDeclarationAccess().getMethodAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getMemberDeclarationAccess().getFieldAssignment_1_1()); }
(rule__MemberDeclaration__FieldAssignment_1_1)
{ after(grammarAccess.getMemberDeclarationAccess().getFieldAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__GenericMethodOrConstructorDecl__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericMethodOrConstructorDeclAccess().getAlternatives_1_0()); }
(rule__GenericMethodOrConstructorDecl__Alternatives_1_0)
{ after(grammarAccess.getGenericMethodOrConstructorDeclAccess().getAlternatives_1_0()); }
)

    |(
{ before(grammarAccess.getGenericMethodOrConstructorDeclAccess().getConstructorAssignment_1_1()); }
(rule__GenericMethodOrConstructorDecl__ConstructorAssignment_1_1)
{ after(grammarAccess.getGenericMethodOrConstructorDeclAccess().getConstructorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericMethodOrConstructorDecl__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericMethodOrConstructorDeclAccess().getGroup_1_0_0()); }
(rule__GenericMethodOrConstructorDecl__Group_1_0_0__0)
{ after(grammarAccess.getGenericMethodOrConstructorDeclAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getGenericMethodOrConstructorDeclAccess().getGroup_1_0_1()); }
(rule__GenericMethodOrConstructorDecl__Group_1_0_1__0)
{ after(grammarAccess.getGenericMethodOrConstructorDeclAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getMethodbodyAssignment_5_0()); }
(rule__MethodDeclaration__MethodbodyAssignment_5_0)
{ after(grammarAccess.getMethodDeclarationAccess().getMethodbodyAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getMethodDeclarationAccess().getSemicolonKeyword_5_1()); }

	';' 

{ after(grammarAccess.getMethodDeclarationAccess().getSemicolonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getClassOrInterfaceTypeWithBracketsParserRuleCall_0()); }
	ruleClassOrInterfaceTypeWithBrackets
{ after(grammarAccess.getTypeAccess().getClassOrInterfaceTypeWithBracketsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeWithBracketsParserRuleCall_1()); }
	rulePrimitiveTypeWithBrackets
{ after(grammarAccess.getTypeAccess().getPrimitiveTypeWithBracketsParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArgument__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentAccess().getTypeAssignment_1_0()); }
(rule__TypeArgument__TypeAssignment_1_0)
{ after(grammarAccess.getTypeArgumentAccess().getTypeAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getTypeArgumentAccess().getGroup_1_1()); }
(rule__TypeArgument__Group_1_1__0)
{ after(grammarAccess.getTypeArgumentAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArgument__Alternatives_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentAccess().getExtendsAssignment_1_1_1_0_0()); }
(rule__TypeArgument__ExtendsAssignment_1_1_1_0_0)
{ after(grammarAccess.getTypeArgumentAccess().getExtendsAssignment_1_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getTypeArgumentAccess().getSuperAssignment_1_1_1_0_1()); }
(rule__TypeArgument__SuperAssignment_1_1_1_0_1)
{ after(grammarAccess.getTypeArgumentAccess().getSuperAssignment_1_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Annotation__Alternatives_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getElementvaluepairsAssignment_3_1_0()); }
(rule__Annotation__ElementvaluepairsAssignment_3_1_0)
{ after(grammarAccess.getAnnotationAccess().getElementvaluepairsAssignment_3_1_0()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getElementvalueAssignment_3_1_1()); }
(rule__Annotation__ElementvalueAssignment_3_1_1)
{ after(grammarAccess.getAnnotationAccess().getElementvalueAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValueAccess().getAnnotationParserRuleCall_0()); }
	ruleAnnotation
{ after(grammarAccess.getElementValueAccess().getAnnotationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getElementValueAccess().getElementValueArrayInitializerParserRuleCall_1()); }
	ruleElementValueArrayInitializer
{ after(grammarAccess.getElementValueAccess().getElementValueArrayInitializerParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeElementRest__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeElementRestAccess().getGroup_0()); }
(rule__AnnotationTypeElementRest__Group_0__0)
{ after(grammarAccess.getAnnotationTypeElementRestAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAnnotationTypeElementRestAccess().getGroup_1()); }
(rule__AnnotationTypeElementRest__Group_1__0)
{ after(grammarAccess.getAnnotationTypeElementRestAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getAnnotationTypeElementRestAccess().getGroup_2()); }
(rule__AnnotationTypeElementRest__Group_2__0)
{ after(grammarAccess.getAnnotationTypeElementRestAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getAnnotationTypeElementRestAccess().getGroup_3()); }
(rule__AnnotationTypeElementRest__Group_3__0)
{ after(grammarAccess.getAnnotationTypeElementRestAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getAnnotationTypeElementRestAccess().getGroup_4()); }
(rule__AnnotationTypeElementRest__Group_4__0)
{ after(grammarAccess.getAnnotationTypeElementRestAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMethodOrConstantRest__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMethodOrConstantRestAccess().getMethodAssignment_1_0()); }
(rule__AnnotationMethodOrConstantRest__MethodAssignment_1_0)
{ after(grammarAccess.getAnnotationMethodOrConstantRestAccess().getMethodAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getAnnotationMethodOrConstantRestAccess().getConstantAssignment_1_1()); }
(rule__AnnotationMethodOrConstantRest__ConstantAssignment_1_1)
{ after(grammarAccess.getAnnotationMethodOrConstantRestAccess().getConstantAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockStatementAccess().getClassifierDeclarationWithModifierParserRuleCall_0()); }
	ruleClassifierDeclarationWithModifier
{ after(grammarAccess.getBlockStatementAccess().getClassifierDeclarationWithModifierParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBlockStatementAccess().getGroup_1()); }
(rule__BlockStatement__Group_1__0)
{ after(grammarAccess.getBlockStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_0()); }
(rule__Assignment__Group_0__0)
{ after(grammarAccess.getAssignmentAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAssignmentAccess().getGroup_1()); }
(rule__Assignment__Group_1__0)
{ after(grammarAccess.getAssignmentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiAssign__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); }

	'+=' 

{ after(grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); }

	'-=' 

{ after(grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2()); }

	'*=' 

{ after(grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3()); }

	'/=' 

{ after(grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4()); }

	'%=' 

{ after(grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getGroup_5()); }
(rule__OpMultiAssign__Group_5__0)
{ after(grammarAccess.getOpMultiAssignAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getGroup_6()); }
(rule__OpMultiAssign__Group_6__0)
{ after(grammarAccess.getOpMultiAssignAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpEquality__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); }

	'==' 

{ after(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); }

	'!=' 

{ after(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); }

	'===' 

{ after(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3()); }

	'!==' 

{ after(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_0()); }
(rule__RelationalExpression__Group_1_0__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_1()); }
(rule__RelationalExpression__Group_1_1__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpCompare__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); }

	'>=' 

{ after(grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getGroup_1()); }
(rule__OpCompare__Group_1__0)
{ after(grammarAccess.getOpCompareAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); }

	'>' 

{ after(grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); }

	'<' 

{ after(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); }

	'->' 

{ after(grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1()); }

	'..<' 

{ after(grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getGroup_2()); }
(rule__OpOther__Group_2__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3()); }

	'..' 

{ after(grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4()); }

	'=>' 

{ after(grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getGroup_5()); }
(rule__OpOther__Group_5__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getGroup_6()); }
(rule__OpOther__Group_6__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7()); }

	'<>' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8()); }

	'?:' 

{ after(grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Alternatives_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGroup_5_1_0()); }
(rule__OpOther__Group_5_1_0__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_5_1_0()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1()); }

	'>' 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Alternatives_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGroup_6_1_0()); }
(rule__OpOther__Group_6_1_0__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_6_1_0()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1()); }

	'<' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2()); }

	'=>' 

{ after(grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpAdd__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpMulti__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); }

	'*' 

{ after(grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); }

	'**' 

{ after(grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); }

	'/' 

{ after(grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); }

	'%' 

{ after(grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getGroup_0()); }
(rule__UnaryOperation__Group_0__0)
{ after(grammarAccess.getUnaryOperationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnaryOperationAccess().getPostfixOperationParserRuleCall_1()); }
	rulePostfixOperation
{ after(grammarAccess.getUnaryOperationAccess().getPostfixOperationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpUnary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); }

	'!' 

{ after(grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); }

	'+' 

{ after(grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpPostfix__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0()); }

	'++' 

{ after(grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1()); }

	'--' 

{ after(grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_0()); }
(rule__MemberFeatureCall__Group_1_0__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1()); }
(rule__MemberFeatureCall__Group_1_1__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Alternatives_1_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0()); }

	'.' 

{ after(grammarAccess.getMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0()); }
)

    |(
{ before(grammarAccess.getMemberFeatureCallAccess().getNullSafeAssignment_1_1_0_0_1_1()); }
(rule__MemberFeatureCall__NullSafeAssignment_1_1_0_0_1_1)
{ after(grammarAccess.getMemberFeatureCallAccess().getNullSafeAssignment_1_1_0_0_1_1()); }
)

    |(
{ before(grammarAccess.getMemberFeatureCallAccess().getExplicitStaticAssignment_1_1_0_0_1_2()); }
(rule__MemberFeatureCall__ExplicitStaticAssignment_1_1_0_0_1_2)
{ after(grammarAccess.getMemberFeatureCallAccess().getExplicitStaticAssignment_1_1_0_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Alternatives_1_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_0()); }
(rule__MemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_0)
{ after(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_0()); }
)

    |(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_3_1_1()); }
(rule__MemberFeatureCall__Group_1_1_3_1_1__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getConstructorCallParserRuleCall_0()); }
	ruleConstructorCall
{ after(grammarAccess.getPrimaryExpressionAccess().getConstructorCallParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_1()); }
	ruleBlockExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getSwitchExpressionParserRuleCall_2()); }
	ruleSwitchExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getSwitchExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getSynchronizedExpressionParserRuleCall_3()); }
(	ruleSynchronizedExpression)
{ after(grammarAccess.getPrimaryExpressionAccess().getSynchronizedExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_4()); }
	ruleFeatureCall
{ after(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_5()); }
	ruleLiteral
{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getIfExpressionParserRuleCall_6()); }
	ruleIfExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getIfExpressionParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getForLoopExpressionParserRuleCall_7()); }
(	ruleForLoopExpression)
{ after(grammarAccess.getPrimaryExpressionAccess().getForLoopExpressionParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getBasicForLoopExpressionParserRuleCall_8()); }
	ruleBasicForLoopExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getBasicForLoopExpressionParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getWhileExpressionParserRuleCall_9()); }
	ruleWhileExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getWhileExpressionParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getDoWhileExpressionParserRuleCall_10()); }
	ruleDoWhileExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getDoWhileExpressionParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getThrowExpressionParserRuleCall_11()); }
	ruleThrowExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getThrowExpressionParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getReturnExpressionParserRuleCall_12()); }
	ruleReturnExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getReturnExpressionParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getTryCatchFinallyExpressionParserRuleCall_13()); }
	ruleTryCatchFinallyExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getTryCatchFinallyExpressionParserRuleCall_13()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getParenthesisExpressionParserRuleCall_14()); }
	ruleParenthesisExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getParenthesisExpressionParserRuleCall_14()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getJMLOldExpressionParserRuleCall_15()); }
	ruleJMLOldExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getJMLOldExpressionParserRuleCall_15()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getJMLFreshExpressionParserRuleCall_16()); }
	ruleJMLFreshExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getJMLFreshExpressionParserRuleCall_16()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getJMLResultExpressionParserRuleCall_17()); }
	ruleJMLResultExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getJMLResultExpressionParserRuleCall_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisExpressionAccess().getExprAssignment_1_0()); }
(rule__ParenthesisExpression__ExprAssignment_1_0)
{ after(grammarAccess.getParenthesisExpressionAccess().getExprAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getParenthesisExpressionAccess().getExprAssignment_1_1()); }
(rule__ParenthesisExpression__ExprAssignment_1_1)
{ after(grammarAccess.getParenthesisExpressionAccess().getExprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getGroup_0_0()); }
(rule__VarDecl__Group_0_0__0)
{ after(grammarAccess.getVarDeclAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getVarDeclAccess().getNameAssignment_0_1()); }
(rule__VarDecl__NameAssignment_0_1)
{ after(grammarAccess.getVarDeclAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getCollectionLiteralParserRuleCall_0()); }
	ruleCollectionLiteral
{ after(grammarAccess.getLiteralAccess().getCollectionLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getClosureParserRuleCall_1()); }
(	ruleClosure)
{ after(grammarAccess.getLiteralAccess().getClosureParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_2()); }
	ruleBooleanLiteral
{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_3()); }
	ruleNumberLiteral
{ after(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_4()); }
	ruleNullLiteral
{ after(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_5()); }
	ruleStringLiteral
{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getCharLiteralParserRuleCall_6()); }
	ruleCharLiteral
{ after(grammarAccess.getLiteralAccess().getCharLiteralParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralAccess().getSetLiteralParserRuleCall_0()); }
	ruleSetLiteral
{ after(grammarAccess.getCollectionLiteralAccess().getSetLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCollectionLiteralAccess().getListLiteralParserRuleCall_1()); }
	ruleListLiteral
{ after(grammarAccess.getCollectionLiteralAccess().getListLiteralParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getGroup_2_0()); }
(rule__SwitchExpression__Group_2_0__0)
{ after(grammarAccess.getSwitchExpressionAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getSwitchExpressionAccess().getGroup_2_1()); }
(rule__SwitchExpression__Group_2_1__0)
{ after(grammarAccess.getSwitchExpressionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getGroup_3_0()); }
(rule__CasePart__Group_3_0__0)
{ after(grammarAccess.getCasePartAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getCasePartAccess().getCommaKeyword_3_1()); }

	',' 

{ after(grammarAccess.getCasePartAccess().getCommaKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Alternatives_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_0()); }
(rule__FeatureCall__FeatureCallArgumentsAssignment_3_1_0)
{ after(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_0()); }
)

    |(
{ before(grammarAccess.getFeatureCallAccess().getGroup_3_1_1()); }
(rule__FeatureCall__Group_3_1_1__0)
{ after(grammarAccess.getFeatureCallAccess().getGroup_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdOrSuper__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); }
	ruleFeatureCallID
{ after(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); }

	'super' 

{ after(grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); }
)

    |(
{ before(grammarAccess.getIdOrSuperAccess().getClassKeyword_2()); }

	'class' 

{ after(grammarAccess.getIdOrSuperAccess().getClassKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Alternatives_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getArgumentsAssignment_4_1_0()); }
(rule__ConstructorCall__ArgumentsAssignment_4_1_0)
{ after(grammarAccess.getConstructorCallAccess().getArgumentsAssignment_4_1_0()); }
)

    |(
{ before(grammarAccess.getConstructorCallAccess().getGroup_4_1_1()); }
(rule__ConstructorCall__Group_4_1_1__0)
{ after(grammarAccess.getConstructorCallAccess().getGroup_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_0()); }

	'false' 

{ after(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getBooleanLiteralAccess().getIsTrueAssignment_1_1()); }
(rule__BooleanLiteral__IsTrueAssignment_1_1)
{ after(grammarAccess.getBooleanLiteralAccess().getIsTrueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchFinallyExpression__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchFinallyExpressionAccess().getGroup_3_0()); }
(rule__TryCatchFinallyExpression__Group_3_0__0)
{ after(grammarAccess.getTryCatchFinallyExpressionAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getTryCatchFinallyExpressionAccess().getGroup_3_1()); }
(rule__TryCatchFinallyExpression__Group_3_1__0)
{ after(grammarAccess.getTryCatchFinallyExpressionAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); }
	RULE_HEX
{ after(grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getGroup_1()); }
(rule__Number__Group_1__0)
{ after(grammarAccess.getNumberAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); }
	RULE_INT
{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); }
	RULE_DECIMAL
{ after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); }
	RULE_INT
{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); }
	RULE_DECIMAL
{ after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMultilineSpecCommentEnd__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMultilineSpecCommentEndAccess().getAsteriskSolidusKeyword_0()); }

	'*/' 

{ after(grammarAccess.getJMLMultilineSpecCommentEndAccess().getAsteriskSolidusKeyword_0()); }
)

    |(
{ before(grammarAccess.getJMLMultilineSpecCommentEndAccess().getCommercialAtAsteriskSolidusKeyword_1()); }

	'@*/' 

{ after(grammarAccess.getJMLMultilineSpecCommentEndAccess().getCommercialAtAsteriskSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getGroup_0()); }
(rule__JvmTypeReference__Group_0__0)
{ after(grammarAccess.getJvmTypeReferenceAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); }
	ruleXFunctionTypeRef
{ after(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmArgumentTypeReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); }
	ruleJvmTypeReference
{ after(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); }
	ruleJvmWildcardTypeReference
{ after(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup_2_0()); }
(rule__JvmWildcardTypeReference__Group_2_0__0)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup_2_1()); }
(rule__JvmWildcardTypeReference__Group_2_1__0)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getGroup_1_0()); }
(rule__XImportDeclaration__Group_1_0__0)
{ after(grammarAccess.getXImportDeclarationAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_1()); }
(rule__XImportDeclaration__ImportedTypeAssignment_1_1)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceAssignment_1_2()); }
(rule__XImportDeclaration__ImportedNamespaceAssignment_1_2)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Alternatives_1_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getWildcardAssignment_1_0_3_0()); }
(rule__XImportDeclaration__WildcardAssignment_1_0_3_0)
{ after(grammarAccess.getXImportDeclarationAccess().getWildcardAssignment_1_0_3_0()); }
)

    |(
{ before(grammarAccess.getXImportDeclarationAccess().getMemberNameAssignment_1_0_3_1()); }
(rule__XImportDeclaration__MemberNameAssignment_1_0_3_1)
{ after(grammarAccess.getXImportDeclarationAccess().getMemberNameAssignment_1_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierValueAccess().getPUBLICEnumLiteralDeclaration_0()); }
(	'public' 
)
{ after(grammarAccess.getModifierValueAccess().getPUBLICEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getModifierValueAccess().getPROTECTEDEnumLiteralDeclaration_1()); }
(	'protected' 
)
{ after(grammarAccess.getModifierValueAccess().getPROTECTEDEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getModifierValueAccess().getPRIVATEEnumLiteralDeclaration_2()); }
(	'private' 
)
{ after(grammarAccess.getModifierValueAccess().getPRIVATEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getModifierValueAccess().getSTATICEnumLiteralDeclaration_3()); }
(	'static' 
)
{ after(grammarAccess.getModifierValueAccess().getSTATICEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getModifierValueAccess().getABSTRACTEnumLiteralDeclaration_4()); }
(	'abstract' 
)
{ after(grammarAccess.getModifierValueAccess().getABSTRACTEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getModifierValueAccess().getFINALEnumLiteralDeclaration_5()); }
(	'final' 
)
{ after(grammarAccess.getModifierValueAccess().getFINALEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getModifierValueAccess().getNATIVEEnumLiteralDeclaration_6()); }
(	'native' 
)
{ after(grammarAccess.getModifierValueAccess().getNATIVEEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getModifierValueAccess().getSYNCHRONIZEDEnumLiteralDeclaration_7()); }
(	'synchronized' 
)
{ after(grammarAccess.getModifierValueAccess().getSYNCHRONIZEDEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getModifierValueAccess().getTRANSIENTEnumLiteralDeclaration_8()); }
(	'transient' 
)
{ after(grammarAccess.getModifierValueAccess().getTRANSIENTEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getModifierValueAccess().getVOLATILEEnumLiteralDeclaration_9()); }
(	'volatile' 
)
{ after(grammarAccess.getModifierValueAccess().getVOLATILEEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getModifierValueAccess().getSTRICTFPEnumLiteralDeclaration_10()); }
(	'strictfp' 
)
{ after(grammarAccess.getModifierValueAccess().getSTRICTFPEnumLiteralDeclaration_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibilityModifierValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityModifierValueAccess().getPUBLICEnumLiteralDeclaration_0()); }
(	'public' 
)
{ after(grammarAccess.getVisibilityModifierValueAccess().getPUBLICEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getVisibilityModifierValueAccess().getPROTECTEDEnumLiteralDeclaration_1()); }
(	'protected' 
)
{ after(grammarAccess.getVisibilityModifierValueAccess().getPROTECTEDEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getVisibilityModifierValueAccess().getPRIVATEEnumLiteralDeclaration_2()); }
(	'private' 
)
{ after(grammarAccess.getVisibilityModifierValueAccess().getPRIVATEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getVisibilityModifierValueAccess().getSTATICEnumLiteralDeclaration_3()); }
(	'static' 
)
{ after(grammarAccess.getVisibilityModifierValueAccess().getSTATICEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSpecMemberModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSpecMemberModifierAccess().getPUREEnumLiteralDeclaration_0()); }
(	'pure' 
)
{ after(grammarAccess.getJMLSpecMemberModifierAccess().getPUREEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getJMLSpecMemberModifierAccess().getHELPEREnumLiteralDeclaration_1()); }
(	'helper' 
)
{ after(grammarAccess.getJMLSpecMemberModifierAccess().getHELPEREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getJMLSpecMemberModifierAccess().getPUBLICEnumLiteralDeclaration_2()); }
(	'spec_public' 
)
{ after(grammarAccess.getJMLSpecMemberModifierAccess().getPUBLICEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getJMLSpecMemberModifierAccess().getPROTECTEDEnumLiteralDeclaration_3()); }
(	'spec_protected' 
)
{ after(grammarAccess.getJMLSpecMemberModifierAccess().getPROTECTEDEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getBOOLEANEnumLiteralDeclaration_0()); }
(	'boolean' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getBOOLEANEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getCHAREnumLiteralDeclaration_1()); }
(	'char' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getCHAREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getBYTEEnumLiteralDeclaration_2()); }
(	'byte' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getBYTEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getSHORTEnumLiteralDeclaration_3()); }
(	'short' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getSHORTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getINTEnumLiteralDeclaration_4()); }
(	'int' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getINTEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getLONGEnumLiteralDeclaration_5()); }
(	'long' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getLONGEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getFLOATEnumLiteralDeclaration_6()); }
(	'float' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getFLOATEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getDOUBLEEnumLiteralDeclaration_7()); }
(	'double' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getDOUBLEEnumLiteralDeclaration_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__CompilationUnit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompilationUnit__Group__0__Impl
	rule__CompilationUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getCompilationUnitAction_0()); }
(

)
{ after(grammarAccess.getCompilationUnitAccess().getCompilationUnitAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompilationUnit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompilationUnit__Group__1__Impl
	rule__CompilationUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getPackagedeclarationAssignment_1()); }
(rule__CompilationUnit__PackagedeclarationAssignment_1)?
{ after(grammarAccess.getCompilationUnitAccess().getPackagedeclarationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompilationUnit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompilationUnit__Group__2__Impl
	rule__CompilationUnit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getImportdeclarationAssignment_2()); }
(rule__CompilationUnit__ImportdeclarationAssignment_2)*
{ after(grammarAccess.getCompilationUnitAccess().getImportdeclarationAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompilationUnit__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompilationUnit__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getTypedeclarationAssignment_3()); }
(rule__CompilationUnit__TypedeclarationAssignment_3)*
{ after(grammarAccess.getCompilationUnitAccess().getTypedeclarationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PackageDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__0__Impl
	rule__PackageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__1__Impl
	rule__PackageDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getQualifiednameAssignment_1()); }
(rule__PackageDeclaration__QualifiednameAssignment_1)
{ after(grammarAccess.getPackageDeclarationAccess().getQualifiednameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getPackageDeclarationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__0__Impl
	rule__ImportDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportDeclarationAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__1__Impl
	rule__ImportDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getStaticAssignment_1()); }
(rule__ImportDeclaration__StaticAssignment_1)?
{ after(grammarAccess.getImportDeclarationAccess().getStaticAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__2__Impl
	rule__ImportDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getQualifiednameAssignment_2()); }
(rule__ImportDeclaration__QualifiednameAssignment_2)
{ after(grammarAccess.getImportDeclarationAccess().getQualifiednameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__3__Impl
	rule__ImportDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getGroup_3()); }
(rule__ImportDeclaration__Group_3__0)?
{ after(grammarAccess.getImportDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getImportDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ImportDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group_3__0__Impl
	rule__ImportDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getFullStopKeyword_3_0()); }
(
	'.' 
)
{ after(grammarAccess.getImportDeclarationAccess().getFullStopKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getWildcardAssignment_3_1()); }
(rule__ImportDeclaration__WildcardAssignment_3_1)
{ after(grammarAccess.getImportDeclarationAccess().getWildcardAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassifierDeclarationWithModifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierDeclarationWithModifier__Group__0__Impl
	rule__ClassifierDeclarationWithModifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclarationWithModifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierDeclarationWithModifierAccess().getModifiersAssignment_0()); }
(rule__ClassifierDeclarationWithModifier__ModifiersAssignment_0)*
{ after(grammarAccess.getClassifierDeclarationWithModifierAccess().getModifiersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierDeclarationWithModifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierDeclarationWithModifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclarationWithModifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierDeclarationWithModifierAccess().getClassOrInterfaceDeclarationAssignment_1()); }
(rule__ClassifierDeclarationWithModifier__ClassOrInterfaceDeclarationAssignment_1)
{ after(grammarAccess.getClassifierDeclarationWithModifierAccess().getClassOrInterfaceDeclarationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NormalClassDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClassDeclaration__Group__0__Impl
	rule__NormalClassDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getClassKeyword_0()); }

	'class' 

{ after(grammarAccess.getNormalClassDeclarationAccess().getClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClassDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClassDeclaration__Group__1__Impl
	rule__NormalClassDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getIdentifierAssignment_1()); }
(rule__NormalClassDeclaration__IdentifierAssignment_1)
{ after(grammarAccess.getNormalClassDeclarationAccess().getIdentifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClassDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClassDeclaration__Group__2__Impl
	rule__NormalClassDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getTypeparametersAssignment_2()); }
(rule__NormalClassDeclaration__TypeparametersAssignment_2)?
{ after(grammarAccess.getNormalClassDeclarationAccess().getTypeparametersAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClassDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClassDeclaration__Group__3__Impl
	rule__NormalClassDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getGroup_3()); }
(rule__NormalClassDeclaration__Group_3__0)?
{ after(grammarAccess.getNormalClassDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClassDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClassDeclaration__Group__4__Impl
	rule__NormalClassDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getGroup_4()); }
(rule__NormalClassDeclaration__Group_4__0)?
{ after(grammarAccess.getNormalClassDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClassDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClassDeclaration__Group__5__Impl
	rule__NormalClassDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getNormalClassDeclarationAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClassDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClassDeclaration__Group__6__Impl
	rule__NormalClassDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getBodyDeclarationsAssignment_6()); }
(rule__NormalClassDeclaration__BodyDeclarationsAssignment_6)*
{ after(grammarAccess.getNormalClassDeclarationAccess().getBodyDeclarationsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClassDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClassDeclaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getNormalClassDeclarationAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__NormalClassDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClassDeclaration__Group_3__0__Impl
	rule__NormalClassDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getExtendsKeyword_3_0()); }

	'extends' 

{ after(grammarAccess.getNormalClassDeclarationAccess().getExtendsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClassDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClassDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getSuperTypeAssignment_3_1()); }
(rule__NormalClassDeclaration__SuperTypeAssignment_3_1)
{ after(grammarAccess.getNormalClassDeclarationAccess().getSuperTypeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NormalClassDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClassDeclaration__Group_4__0__Impl
	rule__NormalClassDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getImplementsKeyword_4_0()); }

	'implements' 

{ after(grammarAccess.getNormalClassDeclarationAccess().getImplementsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClassDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClassDeclaration__Group_4__1__Impl
	rule__NormalClassDeclaration__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getImplementedTypesAssignment_4_1()); }
(rule__NormalClassDeclaration__ImplementedTypesAssignment_4_1)
{ after(grammarAccess.getNormalClassDeclarationAccess().getImplementedTypesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClassDeclaration__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClassDeclaration__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getGroup_4_2()); }
(rule__NormalClassDeclaration__Group_4_2__0)*
{ after(grammarAccess.getNormalClassDeclarationAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NormalClassDeclaration__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClassDeclaration__Group_4_2__0__Impl
	rule__NormalClassDeclaration__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getNormalClassDeclarationAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClassDeclaration__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClassDeclaration__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getImplementedTypesAssignment_4_2_1()); }
(rule__NormalClassDeclaration__ImplementedTypesAssignment_4_2_1)
{ after(grammarAccess.getNormalClassDeclarationAccess().getImplementedTypesAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeParameters__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameters__Group__0__Impl
	rule__TypeParameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameters__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParametersAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getTypeParametersAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameters__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameters__Group__1__Impl
	rule__TypeParameters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameters__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParametersAccess().getTypeparameterAssignment_1()); }
(rule__TypeParameters__TypeparameterAssignment_1)
{ after(grammarAccess.getTypeParametersAccess().getTypeparameterAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameters__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameters__Group__2__Impl
	rule__TypeParameters__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameters__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParametersAccess().getGroup_2()); }
(rule__TypeParameters__Group_2__0)*
{ after(grammarAccess.getTypeParametersAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameters__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameters__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameters__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParametersAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getTypeParametersAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeParameters__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameters__Group_2__0__Impl
	rule__TypeParameters__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameters__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParametersAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getTypeParametersAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameters__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameters__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameters__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParametersAccess().getTypeparameterAssignment_2_1()); }
(rule__TypeParameters__TypeparameterAssignment_2_1)
{ after(grammarAccess.getTypeParametersAccess().getTypeparameterAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameter__Group__0__Impl
	rule__TypeParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getTypeParameterAction_0()); }
(

)
{ after(grammarAccess.getTypeParameterAccess().getTypeParameterAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameter__Group__1__Impl
	rule__TypeParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getIdentifierAssignment_1()); }
(rule__TypeParameter__IdentifierAssignment_1)
{ after(grammarAccess.getTypeParameterAccess().getIdentifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getGroup_2()); }
(rule__TypeParameter__Group_2__0)?
{ after(grammarAccess.getTypeParameterAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeParameter__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameter__Group_2__0__Impl
	rule__TypeParameter__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getTypeParameterAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeParameter__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeParameter__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getTypeboundAssignment_2_1()); }
(rule__TypeParameter__TypeboundAssignment_2_1)
{ after(grammarAccess.getTypeParameterAccess().getTypeboundAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeBound__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeBound__Group__0__Impl
	rule__TypeBound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBound__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeBoundAccess().getTypeAssignment_0()); }
(rule__TypeBound__TypeAssignment_0)
{ after(grammarAccess.getTypeBoundAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeBound__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeBound__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBound__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeBoundAccess().getGroup_1()); }
(rule__TypeBound__Group_1__0)*
{ after(grammarAccess.getTypeBoundAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeBound__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeBound__Group_1__0__Impl
	rule__TypeBound__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBound__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeBoundAccess().getAmpersandKeyword_1_0()); }

	'&' 

{ after(grammarAccess.getTypeBoundAccess().getAmpersandKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeBound__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeBound__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBound__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeBoundAccess().getTypeAssignment_1_1()); }
(rule__TypeBound__TypeAssignment_1_1)
{ after(grammarAccess.getTypeBoundAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__0__Impl
	rule__EnumDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumDeclarationAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__1__Impl
	rule__EnumDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getIdentifierAssignment_1()); }
(rule__EnumDeclaration__IdentifierAssignment_1)
{ after(grammarAccess.getEnumDeclarationAccess().getIdentifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__2__Impl
	rule__EnumDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getGroup_2()); }
(rule__EnumDeclaration__Group_2__0)?
{ after(grammarAccess.getEnumDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__3__Impl
	rule__EnumDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getEnumDeclarationAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__4__Impl
	rule__EnumDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getEnumconstantsAssignment_4()); }
(rule__EnumDeclaration__EnumconstantsAssignment_4)?
{ after(grammarAccess.getEnumDeclarationAccess().getEnumconstantsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__5__Impl
	rule__EnumDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getCommaKeyword_5()); }
(
	',' 
)?
{ after(grammarAccess.getEnumDeclarationAccess().getCommaKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__6__Impl
	rule__EnumDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getBodyDeclarationsAssignment_6()); }
(rule__EnumDeclaration__BodyDeclarationsAssignment_6)?
{ after(grammarAccess.getEnumDeclarationAccess().getBodyDeclarationsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getEnumDeclarationAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__EnumDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group_2__0__Impl
	rule__EnumDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getImplementsKeyword_2_0()); }

	'implements' 

{ after(grammarAccess.getEnumDeclarationAccess().getImplementsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group_2__1__Impl
	rule__EnumDeclaration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getImplementedTypesAssignment_2_1()); }
(rule__EnumDeclaration__ImplementedTypesAssignment_2_1)
{ after(grammarAccess.getEnumDeclarationAccess().getImplementedTypesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getGroup_2_2()); }
(rule__EnumDeclaration__Group_2_2__0)*
{ after(grammarAccess.getEnumDeclarationAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EnumDeclaration__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group_2_2__0__Impl
	rule__EnumDeclaration__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getEnumDeclarationAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDeclaration__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getImplementedTypesAssignment_2_2_1()); }
(rule__EnumDeclaration__ImplementedTypesAssignment_2_2_1)
{ after(grammarAccess.getEnumDeclarationAccess().getImplementedTypesAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumConstants__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstants__Group__0__Impl
	rule__EnumConstants__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstants__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantsAccess().getEnumconstantAssignment_0()); }
(rule__EnumConstants__EnumconstantAssignment_0)
{ after(grammarAccess.getEnumConstantsAccess().getEnumconstantAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumConstants__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstants__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstants__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantsAccess().getGroup_1()); }
(rule__EnumConstants__Group_1__0)*
{ after(grammarAccess.getEnumConstantsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumConstants__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstants__Group_1__0__Impl
	rule__EnumConstants__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstants__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getEnumConstantsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumConstants__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstants__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstants__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantsAccess().getEnumconstantAssignment_1_1()); }
(rule__EnumConstants__EnumconstantAssignment_1_1)
{ after(grammarAccess.getEnumConstantsAccess().getEnumconstantAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumConstant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstant__Group__0__Impl
	rule__EnumConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getEnumConstantAction_0()); }
(

)
{ after(grammarAccess.getEnumConstantAccess().getEnumConstantAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumConstant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstant__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getGroup_1()); }
(rule__EnumConstant__Group_1__0)
{ after(grammarAccess.getEnumConstantAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumConstant__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstant__Group_1__0__Impl
	rule__EnumConstant__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getAnnotationsAssignment_1_0()); }
(rule__EnumConstant__AnnotationsAssignment_1_0)?
{ after(grammarAccess.getEnumConstantAccess().getAnnotationsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumConstant__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstant__Group_1__1__Impl
	rule__EnumConstant__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getIdentifierAssignment_1_1()); }
(rule__EnumConstant__IdentifierAssignment_1_1)
{ after(grammarAccess.getEnumConstantAccess().getIdentifierAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumConstant__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstant__Group_1__2__Impl
	rule__EnumConstant__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getArgumentsAssignment_1_2()); }
(rule__EnumConstant__ArgumentsAssignment_1_2)?
{ after(grammarAccess.getEnumConstantAccess().getArgumentsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumConstant__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstant__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getGroup_1_3()); }
(rule__EnumConstant__Group_1_3__0)?
{ after(grammarAccess.getEnumConstantAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EnumConstant__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstant__Group_1_3__0__Impl
	rule__EnumConstant__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getLeftCurlyBracketKeyword_1_3_0()); }

	'{' 

{ after(grammarAccess.getEnumConstantAccess().getLeftCurlyBracketKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumConstant__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstant__Group_1_3__1__Impl
	rule__EnumConstant__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getClassbodydeclarationAssignment_1_3_1()); }
(rule__EnumConstant__ClassbodydeclarationAssignment_1_3_1)*
{ after(grammarAccess.getEnumConstantAccess().getClassbodydeclarationAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumConstant__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstant__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getRightCurlyBracketKeyword_1_3_2()); }

	'}' 

{ after(grammarAccess.getEnumConstantAccess().getRightCurlyBracketKeyword_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EnumBodyDeclarations__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBodyDeclarations__Group__0__Impl
	rule__EnumBodyDeclarations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBodyDeclarations__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBodyDeclarationsAccess().getEnumBodyDeclarationsAction_0()); }
(

)
{ after(grammarAccess.getEnumBodyDeclarationsAccess().getEnumBodyDeclarationsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumBodyDeclarations__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBodyDeclarations__Group__1__Impl
	rule__EnumBodyDeclarations__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBodyDeclarations__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBodyDeclarationsAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getEnumBodyDeclarationsAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumBodyDeclarations__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBodyDeclarations__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBodyDeclarations__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBodyDeclarationsAccess().getClassbodydeclarationAssignment_2()); }
(rule__EnumBodyDeclarations__ClassbodydeclarationAssignment_2)*
{ after(grammarAccess.getEnumBodyDeclarationsAccess().getClassbodydeclarationAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Arguments__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arguments__Group__0__Impl
	rule__Arguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsAccess().getArgumentsAction_0()); }
(

)
{ after(grammarAccess.getArgumentsAccess().getArgumentsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arguments__Group__1__Impl
	rule__Arguments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arguments__Group__2__Impl
	rule__Arguments__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsAccess().getExpressionsAssignment_2()); }
(rule__Arguments__ExpressionsAssignment_2)
{ after(grammarAccess.getArgumentsAccess().getExpressionsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arguments__Group__3__Impl
	rule__Arguments__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsAccess().getGroup_3()); }
(rule__Arguments__Group_3__0)
{ after(grammarAccess.getArgumentsAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arguments__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Arguments__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arguments__Group_3__0__Impl
	rule__Arguments__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getArgumentsAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arguments__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsAccess().getExpressionsAssignment_3_1()); }
(rule__Arguments__ExpressionsAssignment_3_1)
{ after(grammarAccess.getArgumentsAccess().getExpressionsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NormalInterfaceDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalInterfaceDeclaration__Group__0__Impl
	rule__NormalInterfaceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalInterfaceDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalInterfaceDeclarationAccess().getInterfaceKeyword_0()); }

	'interface' 

{ after(grammarAccess.getNormalInterfaceDeclarationAccess().getInterfaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalInterfaceDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalInterfaceDeclaration__Group__1__Impl
	rule__NormalInterfaceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalInterfaceDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalInterfaceDeclarationAccess().getIdentifierAssignment_1()); }
(rule__NormalInterfaceDeclaration__IdentifierAssignment_1)
{ after(grammarAccess.getNormalInterfaceDeclarationAccess().getIdentifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalInterfaceDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalInterfaceDeclaration__Group__2__Impl
	rule__NormalInterfaceDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalInterfaceDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalInterfaceDeclarationAccess().getTypeparametersAssignment_2()); }
(rule__NormalInterfaceDeclaration__TypeparametersAssignment_2)?
{ after(grammarAccess.getNormalInterfaceDeclarationAccess().getTypeparametersAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalInterfaceDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalInterfaceDeclaration__Group__3__Impl
	rule__NormalInterfaceDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalInterfaceDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalInterfaceDeclarationAccess().getGroup_3()); }
(rule__NormalInterfaceDeclaration__Group_3__0)?
{ after(grammarAccess.getNormalInterfaceDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalInterfaceDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalInterfaceDeclaration__Group__4__Impl
	rule__NormalInterfaceDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalInterfaceDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalInterfaceDeclarationAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getNormalInterfaceDeclarationAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalInterfaceDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalInterfaceDeclaration__Group__5__Impl
	rule__NormalInterfaceDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalInterfaceDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalInterfaceDeclarationAccess().getBodyDeclarationsAssignment_5()); }
(rule__NormalInterfaceDeclaration__BodyDeclarationsAssignment_5)*
{ after(grammarAccess.getNormalInterfaceDeclarationAccess().getBodyDeclarationsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalInterfaceDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalInterfaceDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalInterfaceDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalInterfaceDeclarationAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getNormalInterfaceDeclarationAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__NormalInterfaceDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalInterfaceDeclaration__Group_3__0__Impl
	rule__NormalInterfaceDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalInterfaceDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalInterfaceDeclarationAccess().getExtendsKeyword_3_0()); }

	'extends' 

{ after(grammarAccess.getNormalInterfaceDeclarationAccess().getExtendsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalInterfaceDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalInterfaceDeclaration__Group_3__1__Impl
	rule__NormalInterfaceDeclaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalInterfaceDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalInterfaceDeclarationAccess().getImplementedTypesAssignment_3_1()); }
(rule__NormalInterfaceDeclaration__ImplementedTypesAssignment_3_1)
{ after(grammarAccess.getNormalInterfaceDeclarationAccess().getImplementedTypesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalInterfaceDeclaration__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalInterfaceDeclaration__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalInterfaceDeclaration__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalInterfaceDeclarationAccess().getGroup_3_2()); }
(rule__NormalInterfaceDeclaration__Group_3_2__0)*
{ after(grammarAccess.getNormalInterfaceDeclarationAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NormalInterfaceDeclaration__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalInterfaceDeclaration__Group_3_2__0__Impl
	rule__NormalInterfaceDeclaration__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalInterfaceDeclaration__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalInterfaceDeclarationAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getNormalInterfaceDeclarationAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalInterfaceDeclaration__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalInterfaceDeclaration__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalInterfaceDeclaration__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalInterfaceDeclarationAccess().getImplementedTypesAssignment_3_2_1()); }
(rule__NormalInterfaceDeclaration__ImplementedTypesAssignment_3_2_1)
{ after(grammarAccess.getNormalInterfaceDeclarationAccess().getImplementedTypesAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassBodyDeclaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassBodyDeclaration__Group_0__0__Impl
	rule__ClassBodyDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBodyDeclaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassBodyDeclarationAccess().getClassBodyDeclarationAction_0_0()); }
(

)
{ after(grammarAccess.getClassBodyDeclarationAccess().getClassBodyDeclarationAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassBodyDeclaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassBodyDeclaration__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBodyDeclaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassBodyDeclarationAccess().getSemicolonKeyword_0_1()); }

	';' 

{ after(grammarAccess.getClassBodyDeclarationAccess().getSemicolonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StaticBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticBlock__Group__0__Impl
	rule__StaticBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticBlockAccess().getStaticAssignment_0()); }
(rule__StaticBlock__StaticAssignment_0)?
{ after(grammarAccess.getStaticBlockAccess().getStaticAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticBlockAccess().getBlockAssignment_1()); }
(rule__StaticBlock__BlockAssignment_1)
{ after(grammarAccess.getStaticBlockAccess().getBlockAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLMultilineSpec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLMultilineSpec__Group__0__Impl
	rule__JMLMultilineSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMultilineSpec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMultilineSpecAccess().getJMLMultilineSpecCommentStartParserRuleCall_0()); }
	ruleJMLMultilineSpecCommentStart
{ after(grammarAccess.getJMLMultilineSpecAccess().getJMLMultilineSpecCommentStartParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLMultilineSpec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLMultilineSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMultilineSpec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMultilineSpecAccess().getAlternatives_1()); }
(rule__JMLMultilineSpec__Alternatives_1)
{ after(grammarAccess.getJMLMultilineSpecAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLMultilineSpec__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLMultilineSpec__Group_1_0__0__Impl
	rule__JMLMultilineSpec__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMultilineSpec__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getJMLMultilineSpecAccess().getJmlTypeSpecificationsAssignment_1_0_0()); }
(rule__JMLMultilineSpec__JmlTypeSpecificationsAssignment_1_0_0)
{ after(grammarAccess.getJMLMultilineSpecAccess().getJmlTypeSpecificationsAssignment_1_0_0()); }
)
(
{ before(grammarAccess.getJMLMultilineSpecAccess().getJmlTypeSpecificationsAssignment_1_0_0()); }
(rule__JMLMultilineSpec__JmlTypeSpecificationsAssignment_1_0_0)*
{ after(grammarAccess.getJMLMultilineSpecAccess().getJmlTypeSpecificationsAssignment_1_0_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLMultilineSpec__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLMultilineSpec__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMultilineSpec__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMultilineSpecAccess().getJMLMultilineSpecCommentEndParserRuleCall_1_0_1()); }
	ruleJMLMultilineSpecCommentEnd
{ after(grammarAccess.getJMLMultilineSpecAccess().getJMLMultilineSpecCommentEndParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLMultilineSpec__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLMultilineSpec__Group_1_1__0__Impl
	rule__JMLMultilineSpec__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMultilineSpec__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMultilineSpecAccess().getJmlSpecificationsAssignment_1_1_0()); }
(rule__JMLMultilineSpec__JmlSpecificationsAssignment_1_1_0)*
{ after(grammarAccess.getJMLMultilineSpecAccess().getJmlSpecificationsAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLMultilineSpec__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLMultilineSpec__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMultilineSpec__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMultilineSpecAccess().getAlternatives_1_1_1()); }
(rule__JMLMultilineSpec__Alternatives_1_1_1)
{ after(grammarAccess.getJMLMultilineSpecAccess().getAlternatives_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLMultilineSpec__Group_1_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLMultilineSpec__Group_1_1_1_0__0__Impl
	rule__JMLMultilineSpec__Group_1_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMultilineSpec__Group_1_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMultilineSpecAccess().getModelElementAssignment_1_1_1_0_0()); }
(rule__JMLMultilineSpec__ModelElementAssignment_1_1_1_0_0)
{ after(grammarAccess.getJMLMultilineSpecAccess().getModelElementAssignment_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLMultilineSpec__Group_1_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLMultilineSpec__Group_1_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMultilineSpec__Group_1_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMultilineSpecAccess().getJMLMultilineSpecCommentEndParserRuleCall_1_1_1_0_1()); }
	ruleJMLMultilineSpecCommentEnd
{ after(grammarAccess.getJMLMultilineSpecAccess().getJMLMultilineSpecCommentEndParserRuleCall_1_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLMultilineSpec__Group_1_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLMultilineSpec__Group_1_1_1_1__0__Impl
	rule__JMLMultilineSpec__Group_1_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMultilineSpec__Group_1_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMultilineSpecAccess().getJMLMultilineSpecCommentEndParserRuleCall_1_1_1_1_0()); }
	ruleJMLMultilineSpecCommentEnd
{ after(grammarAccess.getJMLMultilineSpecAccess().getJMLMultilineSpecCommentEndParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLMultilineSpec__Group_1_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLMultilineSpec__Group_1_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMultilineSpec__Group_1_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMultilineSpecAccess().getElementAssignment_1_1_1_1_1()); }
(rule__JMLMultilineSpec__ElementAssignment_1_1_1_1_1)
{ after(grammarAccess.getJMLMultilineSpecAccess().getElementAssignment_1_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLSinglelineSpec__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLSinglelineSpec__Group_1__0__Impl
	rule__JMLSinglelineSpec__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSinglelineSpec__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSinglelineSpecAccess().getSolidusSolidusCommercialAtKeyword_1_0()); }

	'//@' 

{ after(grammarAccess.getJMLSinglelineSpecAccess().getSolidusSolidusCommercialAtKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLSinglelineSpec__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLSinglelineSpec__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSinglelineSpec__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSinglelineSpecAccess().getAlternatives_1_1()); }
(rule__JMLSinglelineSpec__Alternatives_1_1)
{ after(grammarAccess.getJMLSinglelineSpecAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLSinglelineSpec__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLSinglelineSpec__Group_1_1_1__0__Impl
	rule__JMLSinglelineSpec__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSinglelineSpec__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSinglelineSpecAccess().getJmlSpecificationsAssignment_1_1_1_0()); }
(rule__JMLSinglelineSpec__JmlSpecificationsAssignment_1_1_1_0)
{ after(grammarAccess.getJMLSinglelineSpecAccess().getJmlSpecificationsAssignment_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLSinglelineSpec__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLSinglelineSpec__Group_1_1_1__1__Impl
	rule__JMLSinglelineSpec__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSinglelineSpec__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSinglelineSpecAccess().getGroup_1_1_1_1()); }
(rule__JMLSinglelineSpec__Group_1_1_1_1__0)*
{ after(grammarAccess.getJMLSinglelineSpecAccess().getGroup_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLSinglelineSpec__Group_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLSinglelineSpec__Group_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSinglelineSpec__Group_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSinglelineSpecAccess().getElementAssignment_1_1_1_2()); }
(rule__JMLSinglelineSpec__ElementAssignment_1_1_1_2)
{ after(grammarAccess.getJMLSinglelineSpecAccess().getElementAssignment_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JMLSinglelineSpec__Group_1_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLSinglelineSpec__Group_1_1_1_1__0__Impl
	rule__JMLSinglelineSpec__Group_1_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSinglelineSpec__Group_1_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSinglelineSpecAccess().getSolidusSolidusCommercialAtKeyword_1_1_1_1_0()); }

	'//@' 

{ after(grammarAccess.getJMLSinglelineSpecAccess().getSolidusSolidusCommercialAtKeyword_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLSinglelineSpec__Group_1_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLSinglelineSpec__Group_1_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSinglelineSpec__Group_1_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSinglelineSpecAccess().getJmlSpecificationsAssignment_1_1_1_1_1()); }
(rule__JMLSinglelineSpec__JmlSpecificationsAssignment_1_1_1_1_1)
{ after(grammarAccess.getJMLSinglelineSpecAccess().getJmlSpecificationsAssignment_1_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLMethodSpecificationWithModifierRegular__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLMethodSpecificationWithModifierRegular__Group__0__Impl
	rule__JMLMethodSpecificationWithModifierRegular__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMethodSpecificationWithModifierRegular__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMethodSpecificationWithModifierRegularAccess().getModifierAssignment_0()); }
(rule__JMLMethodSpecificationWithModifierRegular__ModifierAssignment_0)*
{ after(grammarAccess.getJMLMethodSpecificationWithModifierRegularAccess().getModifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLMethodSpecificationWithModifierRegular__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLMethodSpecificationWithModifierRegular__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMethodSpecificationWithModifierRegular__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMethodSpecificationWithModifierRegularAccess().getSpecAssignment_1()); }
(rule__JMLMethodSpecificationWithModifierRegular__SpecAssignment_1)
{ after(grammarAccess.getJMLMethodSpecificationWithModifierRegularAccess().getSpecAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLMethodSpecificationWithModifierExtended__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLMethodSpecificationWithModifierExtended__Group__0__Impl
	rule__JMLMethodSpecificationWithModifierExtended__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMethodSpecificationWithModifierExtended__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMethodSpecificationWithModifierExtendedAccess().getAlsoKeyword_0()); }

	'also' 

{ after(grammarAccess.getJMLMethodSpecificationWithModifierExtendedAccess().getAlsoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLMethodSpecificationWithModifierExtended__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLMethodSpecificationWithModifierExtended__Group__1__Impl
	rule__JMLMethodSpecificationWithModifierExtended__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMethodSpecificationWithModifierExtended__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMethodSpecificationWithModifierExtendedAccess().getModifierAssignment_1()); }
(rule__JMLMethodSpecificationWithModifierExtended__ModifierAssignment_1)*
{ after(grammarAccess.getJMLMethodSpecificationWithModifierExtendedAccess().getModifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLMethodSpecificationWithModifierExtended__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLMethodSpecificationWithModifierExtended__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMethodSpecificationWithModifierExtended__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMethodSpecificationWithModifierExtendedAccess().getSpecAssignment_2()); }
(rule__JMLMethodSpecificationWithModifierExtended__SpecAssignment_2)
{ after(grammarAccess.getJMLMethodSpecificationWithModifierExtendedAccess().getSpecAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JMLExceptionalBehaviorBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLExceptionalBehaviorBlock__Group__0__Impl
	rule__JMLExceptionalBehaviorBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLExceptionalBehaviorBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLExceptionalBehaviorBlockAccess().getExceptional_behaviorKeyword_0()); }

	'exceptional_behavior' 

{ after(grammarAccess.getJMLExceptionalBehaviorBlockAccess().getExceptional_behaviorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLExceptionalBehaviorBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLExceptionalBehaviorBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLExceptionalBehaviorBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getJMLExceptionalBehaviorBlockAccess().getSpecificationsAssignment_1()); }
(rule__JMLExceptionalBehaviorBlock__SpecificationsAssignment_1)
{ after(grammarAccess.getJMLExceptionalBehaviorBlockAccess().getSpecificationsAssignment_1()); }
)
(
{ before(grammarAccess.getJMLExceptionalBehaviorBlockAccess().getSpecificationsAssignment_1()); }
(rule__JMLExceptionalBehaviorBlock__SpecificationsAssignment_1)*
{ after(grammarAccess.getJMLExceptionalBehaviorBlockAccess().getSpecificationsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLNormalBehaviorBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLNormalBehaviorBlock__Group__0__Impl
	rule__JMLNormalBehaviorBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLNormalBehaviorBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLNormalBehaviorBlockAccess().getNormal_behaviorKeyword_0()); }

	'normal_behavior' 

{ after(grammarAccess.getJMLNormalBehaviorBlockAccess().getNormal_behaviorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLNormalBehaviorBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLNormalBehaviorBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLNormalBehaviorBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getJMLNormalBehaviorBlockAccess().getSpecificationsAssignment_1()); }
(rule__JMLNormalBehaviorBlock__SpecificationsAssignment_1)
{ after(grammarAccess.getJMLNormalBehaviorBlockAccess().getSpecificationsAssignment_1()); }
)
(
{ before(grammarAccess.getJMLNormalBehaviorBlockAccess().getSpecificationsAssignment_1()); }
(rule__JMLNormalBehaviorBlock__SpecificationsAssignment_1)*
{ after(grammarAccess.getJMLNormalBehaviorBlockAccess().getSpecificationsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLBehaviorBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLBehaviorBlock__Group__0__Impl
	rule__JMLBehaviorBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLBehaviorBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLBehaviorBlockAccess().getBehaviorKeyword_0()); }

	'behavior' 

{ after(grammarAccess.getJMLBehaviorBlockAccess().getBehaviorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLBehaviorBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLBehaviorBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLBehaviorBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getJMLBehaviorBlockAccess().getSpecificationsAssignment_1()); }
(rule__JMLBehaviorBlock__SpecificationsAssignment_1)
{ after(grammarAccess.getJMLBehaviorBlockAccess().getSpecificationsAssignment_1()); }
)
(
{ before(grammarAccess.getJMLBehaviorBlockAccess().getSpecificationsAssignment_1()); }
(rule__JMLBehaviorBlock__SpecificationsAssignment_1)*
{ after(grammarAccess.getJMLBehaviorBlockAccess().getSpecificationsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLMethodExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLMethodExpression__Group__0__Impl
	rule__JMLMethodExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMethodExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMethodExpressionAccess().getAlternatives_0()); }
(rule__JMLMethodExpression__Alternatives_0)
{ after(grammarAccess.getJMLMethodExpressionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLMethodExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLMethodExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMethodExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMethodExpressionAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getJMLMethodExpressionAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLEnsuresExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLEnsuresExpression__Group__0__Impl
	rule__JMLEnsuresExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLEnsuresExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLEnsuresExpressionAccess().getEnsuresKeyword_0()); }

	'ensures' 

{ after(grammarAccess.getJMLEnsuresExpressionAccess().getEnsuresKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLEnsuresExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLEnsuresExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLEnsuresExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLEnsuresExpressionAccess().getExprAssignment_1()); }
(rule__JMLEnsuresExpression__ExprAssignment_1)
{ after(grammarAccess.getJMLEnsuresExpressionAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLRequiresExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLRequiresExpression__Group__0__Impl
	rule__JMLRequiresExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLRequiresExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLRequiresExpressionAccess().getRequiresKeyword_0()); }

	'requires' 

{ after(grammarAccess.getJMLRequiresExpressionAccess().getRequiresKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLRequiresExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLRequiresExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLRequiresExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLRequiresExpressionAccess().getExprAssignment_1()); }
(rule__JMLRequiresExpression__ExprAssignment_1)
{ after(grammarAccess.getJMLRequiresExpressionAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLSpecificationOnlyElementWithModifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLSpecificationOnlyElementWithModifier__Group__0__Impl
	rule__JMLSpecificationOnlyElementWithModifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSpecificationOnlyElementWithModifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSpecificationOnlyElementWithModifierAccess().getModifierAssignment_0()); }
(rule__JMLSpecificationOnlyElementWithModifier__ModifierAssignment_0)*
{ after(grammarAccess.getJMLSpecificationOnlyElementWithModifierAccess().getModifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLSpecificationOnlyElementWithModifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLSpecificationOnlyElementWithModifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSpecificationOnlyElementWithModifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSpecificationOnlyElementWithModifierAccess().getElementAssignment_1()); }
(rule__JMLSpecificationOnlyElementWithModifier__ElementAssignment_1)
{ after(grammarAccess.getJMLSpecificationOnlyElementWithModifierAccess().getElementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLModelElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLModelElement__Group__0__Impl
	rule__JMLModelElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLModelElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLModelElementAccess().getModelKeyword_0()); }

	'model' 

{ after(grammarAccess.getJMLModelElementAccess().getModelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLModelElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLModelElement__Group__1__Impl
	rule__JMLModelElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLModelElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLModelElementAccess().getInstanceAssignment_1()); }
(rule__JMLModelElement__InstanceAssignment_1)?
{ after(grammarAccess.getJMLModelElementAccess().getInstanceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLModelElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLModelElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLModelElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLModelElementAccess().getElementAssignment_2()); }
(rule__JMLModelElement__ElementAssignment_2)
{ after(grammarAccess.getJMLModelElementAccess().getElementAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JMLGhostElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLGhostElement__Group__0__Impl
	rule__JMLGhostElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLGhostElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLGhostElementAccess().getGhostKeyword_0()); }

	'ghost' 

{ after(grammarAccess.getJMLGhostElementAccess().getGhostKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLGhostElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLGhostElement__Group__1__Impl
	rule__JMLGhostElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLGhostElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLGhostElementAccess().getInstanceAssignment_1()); }
(rule__JMLGhostElement__InstanceAssignment_1)?
{ after(grammarAccess.getJMLGhostElementAccess().getInstanceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLGhostElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLGhostElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLGhostElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLGhostElementAccess().getElementAssignment_2()); }
(rule__JMLGhostElement__ElementAssignment_2)
{ after(grammarAccess.getJMLGhostElementAccess().getElementAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JMLTypeExpressionWithModifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLTypeExpressionWithModifier__Group__0__Impl
	rule__JMLTypeExpressionWithModifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLTypeExpressionWithModifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLTypeExpressionWithModifierAccess().getModifierAssignment_0()); }
(rule__JMLTypeExpressionWithModifier__ModifierAssignment_0)*
{ after(grammarAccess.getJMLTypeExpressionWithModifierAccess().getModifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLTypeExpressionWithModifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLTypeExpressionWithModifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLTypeExpressionWithModifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLTypeExpressionWithModifierAccess().getSpecAssignment_1()); }
(rule__JMLTypeExpressionWithModifier__SpecAssignment_1)
{ after(grammarAccess.getJMLTypeExpressionWithModifierAccess().getSpecAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLTypeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLTypeExpression__Group__0__Impl
	rule__JMLTypeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLTypeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLTypeExpressionAccess().getAlternatives_0()); }
(rule__JMLTypeExpression__Alternatives_0)
{ after(grammarAccess.getJMLTypeExpressionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLTypeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLTypeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLTypeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLTypeExpressionAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getJMLTypeExpressionAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLInvariantExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLInvariantExpression__Group__0__Impl
	rule__JMLInvariantExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLInvariantExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLInvariantExpressionAccess().getInvariantKeyword_0()); }

	'invariant' 

{ after(grammarAccess.getJMLInvariantExpressionAccess().getInvariantKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLInvariantExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLInvariantExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLInvariantExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLInvariantExpressionAccess().getExprAssignment_1()); }
(rule__JMLInvariantExpression__ExprAssignment_1)
{ after(grammarAccess.getJMLInvariantExpressionAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLConstraintExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLConstraintExpression__Group__0__Impl
	rule__JMLConstraintExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLConstraintExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLConstraintExpressionAccess().getConstraintKeyword_0()); }

	'constraint' 

{ after(grammarAccess.getJMLConstraintExpressionAccess().getConstraintKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLConstraintExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLConstraintExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLConstraintExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLConstraintExpressionAccess().getExprAssignment_1()); }
(rule__JMLConstraintExpression__ExprAssignment_1)
{ after(grammarAccess.getJMLConstraintExpressionAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLAxiomExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLAxiomExpression__Group__0__Impl
	rule__JMLAxiomExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLAxiomExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLAxiomExpressionAccess().getAxiomKeyword_0()); }

	'axiom' 

{ after(grammarAccess.getJMLAxiomExpressionAccess().getAxiomKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLAxiomExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLAxiomExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLAxiomExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLAxiomExpressionAccess().getExprAssignment_1()); }
(rule__JMLAxiomExpression__ExprAssignment_1)
{ after(grammarAccess.getJMLAxiomExpressionAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberDeclWithModifierRegular__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberDeclWithModifierRegular__Group__0__Impl
	rule__MemberDeclWithModifierRegular__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclWithModifierRegular__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclWithModifierRegularAccess().getModifiersAssignment_0()); }
(rule__MemberDeclWithModifierRegular__ModifiersAssignment_0)*
{ after(grammarAccess.getMemberDeclWithModifierRegularAccess().getModifiersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberDeclWithModifierRegular__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberDeclWithModifierRegular__Group__1__Impl
	rule__MemberDeclWithModifierRegular__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclWithModifierRegular__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclWithModifierRegularAccess().getGroup_1()); }
(rule__MemberDeclWithModifierRegular__Group_1__0)?
{ after(grammarAccess.getMemberDeclWithModifierRegularAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberDeclWithModifierRegular__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberDeclWithModifierRegular__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclWithModifierRegular__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclWithModifierRegularAccess().getMemberdeclAssignment_2()); }
(rule__MemberDeclWithModifierRegular__MemberdeclAssignment_2)
{ after(grammarAccess.getMemberDeclWithModifierRegularAccess().getMemberdeclAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MemberDeclWithModifierRegular__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberDeclWithModifierRegular__Group_1__0__Impl
	rule__MemberDeclWithModifierRegular__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclWithModifierRegular__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclWithModifierRegularAccess().getJMLMultilineSpecCommentStartParserRuleCall_1_0()); }
	ruleJMLMultilineSpecCommentStart
{ after(grammarAccess.getMemberDeclWithModifierRegularAccess().getJMLMultilineSpecCommentStartParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberDeclWithModifierRegular__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberDeclWithModifierRegular__Group_1__1__Impl
	rule__MemberDeclWithModifierRegular__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclWithModifierRegular__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMemberDeclWithModifierRegularAccess().getJmlModifiersAssignment_1_1()); }
(rule__MemberDeclWithModifierRegular__JmlModifiersAssignment_1_1)
{ after(grammarAccess.getMemberDeclWithModifierRegularAccess().getJmlModifiersAssignment_1_1()); }
)
(
{ before(grammarAccess.getMemberDeclWithModifierRegularAccess().getJmlModifiersAssignment_1_1()); }
(rule__MemberDeclWithModifierRegular__JmlModifiersAssignment_1_1)*
{ after(grammarAccess.getMemberDeclWithModifierRegularAccess().getJmlModifiersAssignment_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberDeclWithModifierRegular__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberDeclWithModifierRegular__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclWithModifierRegular__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclWithModifierRegularAccess().getJMLMultilineSpecCommentEndParserRuleCall_1_2()); }
	ruleJMLMultilineSpecCommentEnd
{ after(grammarAccess.getMemberDeclWithModifierRegularAccess().getJMLMultilineSpecCommentEndParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MemberDeclWithModifierSpec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberDeclWithModifierSpec__Group__0__Impl
	rule__MemberDeclWithModifierSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclWithModifierSpec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclWithModifierSpecAccess().getModifiersAssignment_0()); }
(rule__MemberDeclWithModifierSpec__ModifiersAssignment_0)*
{ after(grammarAccess.getMemberDeclWithModifierSpecAccess().getModifiersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberDeclWithModifierSpec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberDeclWithModifierSpec__Group__1__Impl
	rule__MemberDeclWithModifierSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclWithModifierSpec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclWithModifierSpecAccess().getJmlModifiersAssignment_1()); }
(rule__MemberDeclWithModifierSpec__JmlModifiersAssignment_1)*
{ after(grammarAccess.getMemberDeclWithModifierSpecAccess().getJmlModifiersAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberDeclWithModifierSpec__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberDeclWithModifierSpec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclWithModifierSpec__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclWithModifierSpecAccess().getMemberdeclAssignment_2()); }
(rule__MemberDeclWithModifierSpec__MemberdeclAssignment_2)
{ after(grammarAccess.getMemberDeclWithModifierSpecAccess().getMemberdeclAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Constructor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__0__Impl
	rule__Constructor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getIdentifierAssignment_0()); }
(rule__Constructor__IdentifierAssignment_0)
{ after(grammarAccess.getConstructorAccess().getIdentifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__1__Impl
	rule__Constructor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getConstructorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__2__Impl
	rule__Constructor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getGroup_2()); }
(rule__Constructor__Group_2__0)?
{ after(grammarAccess.getConstructorAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__3__Impl
	rule__Constructor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getConstructorAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__4__Impl
	rule__Constructor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getGroup_4()); }
(rule__Constructor__Group_4__0)?
{ after(grammarAccess.getConstructorAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getAlternatives_5()); }
(rule__Constructor__Alternatives_5)
{ after(grammarAccess.getConstructorAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Constructor__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group_2__0__Impl
	rule__Constructor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getParametersAssignment_2_0()); }
(rule__Constructor__ParametersAssignment_2_0)
{ after(grammarAccess.getConstructorAccess().getParametersAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getGroup_2_1()); }
(rule__Constructor__Group_2_1__0)*
{ after(grammarAccess.getConstructorAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constructor__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group_2_1__0__Impl
	rule__Constructor__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getConstructorAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getParametersAssignment_2_1_1()); }
(rule__Constructor__ParametersAssignment_2_1_1)
{ after(grammarAccess.getConstructorAccess().getParametersAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constructor__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group_4__0__Impl
	rule__Constructor__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getThrowsKeyword_4_0()); }

	'throws' 

{ after(grammarAccess.getConstructorAccess().getThrowsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group_4__1__Impl
	rule__Constructor__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getExceptionsAssignment_4_1()); }
(rule__Constructor__ExceptionsAssignment_4_1)
{ after(grammarAccess.getConstructorAccess().getExceptionsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getGroup_4_2()); }
(rule__Constructor__Group_4_2__0)*
{ after(grammarAccess.getConstructorAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Constructor__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group_4_2__0__Impl
	rule__Constructor__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getConstructorAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getExceptionsAssignment_4_2_1()); }
(rule__Constructor__ExceptionsAssignment_4_2_1)
{ after(grammarAccess.getConstructorAccess().getExceptionsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberDeclaration__Group__0__Impl
	rule__MemberDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclarationAccess().getAlternatives_0()); }
(rule__MemberDeclaration__Alternatives_0)
{ after(grammarAccess.getMemberDeclarationAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclarationAccess().getAlternatives_1()); }
(rule__MemberDeclaration__Alternatives_1)
{ after(grammarAccess.getMemberDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__GenericMethodOrConstructorDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericMethodOrConstructorDecl__Group__0__Impl
	rule__GenericMethodOrConstructorDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericMethodOrConstructorDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericMethodOrConstructorDeclAccess().getTypeParametersAssignment_0()); }
(rule__GenericMethodOrConstructorDecl__TypeParametersAssignment_0)
{ after(grammarAccess.getGenericMethodOrConstructorDeclAccess().getTypeParametersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GenericMethodOrConstructorDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericMethodOrConstructorDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericMethodOrConstructorDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericMethodOrConstructorDeclAccess().getAlternatives_1()); }
(rule__GenericMethodOrConstructorDecl__Alternatives_1)
{ after(grammarAccess.getGenericMethodOrConstructorDeclAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GenericMethodOrConstructorDecl__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericMethodOrConstructorDecl__Group_1_0_0__0__Impl
	rule__GenericMethodOrConstructorDecl__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericMethodOrConstructorDecl__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericMethodOrConstructorDeclAccess().getTypeAssignment_1_0_0_0()); }
(rule__GenericMethodOrConstructorDecl__TypeAssignment_1_0_0_0)
{ after(grammarAccess.getGenericMethodOrConstructorDeclAccess().getTypeAssignment_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GenericMethodOrConstructorDecl__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericMethodOrConstructorDecl__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericMethodOrConstructorDecl__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericMethodOrConstructorDeclAccess().getMethodAssignment_1_0_0_1()); }
(rule__GenericMethodOrConstructorDecl__MethodAssignment_1_0_0_1)
{ after(grammarAccess.getGenericMethodOrConstructorDeclAccess().getMethodAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GenericMethodOrConstructorDecl__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericMethodOrConstructorDecl__Group_1_0_1__0__Impl
	rule__GenericMethodOrConstructorDecl__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericMethodOrConstructorDecl__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericMethodOrConstructorDeclAccess().getVoidKeyword_1_0_1_0()); }

	'void' 

{ after(grammarAccess.getGenericMethodOrConstructorDeclAccess().getVoidKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GenericMethodOrConstructorDecl__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericMethodOrConstructorDecl__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericMethodOrConstructorDecl__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericMethodOrConstructorDeclAccess().getMethodAssignment_1_0_1_1()); }
(rule__GenericMethodOrConstructorDecl__MethodAssignment_1_0_1_1)
{ after(grammarAccess.getGenericMethodOrConstructorDeclAccess().getMethodAssignment_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group__0__Impl
	rule__MethodDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getIdentifierAssignment_0()); }
(rule__MethodDeclaration__IdentifierAssignment_0)
{ after(grammarAccess.getMethodDeclarationAccess().getIdentifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group__1__Impl
	rule__MethodDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getMethodDeclarationAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group__2__Impl
	rule__MethodDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getGroup_2()); }
(rule__MethodDeclaration__Group_2__0)?
{ after(grammarAccess.getMethodDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group__3__Impl
	rule__MethodDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getMethodDeclarationAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group__4__Impl
	rule__MethodDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getGroup_4()); }
(rule__MethodDeclaration__Group_4__0)?
{ after(grammarAccess.getMethodDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getAlternatives_5()); }
(rule__MethodDeclaration__Alternatives_5)
{ after(grammarAccess.getMethodDeclarationAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MethodDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group_2__0__Impl
	rule__MethodDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getParametersAssignment_2_0()); }
(rule__MethodDeclaration__ParametersAssignment_2_0)
{ after(grammarAccess.getMethodDeclarationAccess().getParametersAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getGroup_2_1()); }
(rule__MethodDeclaration__Group_2_1__0)*
{ after(grammarAccess.getMethodDeclarationAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodDeclaration__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group_2_1__0__Impl
	rule__MethodDeclaration__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getMethodDeclarationAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getParametersAssignment_2_1_1()); }
(rule__MethodDeclaration__ParametersAssignment_2_1_1)
{ after(grammarAccess.getMethodDeclarationAccess().getParametersAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group_4__0__Impl
	rule__MethodDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getThrowsKeyword_4_0()); }

	'throws' 

{ after(grammarAccess.getMethodDeclarationAccess().getThrowsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group_4__1__Impl
	rule__MethodDeclaration__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getExceptionsAssignment_4_1()); }
(rule__MethodDeclaration__ExceptionsAssignment_4_1)
{ after(grammarAccess.getMethodDeclarationAccess().getExceptionsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getGroup_4_2()); }
(rule__MethodDeclaration__Group_4_2__0)*
{ after(grammarAccess.getMethodDeclarationAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MethodDeclaration__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group_4_2__0__Impl
	rule__MethodDeclaration__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getMethodDeclarationAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodDeclaration__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getExceptionsAssignment_4_2_1()); }
(rule__MethodDeclaration__ExceptionsAssignment_4_2_1)
{ after(grammarAccess.getMethodDeclarationAccess().getExceptionsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FieldDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDeclaration__Group__0__Impl
	rule__FieldDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getVariabledeclaratorAssignment_0()); }
(rule__FieldDeclaration__VariabledeclaratorAssignment_0)
{ after(grammarAccess.getFieldDeclarationAccess().getVariabledeclaratorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDeclaration__Group__1__Impl
	rule__FieldDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getGroup_1()); }
(rule__FieldDeclaration__Group_1__0)*
{ after(grammarAccess.getFieldDeclarationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getFieldDeclarationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FieldDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDeclaration__Group_1__0__Impl
	rule__FieldDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getFieldDeclarationAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldDeclaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getVariabledeclaratorAssignment_1_1()); }
(rule__FieldDeclaration__VariabledeclaratorAssignment_1_1)
{ after(grammarAccess.getFieldDeclarationAccess().getVariabledeclaratorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group__0__Impl
	rule__VariableDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getVariableDeclaratorAction_0()); }
(

)
{ after(grammarAccess.getVariableDeclaratorAccess().getVariableDeclaratorAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group__1__Impl
	rule__VariableDeclarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getIdentifierAssignment_1()); }
(rule__VariableDeclarator__IdentifierAssignment_1)
{ after(grammarAccess.getVariableDeclaratorAccess().getIdentifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group__2__Impl
	rule__VariableDeclarator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getBracketsAssignment_2()); }
(rule__VariableDeclarator__BracketsAssignment_2)*
{ after(grammarAccess.getVariableDeclaratorAccess().getBracketsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getGroup_3()); }
(rule__VariableDeclarator__Group_3__0)?
{ after(grammarAccess.getVariableDeclaratorAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableDeclarator__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group_3__0__Impl
	rule__VariableDeclarator__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.getVariableDeclaratorAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarator__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getExpressionAssignment_3_1()); }
(rule__VariableDeclarator__ExpressionAssignment_3_1)
{ after(grammarAccess.getVariableDeclaratorAccess().getExpressionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassOrInterfaceTypeWithBrackets__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOrInterfaceTypeWithBrackets__Group__0__Impl
	rule__ClassOrInterfaceTypeWithBrackets__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceTypeWithBrackets__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getTypeAssignment_0()); }
(rule__ClassOrInterfaceTypeWithBrackets__TypeAssignment_0)
{ after(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassOrInterfaceTypeWithBrackets__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOrInterfaceTypeWithBrackets__Group__1__Impl
	rule__ClassOrInterfaceTypeWithBrackets__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceTypeWithBrackets__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getGroup_1()); }
(rule__ClassOrInterfaceTypeWithBrackets__Group_1__0)*
{ after(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassOrInterfaceTypeWithBrackets__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOrInterfaceTypeWithBrackets__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceTypeWithBrackets__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getBracketsAssignment_2()); }
(rule__ClassOrInterfaceTypeWithBrackets__BracketsAssignment_2)*
{ after(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getBracketsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassOrInterfaceTypeWithBrackets__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOrInterfaceTypeWithBrackets__Group_1__0__Impl
	rule__ClassOrInterfaceTypeWithBrackets__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceTypeWithBrackets__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassOrInterfaceTypeWithBrackets__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOrInterfaceTypeWithBrackets__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceTypeWithBrackets__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getTypeAssignment_1_1()); }
(rule__ClassOrInterfaceTypeWithBrackets__TypeAssignment_1_1)
{ after(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimitiveTypeWithBrackets__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveTypeWithBrackets__Group__0__Impl
	rule__PrimitiveTypeWithBrackets__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeWithBrackets__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeWithBracketsAccess().getPrimitivetypeAssignment_0()); }
(rule__PrimitiveTypeWithBrackets__PrimitivetypeAssignment_0)
{ after(grammarAccess.getPrimitiveTypeWithBracketsAccess().getPrimitivetypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveTypeWithBrackets__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveTypeWithBrackets__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeWithBrackets__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeWithBracketsAccess().getBracketsAssignment_1()); }
(rule__PrimitiveTypeWithBrackets__BracketsAssignment_1)*
{ after(grammarAccess.getPrimitiveTypeWithBracketsAccess().getBracketsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Brackets__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Brackets__Group__0__Impl
	rule__Brackets__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Brackets__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketsAccess().getBracketsAction_0()); }
(

)
{ after(grammarAccess.getBracketsAccess().getBracketsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Brackets__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Brackets__Group__1__Impl
	rule__Brackets__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Brackets__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketsAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getBracketsAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Brackets__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Brackets__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Brackets__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketsAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getBracketsAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClassifierType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierType__Group__0__Impl
	rule__ClassifierType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTypeAccess().getIdentifierAssignment_0()); }
(rule__ClassifierType__IdentifierAssignment_0)
{ after(grammarAccess.getClassifierTypeAccess().getIdentifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTypeAccess().getTypeargumentsAssignment_1()); }
(rule__ClassifierType__TypeargumentsAssignment_1)?
{ after(grammarAccess.getClassifierTypeAccess().getTypeargumentsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeArguments__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group__0__Impl
	rule__TypeArguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getTypeArgumentsAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group__1__Impl
	rule__TypeArguments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getTypeargumentAssignment_1()); }
(rule__TypeArguments__TypeargumentAssignment_1)
{ after(grammarAccess.getTypeArgumentsAccess().getTypeargumentAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group__2__Impl
	rule__TypeArguments__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getGroup_2()); }
(rule__TypeArguments__Group_2__0)*
{ after(grammarAccess.getTypeArgumentsAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getTypeArgumentsAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeArguments__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_2__0__Impl
	rule__TypeArguments__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getTypeArgumentsAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArguments__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArguments__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getTypeargumentAssignment_2_1()); }
(rule__TypeArguments__TypeargumentAssignment_2_1)
{ after(grammarAccess.getTypeArgumentsAccess().getTypeargumentAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeArgument__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArgument__Group__0__Impl
	rule__TypeArgument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArgument__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentAccess().getTypeArgumentAction_0()); }
(

)
{ after(grammarAccess.getTypeArgumentAccess().getTypeArgumentAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArgument__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArgument__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArgument__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentAccess().getAlternatives_1()); }
(rule__TypeArgument__Alternatives_1)
{ after(grammarAccess.getTypeArgumentAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeArgument__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArgument__Group_1_1__0__Impl
	rule__TypeArgument__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArgument__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentAccess().getWildcardAssignment_1_1_0()); }
(rule__TypeArgument__WildcardAssignment_1_1_0)
{ after(grammarAccess.getTypeArgumentAccess().getWildcardAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArgument__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArgument__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArgument__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentAccess().getGroup_1_1_1()); }
(rule__TypeArgument__Group_1_1_1__0)?
{ after(grammarAccess.getTypeArgumentAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeArgument__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArgument__Group_1_1_1__0__Impl
	rule__TypeArgument__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArgument__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentAccess().getAlternatives_1_1_1_0()); }
(rule__TypeArgument__Alternatives_1_1_1_0)
{ after(grammarAccess.getTypeArgumentAccess().getAlternatives_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeArgument__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeArgument__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArgument__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentAccess().getTypeAssignment_1_1_1_1()); }
(rule__TypeArgument__TypeAssignment_1_1_1_1)
{ after(grammarAccess.getTypeArgumentAccess().getTypeAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FormalParameterDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameterDecl__Group__0__Impl
	rule__FormalParameterDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterDeclAccess().getModifiersAssignment_0()); }
(rule__FormalParameterDecl__ModifiersAssignment_0)*
{ after(grammarAccess.getFormalParameterDeclAccess().getModifiersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameterDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameterDecl__Group__1__Impl
	rule__FormalParameterDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterDeclAccess().getTypeAssignment_1()); }
(rule__FormalParameterDecl__TypeAssignment_1)
{ after(grammarAccess.getFormalParameterDeclAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameterDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameterDecl__Group__2__Impl
	rule__FormalParameterDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterDeclAccess().getVarargsAssignment_2()); }
(rule__FormalParameterDecl__VarargsAssignment_2)?
{ after(grammarAccess.getFormalParameterDeclAccess().getVarargsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameterDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameterDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterDeclAccess().getIdentifierAssignment_3()); }
(rule__FormalParameterDecl__IdentifierAssignment_3)
{ after(grammarAccess.getFormalParameterDeclAccess().getIdentifierAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConstructorBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorBody__Group__0__Impl
	rule__ConstructorBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorBodyAccess().getConstructorBodyAction_0()); }
(

)
{ after(grammarAccess.getConstructorBodyAccess().getConstructorBodyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorBody__Group__1__Impl
	rule__ConstructorBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorBodyAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getConstructorBodyAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorBody__Group__2__Impl
	rule__ConstructorBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorBodyAccess().getBlockstatementAssignment_2()); }
(rule__ConstructorBody__BlockstatementAssignment_2)*
{ after(grammarAccess.getConstructorBodyAccess().getBlockstatementAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorBody__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorBodyAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getConstructorBodyAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Annotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getAnnotationAction_0()); }
(

)
{ after(grammarAccess.getAnnotationAccess().getAnnotationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__1__Impl
	rule__Annotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getCommercialAtKeyword_1()); }

	'@' 

{ after(grammarAccess.getAnnotationAccess().getCommercialAtKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__2__Impl
	rule__Annotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getAnnotationnameAssignment_2()); }
(rule__Annotation__AnnotationnameAssignment_2)
{ after(grammarAccess.getAnnotationAccess().getAnnotationnameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getGroup_3()); }
(rule__Annotation__Group_3__0)?
{ after(grammarAccess.getAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Annotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_3__0__Impl
	rule__Annotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_3_0()); }
(
	'(' 
)
{ after(grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_3__1__Impl
	rule__Annotation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getAlternatives_3_1()); }
(rule__Annotation__Alternatives_3_1)?
{ after(grammarAccess.getAnnotationAccess().getAlternatives_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AnnotationName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationName__Group__0__Impl
	rule__AnnotationName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getAnnotationNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationNameAccess().getGroup_1()); }
(rule__AnnotationName__Group_1__0)*
{ after(grammarAccess.getAnnotationNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationName__Group_1__0__Impl
	rule__AnnotationName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationNameAccess().getFullStopKeyword_1_0()); }
(
	'.' 
)
{ after(grammarAccess.getAnnotationNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getAnnotationNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElementValuePairs__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementValuePairs__Group__0__Impl
	rule__ElementValuePairs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValuePairs__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValuePairsAccess().getElementvaluepairAssignment_0()); }
(rule__ElementValuePairs__ElementvaluepairAssignment_0)
{ after(grammarAccess.getElementValuePairsAccess().getElementvaluepairAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementValuePairs__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementValuePairs__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValuePairs__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValuePairsAccess().getGroup_1()); }
(rule__ElementValuePairs__Group_1__0)*
{ after(grammarAccess.getElementValuePairsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElementValuePairs__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementValuePairs__Group_1__0__Impl
	rule__ElementValuePairs__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValuePairs__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValuePairsAccess().getCommaKeyword_1_0()); }
(
	',' 
)
{ after(grammarAccess.getElementValuePairsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementValuePairs__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementValuePairs__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValuePairs__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValuePairsAccess().getElementvaluepairAssignment_1_1()); }
(rule__ElementValuePairs__ElementvaluepairAssignment_1_1)
{ after(grammarAccess.getElementValuePairsAccess().getElementvaluepairAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElementValuePair__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementValuePair__Group__0__Impl
	rule__ElementValuePair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValuePair__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValuePairAccess().getIdentifierAssignment_0()); }
(rule__ElementValuePair__IdentifierAssignment_0)
{ after(grammarAccess.getElementValuePairAccess().getIdentifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementValuePair__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementValuePair__Group__1__Impl
	rule__ElementValuePair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValuePair__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValuePairAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getElementValuePairAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementValuePair__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementValuePair__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValuePair__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValuePairAccess().getElementvalueAssignment_2()); }
(rule__ElementValuePair__ElementvalueAssignment_2)
{ after(grammarAccess.getElementValuePairAccess().getElementvalueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ElementValueArrayInitializer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementValueArrayInitializer__Group__0__Impl
	rule__ElementValueArrayInitializer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValueArrayInitializer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValueArrayInitializerAccess().getElementValueArrayInitializerAction_0()); }
(

)
{ after(grammarAccess.getElementValueArrayInitializerAccess().getElementValueArrayInitializerAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementValueArrayInitializer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementValueArrayInitializer__Group__1__Impl
	rule__ElementValueArrayInitializer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValueArrayInitializer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValueArrayInitializerAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getElementValueArrayInitializerAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementValueArrayInitializer__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementValueArrayInitializer__Group__2__Impl
	rule__ElementValueArrayInitializer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValueArrayInitializer__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValueArrayInitializerAccess().getGroup_2()); }
(rule__ElementValueArrayInitializer__Group_2__0)?
{ after(grammarAccess.getElementValueArrayInitializerAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementValueArrayInitializer__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementValueArrayInitializer__Group__3__Impl
	rule__ElementValueArrayInitializer__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValueArrayInitializer__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValueArrayInitializerAccess().getCommaKeyword_3()); }
(
	',' 
)?
{ after(grammarAccess.getElementValueArrayInitializerAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementValueArrayInitializer__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementValueArrayInitializer__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValueArrayInitializer__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValueArrayInitializerAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getElementValueArrayInitializerAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ElementValueArrayInitializer__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementValueArrayInitializer__Group_2__0__Impl
	rule__ElementValueArrayInitializer__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValueArrayInitializer__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValueArrayInitializerAccess().getElementvalueAssignment_2_0()); }
(rule__ElementValueArrayInitializer__ElementvalueAssignment_2_0)
{ after(grammarAccess.getElementValueArrayInitializerAccess().getElementvalueAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementValueArrayInitializer__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementValueArrayInitializer__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValueArrayInitializer__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValueArrayInitializerAccess().getGroup_2_1()); }
(rule__ElementValueArrayInitializer__Group_2_1__0)*
{ after(grammarAccess.getElementValueArrayInitializerAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElementValueArrayInitializer__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementValueArrayInitializer__Group_2_1__0__Impl
	rule__ElementValueArrayInitializer__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValueArrayInitializer__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValueArrayInitializerAccess().getCommaKeyword_2_1_0()); }
(
	',' 
)
{ after(grammarAccess.getElementValueArrayInitializerAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementValueArrayInitializer__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementValueArrayInitializer__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValueArrayInitializer__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValueArrayInitializerAccess().getElementvalueAssignment_2_1_1()); }
(rule__ElementValueArrayInitializer__ElementvalueAssignment_2_1_1)
{ after(grammarAccess.getElementValueArrayInitializerAccess().getElementvalueAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationTypeDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeDeclaration__Group__0__Impl
	rule__AnnotationTypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeDeclarationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getAnnotationTypeDeclarationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationTypeDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeDeclaration__Group__1__Impl
	rule__AnnotationTypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeDeclarationAccess().getInterfaceKeyword_1()); }

	'interface' 

{ after(grammarAccess.getAnnotationTypeDeclarationAccess().getInterfaceKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationTypeDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeDeclaration__Group__2__Impl
	rule__AnnotationTypeDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeDeclarationAccess().getIdentifierAssignment_2()); }
(rule__AnnotationTypeDeclaration__IdentifierAssignment_2)
{ after(grammarAccess.getAnnotationTypeDeclarationAccess().getIdentifierAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationTypeDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeDeclaration__Group__3__Impl
	rule__AnnotationTypeDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeDeclarationAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getAnnotationTypeDeclarationAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationTypeDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeDeclaration__Group__4__Impl
	rule__AnnotationTypeDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeDeclarationAccess().getAnnotationtypeelementdeclarationAssignment_4()); }
(rule__AnnotationTypeDeclaration__AnnotationtypeelementdeclarationAssignment_4)*
{ after(grammarAccess.getAnnotationTypeDeclarationAccess().getAnnotationtypeelementdeclarationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationTypeDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeDeclarationAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getAnnotationTypeDeclarationAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AnnotationTypeElementDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeElementDeclaration__Group__0__Impl
	rule__AnnotationTypeElementDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeElementDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeElementDeclarationAccess().getModifiersAssignment_0()); }
(rule__AnnotationTypeElementDeclaration__ModifiersAssignment_0)*
{ after(grammarAccess.getAnnotationTypeElementDeclarationAccess().getModifiersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationTypeElementDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeElementDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeElementDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeElementDeclarationAccess().getAnnotationtypeelementrestAssignment_1()); }
(rule__AnnotationTypeElementDeclaration__AnnotationtypeelementrestAssignment_1)
{ after(grammarAccess.getAnnotationTypeElementDeclarationAccess().getAnnotationtypeelementrestAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationTypeElementRest__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeElementRest__Group_0__0__Impl
	rule__AnnotationTypeElementRest__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeElementRest__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeElementRestAccess().getAnnotationMethodOrConstantRestParserRuleCall_0_0()); }
	ruleAnnotationMethodOrConstantRest
{ after(grammarAccess.getAnnotationTypeElementRestAccess().getAnnotationMethodOrConstantRestParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationTypeElementRest__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeElementRest__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeElementRest__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeElementRestAccess().getSemicolonKeyword_0_1()); }

	';' 

{ after(grammarAccess.getAnnotationTypeElementRestAccess().getSemicolonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationTypeElementRest__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeElementRest__Group_1__0__Impl
	rule__AnnotationTypeElementRest__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeElementRest__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeElementRestAccess().getNormalClassDeclarationParserRuleCall_1_0()); }
	ruleNormalClassDeclaration
{ after(grammarAccess.getAnnotationTypeElementRestAccess().getNormalClassDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationTypeElementRest__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeElementRest__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeElementRest__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeElementRestAccess().getSemicolonKeyword_1_1()); }
(
	';' 
)?
{ after(grammarAccess.getAnnotationTypeElementRestAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationTypeElementRest__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeElementRest__Group_2__0__Impl
	rule__AnnotationTypeElementRest__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeElementRest__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeElementRestAccess().getNormalInterfaceDeclarationParserRuleCall_2_0()); }
	ruleNormalInterfaceDeclaration
{ after(grammarAccess.getAnnotationTypeElementRestAccess().getNormalInterfaceDeclarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationTypeElementRest__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeElementRest__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeElementRest__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeElementRestAccess().getSemicolonKeyword_2_1()); }
(
	';' 
)?
{ after(grammarAccess.getAnnotationTypeElementRestAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationTypeElementRest__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeElementRest__Group_3__0__Impl
	rule__AnnotationTypeElementRest__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeElementRest__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeElementRestAccess().getEnumDeclarationParserRuleCall_3_0()); }
	ruleEnumDeclaration
{ after(grammarAccess.getAnnotationTypeElementRestAccess().getEnumDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationTypeElementRest__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeElementRest__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeElementRest__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeElementRestAccess().getSemicolonKeyword_3_1()); }
(
	';' 
)?
{ after(grammarAccess.getAnnotationTypeElementRestAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationTypeElementRest__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeElementRest__Group_4__0__Impl
	rule__AnnotationTypeElementRest__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeElementRest__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeElementRestAccess().getAnnotationTypeDeclarationParserRuleCall_4_0()); }
	ruleAnnotationTypeDeclaration
{ after(grammarAccess.getAnnotationTypeElementRestAccess().getAnnotationTypeDeclarationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationTypeElementRest__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeElementRest__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeElementRest__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeElementRestAccess().getSemicolonKeyword_4_1()); }
(
	';' 
)?
{ after(grammarAccess.getAnnotationTypeElementRestAccess().getSemicolonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationMethodOrConstantRest__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationMethodOrConstantRest__Group__0__Impl
	rule__AnnotationMethodOrConstantRest__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMethodOrConstantRest__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMethodOrConstantRestAccess().getTypeAssignment_0()); }
(rule__AnnotationMethodOrConstantRest__TypeAssignment_0)
{ after(grammarAccess.getAnnotationMethodOrConstantRestAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationMethodOrConstantRest__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationMethodOrConstantRest__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMethodOrConstantRest__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMethodOrConstantRestAccess().getAlternatives_1()); }
(rule__AnnotationMethodOrConstantRest__Alternatives_1)
{ after(grammarAccess.getAnnotationMethodOrConstantRestAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationMethodRest__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationMethodRest__Group__0__Impl
	rule__AnnotationMethodRest__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMethodRest__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMethodRestAccess().getAnnotationMethodRestAction_0()); }
(

)
{ after(grammarAccess.getAnnotationMethodRestAccess().getAnnotationMethodRestAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationMethodRest__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationMethodRest__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMethodRest__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMethodRestAccess().getGroup_1()); }
(rule__AnnotationMethodRest__Group_1__0)
{ after(grammarAccess.getAnnotationMethodRestAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationMethodRest__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationMethodRest__Group_1__0__Impl
	rule__AnnotationMethodRest__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMethodRest__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMethodRestAccess().getIdentifierAssignment_1_0()); }
(rule__AnnotationMethodRest__IdentifierAssignment_1_0)
{ after(grammarAccess.getAnnotationMethodRestAccess().getIdentifierAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationMethodRest__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationMethodRest__Group_1__1__Impl
	rule__AnnotationMethodRest__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMethodRest__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMethodRestAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getAnnotationMethodRestAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationMethodRest__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationMethodRest__Group_1__2__Impl
	rule__AnnotationMethodRest__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMethodRest__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMethodRestAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getAnnotationMethodRestAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationMethodRest__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationMethodRest__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMethodRest__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMethodRestAccess().getDefaultvalueAssignment_1_3()); }
(rule__AnnotationMethodRest__DefaultvalueAssignment_1_3)?
{ after(grammarAccess.getAnnotationMethodRestAccess().getDefaultvalueAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AnnotationConstantRest__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationConstantRest__Group__0__Impl
	rule__AnnotationConstantRest__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationConstantRest__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationConstantRestAccess().getVariabledeclaratorAssignment_0()); }
(rule__AnnotationConstantRest__VariabledeclaratorAssignment_0)
{ after(grammarAccess.getAnnotationConstantRestAccess().getVariabledeclaratorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationConstantRest__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationConstantRest__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationConstantRest__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationConstantRestAccess().getGroup_1()); }
(rule__AnnotationConstantRest__Group_1__0)*
{ after(grammarAccess.getAnnotationConstantRestAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationConstantRest__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationConstantRest__Group_1__0__Impl
	rule__AnnotationConstantRest__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationConstantRest__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationConstantRestAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getAnnotationConstantRestAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationConstantRest__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationConstantRest__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationConstantRest__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationConstantRestAccess().getVariabledeclaratorAssignment_1_1()); }
(rule__AnnotationConstantRest__VariabledeclaratorAssignment_1_1)
{ after(grammarAccess.getAnnotationConstantRestAccess().getVariabledeclaratorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefaultValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group__0__Impl
	rule__DefaultValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getDefaultKeyword_0()); }

	'default' 

{ after(grammarAccess.getDefaultValueAccess().getDefaultKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getElementvalueAssignment_1()); }
(rule__DefaultValue__ElementvalueAssignment_1)
{ after(grammarAccess.getDefaultValueAccess().getElementvalueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
(

)
{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
	rule__Block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlockstatementAssignment_2()); }
(rule__Block__BlockstatementAssignment_2)*
{ after(grammarAccess.getBlockAccess().getBlockstatementAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BlockStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockStatement__Group_1__0__Impl
	rule__BlockStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockStatementAccess().getExpressionParserRuleCall_1_0()); }
	ruleExpression
{ after(grammarAccess.getBlockStatementAccess().getExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockStatementAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getBlockStatementAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0__0__Impl
	rule__Assignment__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getAssignmentAction_0_0()); }
(

)
{ after(grammarAccess.getAssignmentAccess().getAssignmentAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0__1__Impl
	rule__Assignment__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_0_1()); }
(rule__Assignment__Group_0_1__0)?
{ after(grammarAccess.getAssignmentAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0__2__Impl
	rule__Assignment__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getFeatureAssignment_0_2()); }
(rule__Assignment__FeatureAssignment_0_2)
{ after(grammarAccess.getAssignmentAccess().getFeatureAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0__3__Impl
	rule__Assignment__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getOpSingleAssignParserRuleCall_0_3()); }
	ruleOpSingleAssign
{ after(grammarAccess.getAssignmentAccess().getOpSingleAssignParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getValueAssignment_0_4()); }
(rule__Assignment__ValueAssignment_0_4)
{ after(grammarAccess.getAssignmentAccess().getValueAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Assignment__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0_1__0__Impl
	rule__Assignment__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getTypeForVariableDeclarationAssignment_0_1_0()); }
(rule__Assignment__TypeForVariableDeclarationAssignment_0_1_0)
{ after(grammarAccess.getAssignmentAccess().getTypeForVariableDeclarationAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_0_1_1()); }
(rule__Assignment__Group_0_1_1__0)*
{ after(grammarAccess.getAssignmentAccess().getGroup_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0_1_1__0__Impl
	rule__Assignment__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLeftSquareBracketKeyword_0_1_1_0()); }

	'[' 

{ after(grammarAccess.getAssignmentAccess().getLeftSquareBracketKeyword_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightSquareBracketKeyword_0_1_1_1()); }

	']' 

{ after(grammarAccess.getAssignmentAccess().getRightSquareBracketKeyword_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1__0__Impl
	rule__Assignment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getOrExpressionParserRuleCall_1_0()); }
	ruleOrExpression
{ after(grammarAccess.getAssignmentAccess().getOrExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_1_1()); }
(rule__Assignment__Group_1_1__0)?
{ after(grammarAccess.getAssignmentAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1_1__0__Impl
	rule__Assignment__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_1_1_0()); }
(rule__Assignment__Group_1_1_0__0)
{ after(grammarAccess.getAssignmentAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightOperandAssignment_1_1_1()); }
(rule__Assignment__RightOperandAssignment_1_1_1)
{ after(grammarAccess.getAssignmentAccess().getRightOperandAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_1_1_0_0()); }
(rule__Assignment__Group_1_1_0_0__0)
{ after(grammarAccess.getAssignmentAccess().getGroup_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Assignment__Group_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1_1_0_0__0__Impl
	rule__Assignment__Group_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getBinaryOperationLeftOperandAction_1_1_0_0_0()); }
(

)
{ after(grammarAccess.getAssignmentAccess().getBinaryOperationLeftOperandAction_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getFeatureAssignment_1_1_0_0_1()); }
(rule__Assignment__FeatureAssignment_1_1_0_0_1)
{ after(grammarAccess.getAssignmentAccess().getFeatureAssignment_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpMultiAssign__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiAssign__Group_5__0__Impl
	rule__OpMultiAssign__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiAssign__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0()); }

	'<' 

{ after(grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpMultiAssign__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiAssign__Group_5__1__Impl
	rule__OpMultiAssign__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiAssign__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1()); }

	'<' 

{ after(grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpMultiAssign__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiAssign__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiAssign__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2()); }

	'=' 

{ after(grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OpMultiAssign__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiAssign__Group_6__0__Impl
	rule__OpMultiAssign__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiAssign__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0()); }

	'>' 

{ after(grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpMultiAssign__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiAssign__Group_6__1__Impl
	rule__OpMultiAssign__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiAssign__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1()); }
(
	'>' 
)?
{ after(grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpMultiAssign__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiAssign__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiAssign__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2()); }

	'>=' 

{ after(grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
(rule__OrExpression__Group_1__0)*
{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1_0()); }
(rule__OrExpression__Group_1_0__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__OrExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getOrExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1_0_0()); }
(rule__OrExpression__Group_1_0_0__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OrExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1_0_0__0__Impl
	rule__OrExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getOrExpressionAccess().getBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__OrExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getOrExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
	ruleEqualityExpression
{ after(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
(rule__AndExpression__Group_1__0)*
{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1_0()); }
(rule__AndExpression__Group_1_0__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__AndExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getAndExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1_0_0()); }
(rule__AndExpression__Group_1_0_0__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AndExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1_0_0__0__Impl
	rule__AndExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAndExpressionAccess().getBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__AndExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getAndExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
	ruleRelationalExpression
{ after(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
(rule__EqualityExpression__Group_1__0)*
{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1_0()); }
(rule__EqualityExpression__Group_1_0__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__EqualityExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getEqualityExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1_0_0()); }
(rule__EqualityExpression__Group_1_0_0__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__EqualityExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1_0_0__0__Impl
	rule__EqualityExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__EqualityExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getEqualityExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOtherOperatorExpressionParserRuleCall_0()); }
	ruleOtherOperatorExpression
{ after(grammarAccess.getRelationalExpressionAccess().getOtherOperatorExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getAlternatives_1()); }
(rule__RelationalExpression__Alternatives_1)*
{ after(grammarAccess.getRelationalExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1_0__0__Impl
	rule__RelationalExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0()); }
(rule__RelationalExpression__Group_1_0_0__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getTypeAssignment_1_0_1()); }
(rule__RelationalExpression__TypeAssignment_1_0_1)
{ after(grammarAccess.getRelationalExpressionAccess().getTypeAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0_0()); }
(rule__RelationalExpression__Group_1_0_0_0__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__RelationalExpression__Group_1_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1_0_0_0__0__Impl
	rule__RelationalExpression__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getInstanceOfExpressionExpressionAction_1_0_0_0_0()); }
(

)
{ after(grammarAccess.getRelationalExpressionAccess().getInstanceOfExpressionExpressionAction_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1()); }

	'instanceof' 

{ after(grammarAccess.getRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1_1__0__Impl
	rule__RelationalExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_1_0()); }
(rule__RelationalExpression__Group_1_1_0__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightOperandAssignment_1_1_1()); }
(rule__RelationalExpression__RightOperandAssignment_1_1_1)
{ after(grammarAccess.getRelationalExpressionAccess().getRightOperandAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_1_0_0()); }
(rule__RelationalExpression__Group_1_1_0_0__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__RelationalExpression__Group_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1_1_0_0__0__Impl
	rule__RelationalExpression__Group_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftOperandAction_1_1_0_0_0()); }
(

)
{ after(grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftOperandAction_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getFeatureAssignment_1_1_0_0_1()); }
(rule__RelationalExpression__FeatureAssignment_1_1_0_0_1)
{ after(grammarAccess.getRelationalExpressionAccess().getFeatureAssignment_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpCompare__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpCompare__Group_1__0__Impl
	rule__OpCompare__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpCompare__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0()); }

	'<' 

{ after(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpCompare__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpCompare__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpCompare__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1()); }

	'=' 

{ after(grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OtherOperatorExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group__0__Impl
	rule__OtherOperatorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
{ after(grammarAccess.getOtherOperatorExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OtherOperatorExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1()); }
(rule__OtherOperatorExpression__Group_1__0)*
{ after(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OtherOperatorExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group_1__0__Impl
	rule__OtherOperatorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1_0()); }
(rule__OtherOperatorExpression__Group_1_0__0)
{ after(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OtherOperatorExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__OtherOperatorExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getOtherOperatorExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OtherOperatorExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1_0_0()); }
(rule__OtherOperatorExpression__Group_1_0_0__0)
{ after(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OtherOperatorExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group_1_0_0__0__Impl
	rule__OtherOperatorExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getOtherOperatorExpressionAccess().getBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OtherOperatorExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__OtherOperatorExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getOtherOperatorExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_2__0__Impl
	rule__OpOther__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0()); }

	'>' 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1()); }

	'..' 

{ after(grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5__0__Impl
	rule__OpOther__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0()); }

	'>' 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getAlternatives_5_1()); }
(rule__OpOther__Alternatives_5_1)
{ after(grammarAccess.getOpOtherAccess().getAlternatives_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_5_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGroup_5_1_0_0()); }
(rule__OpOther__Group_5_1_0_0__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_5_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OpOther__Group_5_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5_1_0_0__0__Impl
	rule__OpOther__Group_5_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0()); }

	'>' 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_5_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1()); }

	'>' 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6__0__Impl
	rule__OpOther__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0()); }

	'<' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getAlternatives_6_1()); }
(rule__OpOther__Alternatives_6_1)
{ after(grammarAccess.getOpOtherAccess().getAlternatives_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_6_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGroup_6_1_0_0()); }
(rule__OpOther__Group_6_1_0_0__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_6_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OpOther__Group_6_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6_1_0_0__0__Impl
	rule__OpOther__Group_6_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0()); }

	'<' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_6_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1()); }

	'<' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
(rule__AdditiveExpression__Group_1__0)*
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0()); }
(rule__AdditiveExpression__Group_1_0__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__AdditiveExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0_0()); }
(rule__AdditiveExpression__Group_1_0_0__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AdditiveExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1_0_0__0__Impl
	rule__AdditiveExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAdditiveExpressionAccess().getBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__AdditiveExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getUnaryOperationParserRuleCall_0()); }
	ruleUnaryOperation
{ after(grammarAccess.getMultiplicativeExpressionAccess().getUnaryOperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
(rule__MultiplicativeExpression__Group_1__0)*
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0()); }
(rule__MultiplicativeExpression__Group_1_0__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__MultiplicativeExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0_0()); }
(rule__MultiplicativeExpression__Group_1_0_0__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MultiplicativeExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1_0_0__0__Impl
	rule__MultiplicativeExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__MultiplicativeExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryOperation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperation__Group_0__0__Impl
	rule__UnaryOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getUnaryOperationAction_0_0()); }
(

)
{ after(grammarAccess.getUnaryOperationAccess().getUnaryOperationAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOperation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperation__Group_0__1__Impl
	rule__UnaryOperation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getFeatureAssignment_0_1()); }
(rule__UnaryOperation__FeatureAssignment_0_1)
{ after(grammarAccess.getUnaryOperationAccess().getFeatureAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOperation__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getOperandAssignment_0_2()); }
(rule__UnaryOperation__OperandAssignment_0_2)
{ after(grammarAccess.getUnaryOperationAccess().getOperandAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PostfixOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixOperation__Group__0__Impl
	rule__PostfixOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOperationAccess().getMemberFeatureCallParserRuleCall_0()); }
	ruleMemberFeatureCall
{ after(grammarAccess.getPostfixOperationAccess().getMemberFeatureCallParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOperationAccess().getGroup_1()); }
(rule__PostfixOperation__Group_1__0)?
{ after(grammarAccess.getPostfixOperationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostfixOperation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixOperation__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOperation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOperationAccess().getGroup_1_0()); }
(rule__PostfixOperation__Group_1_0__0)
{ after(grammarAccess.getPostfixOperationAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__PostfixOperation__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixOperation__Group_1_0__0__Impl
	rule__PostfixOperation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOperation__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOperationAccess().getPostfixOperationOperandAction_1_0_0()); }
(

)
{ after(grammarAccess.getPostfixOperationAccess().getPostfixOperationOperandAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixOperation__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixOperation__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOperation__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOperationAccess().getFeatureAssignment_1_0_1()); }
(rule__PostfixOperation__FeatureAssignment_1_0_1)
{ after(grammarAccess.getPostfixOperationAccess().getFeatureAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberFeatureCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group__0__Impl
	rule__MemberFeatureCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getMemberFeatureCallAccess().getPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getAlternatives_1()); }
(rule__MemberFeatureCall__Alternatives_1)*
{ after(grammarAccess.getMemberFeatureCallAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberFeatureCall__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_0__0__Impl
	rule__MemberFeatureCall__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_0_0()); }
(rule__MemberFeatureCall__Group_1_0_0__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getValueAssignment_1_0_1()); }
(rule__MemberFeatureCall__ValueAssignment_1_0_1)
{ after(grammarAccess.getMemberFeatureCallAccess().getValueAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberFeatureCall__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_0_0_0()); }
(rule__MemberFeatureCall__Group_1_0_0_0__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MemberFeatureCall__Group_1_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_0_0_0__0__Impl
	rule__MemberFeatureCall__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getAssignmentAssignableAction_1_0_0_0_0()); }
(

)
{ after(grammarAccess.getMemberFeatureCallAccess().getAssignmentAssignableAction_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_0_0_0__1__Impl
	rule__MemberFeatureCall__Group_1_0_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1()); }

	'.' 

{ after(grammarAccess.getMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_0_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_0_0_0__2__Impl
	rule__MemberFeatureCall__Group_1_0_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_0_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getFeatureAssignment_1_0_0_0_2()); }
(rule__MemberFeatureCall__FeatureAssignment_1_0_0_0_2)
{ after(grammarAccess.getMemberFeatureCallAccess().getFeatureAssignment_1_0_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_0_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_0_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_0_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); }
	ruleOpSingleAssign
{ after(grammarAccess.getMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MemberFeatureCall__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1__0__Impl
	rule__MemberFeatureCall__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_0()); }
(rule__MemberFeatureCall__Group_1_1_0__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1__1__Impl
	rule__MemberFeatureCall__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_1()); }
(rule__MemberFeatureCall__Group_1_1_1__0)?
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1__2__Impl
	rule__MemberFeatureCall__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getFeatureAssignment_1_1_2()); }
(rule__MemberFeatureCall__FeatureAssignment_1_1_2)
{ after(grammarAccess.getMemberFeatureCallAccess().getFeatureAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1__3__Impl
	rule__MemberFeatureCall__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_3()); }
(rule__MemberFeatureCall__Group_1_1_3__0)?
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_4()); }
(rule__MemberFeatureCall__MemberCallArgumentsAssignment_1_1_4)?
{ after(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MemberFeatureCall__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_0_0()); }
(rule__MemberFeatureCall__Group_1_1_0_0__0)
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MemberFeatureCall__Group_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_0_0__0__Impl
	rule__MemberFeatureCall__Group_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getMemberFeatureCallMemberCallTargetAction_1_1_0_0_0()); }
(

)
{ after(grammarAccess.getMemberFeatureCallAccess().getMemberFeatureCallMemberCallTargetAction_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getAlternatives_1_1_0_0_1()); }
(rule__MemberFeatureCall__Alternatives_1_1_0_0_1)
{ after(grammarAccess.getMemberFeatureCallAccess().getAlternatives_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberFeatureCall__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_1__0__Impl
	rule__MemberFeatureCall__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0()); }

	'<' 

{ after(grammarAccess.getMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_1__1__Impl
	rule__MemberFeatureCall__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_1()); }
(rule__MemberFeatureCall__TypeArgumentsAssignment_1_1_1_1)
{ after(grammarAccess.getMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_1__2__Impl
	rule__MemberFeatureCall__Group_1_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_1_2()); }
(rule__MemberFeatureCall__Group_1_1_1_2__0)*
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3()); }

	'>' 

{ after(grammarAccess.getMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MemberFeatureCall__Group_1_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_1_2__0__Impl
	rule__MemberFeatureCall__Group_1_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0()); }

	',' 

{ after(grammarAccess.getMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_2_1()); }
(rule__MemberFeatureCall__TypeArgumentsAssignment_1_1_1_2_1)
{ after(grammarAccess.getMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberFeatureCall__Group_1_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_3__0__Impl
	rule__MemberFeatureCall__Group_1_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallAssignment_1_1_3_0()); }
(rule__MemberFeatureCall__ExplicitOperationCallAssignment_1_1_3_0)
{ after(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallAssignment_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_3__1__Impl
	rule__MemberFeatureCall__Group_1_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getAlternatives_1_1_3_1()); }
(rule__MemberFeatureCall__Alternatives_1_1_3_1)?
{ after(grammarAccess.getMemberFeatureCallAccess().getAlternatives_1_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2()); }

	')' 

{ after(grammarAccess.getMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MemberFeatureCall__Group_1_1_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_3_1_1__0__Impl
	rule__MemberFeatureCall__Group_1_1_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_0()); }
(rule__MemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_0)
{ after(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_1_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_3_1_1_1()); }
(rule__MemberFeatureCall__Group_1_1_3_1_1_1__0)*
{ after(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberFeatureCall__Group_1_1_3_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_3_1_1_1__0__Impl
	rule__MemberFeatureCall__Group_1_1_3_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_3_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0()); }

	',' 

{ after(grammarAccess.getMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberFeatureCall__Group_1_1_3_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberFeatureCall__Group_1_1_3_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__Group_1_1_3_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_1_1()); }
(rule__MemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_1_1)
{ after(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParenthesisExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesisExpression__Group__0__Impl
	rule__ParenthesisExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParenthesisExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesisExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesisExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisExpressionAccess().getAlternatives_1()); }
(rule__ParenthesisExpression__Alternatives_1)
{ after(grammarAccess.getParenthesisExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLOldExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLOldExpression__Group__0__Impl
	rule__JMLOldExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLOldExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLOldExpressionAccess().getJMLOldExpressionAction_0()); }
(

)
{ after(grammarAccess.getJMLOldExpressionAccess().getJMLOldExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLOldExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLOldExpression__Group__1__Impl
	rule__JMLOldExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLOldExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLOldExpressionAccess().getOldKeyword_1()); }

	'\\old' 

{ after(grammarAccess.getJMLOldExpressionAccess().getOldKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLOldExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLOldExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLOldExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLOldExpressionAccess().getExprAssignment_2()); }
(rule__JMLOldExpression__ExprAssignment_2)
{ after(grammarAccess.getJMLOldExpressionAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JMLFreshExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLFreshExpression__Group__0__Impl
	rule__JMLFreshExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLFreshExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLFreshExpressionAccess().getJMLFreshExpressionAction_0()); }
(

)
{ after(grammarAccess.getJMLFreshExpressionAccess().getJMLFreshExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLFreshExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLFreshExpression__Group__1__Impl
	rule__JMLFreshExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLFreshExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLFreshExpressionAccess().getFreshKeyword_1()); }

	'\\fresh' 

{ after(grammarAccess.getJMLFreshExpressionAccess().getFreshKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLFreshExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLFreshExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLFreshExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLFreshExpressionAccess().getExprAssignment_2()); }
(rule__JMLFreshExpression__ExprAssignment_2)
{ after(grammarAccess.getJMLFreshExpressionAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JMLResultExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLResultExpression__Group__0__Impl
	rule__JMLResultExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLResultExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLResultExpressionAccess().getJMLResultExpressionAction_0()); }
(

)
{ after(grammarAccess.getJMLResultExpressionAccess().getJMLResultExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLResultExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLResultExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLResultExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLResultExpressionAccess().getResultKeyword_1()); }

	'\\result' 

{ after(grammarAccess.getJMLResultExpressionAccess().getResultKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLForAllExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLForAllExpression__Group__0__Impl
	rule__JMLForAllExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getJMLForAllExpressionAction_0()); }
(

)
{ after(grammarAccess.getJMLForAllExpressionAccess().getJMLForAllExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLForAllExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLForAllExpression__Group__1__Impl
	rule__JMLForAllExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getForallKeyword_1()); }

	'\\forall' 

{ after(grammarAccess.getJMLForAllExpressionAccess().getForallKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLForAllExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLForAllExpression__Group__2__Impl
	rule__JMLForAllExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getGroup_2()); }
(rule__JMLForAllExpression__Group_2__0)?
{ after(grammarAccess.getJMLForAllExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLForAllExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLForAllExpression__Group__3__Impl
	rule__JMLForAllExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getJMLForAllExpressionAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLForAllExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLForAllExpression__Group__4__Impl
	rule__JMLForAllExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getExpressionAssignment_4()); }
(rule__JMLForAllExpression__ExpressionAssignment_4)?
{ after(grammarAccess.getJMLForAllExpressionAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLForAllExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLForAllExpression__Group__5__Impl
	rule__JMLForAllExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getJMLForAllExpressionAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLForAllExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLForAllExpression__Group__6__Impl
	rule__JMLForAllExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getGroup_6()); }
(rule__JMLForAllExpression__Group_6__0)?
{ after(grammarAccess.getJMLForAllExpressionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLForAllExpression__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLForAllExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getJMLForAllExpressionAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__JMLForAllExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLForAllExpression__Group_2__0__Impl
	rule__JMLForAllExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getInitExpressionsAssignment_2_0()); }
(rule__JMLForAllExpression__InitExpressionsAssignment_2_0)
{ after(grammarAccess.getJMLForAllExpressionAccess().getInitExpressionsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLForAllExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLForAllExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getGroup_2_1()); }
(rule__JMLForAllExpression__Group_2_1__0)*
{ after(grammarAccess.getJMLForAllExpressionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLForAllExpression__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLForAllExpression__Group_2_1__0__Impl
	rule__JMLForAllExpression__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getJMLForAllExpressionAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLForAllExpression__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLForAllExpression__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getInitExpressionsAssignment_2_1_1()); }
(rule__JMLForAllExpression__InitExpressionsAssignment_2_1_1)
{ after(grammarAccess.getJMLForAllExpressionAccess().getInitExpressionsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLForAllExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLForAllExpression__Group_6__0__Impl
	rule__JMLForAllExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getUpdateExpressionsAssignment_6_0()); }
(rule__JMLForAllExpression__UpdateExpressionsAssignment_6_0)
{ after(grammarAccess.getJMLForAllExpressionAccess().getUpdateExpressionsAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLForAllExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLForAllExpression__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getGroup_6_1()); }
(rule__JMLForAllExpression__Group_6_1__0)*
{ after(grammarAccess.getJMLForAllExpressionAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JMLForAllExpression__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLForAllExpression__Group_6_1__0__Impl
	rule__JMLForAllExpression__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getCommaKeyword_6_1_0()); }

	',' 

{ after(grammarAccess.getJMLForAllExpressionAccess().getCommaKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JMLForAllExpression__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JMLForAllExpression__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getUpdateExpressionsAssignment_6_1_1()); }
(rule__JMLForAllExpression__UpdateExpressionsAssignment_6_1_1)
{ after(grammarAccess.getJMLForAllExpressionAccess().getUpdateExpressionsAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group__0__Impl
	rule__VarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getAlternatives_0()); }
(rule__VarDecl__Alternatives_0)
{ after(grammarAccess.getVarDeclAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getGroup_1()); }
(rule__VarDecl__Group_1__0)?
{ after(grammarAccess.getVarDeclAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarDecl__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getGroup_0_0_0()); }
(rule__VarDecl__Group_0_0_0__0)
{ after(grammarAccess.getVarDeclAccess().getGroup_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__VarDecl__Group_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group_0_0_0__0__Impl
	rule__VarDecl__Group_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getTypeAssignment_0_0_0_0()); }
(rule__VarDecl__TypeAssignment_0_0_0_0)
{ after(grammarAccess.getVarDeclAccess().getTypeAssignment_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getNameAssignment_0_0_0_1()); }
(rule__VarDecl__NameAssignment_0_0_0_1)
{ after(grammarAccess.getVarDeclAccess().getNameAssignment_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarDecl__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group_1__0__Impl
	rule__VarDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getVarDeclAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getRightAssignment_1_1()); }
(rule__VarDecl__RightAssignment_1_1)
{ after(grammarAccess.getVarDeclAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SetLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group__0__Impl
	rule__SetLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getSetLiteralAction_0()); }
(

)
{ after(grammarAccess.getSetLiteralAccess().getSetLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group__1__Impl
	rule__SetLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getSetLiteralAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group__2__Impl
	rule__SetLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getSetLiteralAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group__3__Impl
	rule__SetLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getGroup_3()); }
(rule__SetLiteral__Group_3__0)?
{ after(grammarAccess.getSetLiteralAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getSetLiteralAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SetLiteral__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group_3__0__Impl
	rule__SetLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getElementsAssignment_3_0()); }
(rule__SetLiteral__ElementsAssignment_3_0)
{ after(grammarAccess.getSetLiteralAccess().getElementsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getGroup_3_1()); }
(rule__SetLiteral__Group_3_1__0)*
{ after(grammarAccess.getSetLiteralAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SetLiteral__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group_3_1__0__Impl
	rule__SetLiteral__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getSetLiteralAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getElementsAssignment_3_1_1()); }
(rule__SetLiteral__ElementsAssignment_3_1_1)
{ after(grammarAccess.getSetLiteralAccess().getElementsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ListLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group__0__Impl
	rule__ListLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getListLiteralAction_0()); }
(

)
{ after(grammarAccess.getListLiteralAccess().getListLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group__1__Impl
	rule__ListLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getListLiteralAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group__2__Impl
	rule__ListLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getListLiteralAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group__3__Impl
	rule__ListLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getGroup_3()); }
(rule__ListLiteral__Group_3__0)?
{ after(grammarAccess.getListLiteralAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getListLiteralAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ListLiteral__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group_3__0__Impl
	rule__ListLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getElementsAssignment_3_0()); }
(rule__ListLiteral__ElementsAssignment_3_0)
{ after(grammarAccess.getListLiteralAccess().getElementsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getGroup_3_1()); }
(rule__ListLiteral__Group_3_1__0)*
{ after(grammarAccess.getListLiteralAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ListLiteral__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group_3_1__0__Impl
	rule__ListLiteral__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getListLiteralAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getElementsAssignment_3_1_1()); }
(rule__ListLiteral__ElementsAssignment_3_1_1)
{ after(grammarAccess.getListLiteralAccess().getElementsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Closure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Closure__Group__0__Impl
	rule__Closure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getGroup_0()); }
(rule__Closure__Group_0__0)
{ after(grammarAccess.getClosureAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Closure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Closure__Group__1__Impl
	rule__Closure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getGroup_1()); }
(rule__Closure__Group_1__0)?
{ after(grammarAccess.getClosureAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Closure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Closure__Group__2__Impl
	rule__Closure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getExpressionAssignment_2()); }
(rule__Closure__ExpressionAssignment_2)
{ after(grammarAccess.getClosureAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Closure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Closure__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getClosureAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Closure__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Closure__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getGroup_0_0()); }
(rule__Closure__Group_0_0__0)
{ after(grammarAccess.getClosureAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Closure__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Closure__Group_0_0__0__Impl
	rule__Closure__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getClosureAction_0_0_0()); }
(

)
{ after(grammarAccess.getClosureAccess().getClosureAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Closure__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Closure__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getLeftSquareBracketKeyword_0_0_1()); }

	'[' 

{ after(grammarAccess.getClosureAccess().getLeftSquareBracketKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Closure__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Closure__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getGroup_1_0()); }
(rule__Closure__Group_1_0__0)
{ after(grammarAccess.getClosureAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Closure__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Closure__Group_1_0__0__Impl
	rule__Closure__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getGroup_1_0_0()); }
(rule__Closure__Group_1_0_0__0)?
{ after(grammarAccess.getClosureAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Closure__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Closure__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getExplicitSyntaxAssignment_1_0_1()); }
(rule__Closure__ExplicitSyntaxAssignment_1_0_1)
{ after(grammarAccess.getClosureAccess().getExplicitSyntaxAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Closure__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Closure__Group_1_0_0__0__Impl
	rule__Closure__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_0()); }
(rule__Closure__DeclaredFormalParametersAssignment_1_0_0_0)
{ after(grammarAccess.getClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Closure__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Closure__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getGroup_1_0_0_1()); }
(rule__Closure__Group_1_0_0_1__0)*
{ after(grammarAccess.getClosureAccess().getGroup_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Closure__Group_1_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Closure__Group_1_0_0_1__0__Impl
	rule__Closure__Group_1_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__Group_1_0_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getCommaKeyword_1_0_0_1_0()); }

	',' 

{ after(grammarAccess.getClosureAccess().getCommaKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Closure__Group_1_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Closure__Group_1_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__Group_1_0_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_1_1()); }
(rule__Closure__DeclaredFormalParametersAssignment_1_0_0_1_1)
{ after(grammarAccess.getClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionInClosure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionInClosure__Group__0__Impl
	rule__ExpressionInClosure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionInClosure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionInClosureAccess().getBlockExpressionAction_0()); }
(

)
{ after(grammarAccess.getExpressionInClosureAccess().getBlockExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionInClosure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionInClosure__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionInClosure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionInClosureAccess().getGroup_1()); }
(rule__ExpressionInClosure__Group_1__0)*
{ after(grammarAccess.getExpressionInClosureAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionInClosure__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionInClosure__Group_1__0__Impl
	rule__ExpressionInClosure__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionInClosure__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionInClosureAccess().getExpressionsAssignment_1_0()); }
(rule__ExpressionInClosure__ExpressionsAssignment_1_0)
{ after(grammarAccess.getExpressionInClosureAccess().getExpressionsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionInClosure__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionInClosure__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionInClosure__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionInClosureAccess().getSemicolonKeyword_1_1()); }
(
	';' 
)?
{ after(grammarAccess.getExpressionInClosureAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ShortClosure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShortClosure__Group__0__Impl
	rule__ShortClosure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClosure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShortClosureAccess().getGroup_0()); }
(rule__ShortClosure__Group_0__0)
{ after(grammarAccess.getShortClosureAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShortClosure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShortClosure__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClosure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShortClosureAccess().getExpressionAssignment_1()); }
(rule__ShortClosure__ExpressionAssignment_1)
{ after(grammarAccess.getShortClosureAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ShortClosure__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShortClosure__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClosure__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShortClosureAccess().getGroup_0_0()); }
(rule__ShortClosure__Group_0_0__0)
{ after(grammarAccess.getShortClosureAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ShortClosure__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShortClosure__Group_0_0__0__Impl
	rule__ShortClosure__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClosure__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShortClosureAccess().getClosureAction_0_0_0()); }
(

)
{ after(grammarAccess.getShortClosureAccess().getClosureAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShortClosure__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShortClosure__Group_0_0__1__Impl
	rule__ShortClosure__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClosure__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShortClosureAccess().getGroup_0_0_1()); }
(rule__ShortClosure__Group_0_0_1__0)?
{ after(grammarAccess.getShortClosureAccess().getGroup_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShortClosure__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShortClosure__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClosure__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShortClosureAccess().getExplicitSyntaxAssignment_0_0_2()); }
(rule__ShortClosure__ExplicitSyntaxAssignment_0_0_2)
{ after(grammarAccess.getShortClosureAccess().getExplicitSyntaxAssignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ShortClosure__Group_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShortClosure__Group_0_0_1__0__Impl
	rule__ShortClosure__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClosure__Group_0_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_0()); }
(rule__ShortClosure__DeclaredFormalParametersAssignment_0_0_1_0)
{ after(grammarAccess.getShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShortClosure__Group_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShortClosure__Group_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClosure__Group_0_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShortClosureAccess().getGroup_0_0_1_1()); }
(rule__ShortClosure__Group_0_0_1_1__0)*
{ after(grammarAccess.getShortClosureAccess().getGroup_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ShortClosure__Group_0_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShortClosure__Group_0_0_1_1__0__Impl
	rule__ShortClosure__Group_0_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClosure__Group_0_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShortClosureAccess().getCommaKeyword_0_0_1_1_0()); }

	',' 

{ after(grammarAccess.getShortClosureAccess().getCommaKeyword_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShortClosure__Group_0_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShortClosure__Group_0_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClosure__Group_0_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_1_1()); }
(rule__ShortClosure__DeclaredFormalParametersAssignment_0_0_1_1_1)
{ after(grammarAccess.getShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParenthesizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__0__Impl
	rule__ParenthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_0()); }
	ruleExpression
{ after(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_1()); }

	')' 

{ after(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__0__Impl
	rule__IfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getIfExpressionAction_0()); }
(

)
{ after(grammarAccess.getIfExpressionAccess().getIfExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__1__Impl
	rule__IfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getIfKeyword_1()); }

	'if' 

{ after(grammarAccess.getIfExpressionAccess().getIfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__2__Impl
	rule__IfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__3__Impl
	rule__IfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getIfAssignment_3()); }
(rule__IfExpression__IfAssignment_3)
{ after(grammarAccess.getIfExpressionAccess().getIfAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__4__Impl
	rule__IfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__5__Impl
	rule__IfExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getThenAssignment_5()); }
(rule__IfExpression__ThenAssignment_5)
{ after(grammarAccess.getIfExpressionAccess().getThenAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getGroup_6()); }
(rule__IfExpression__Group_6__0)?
{ after(grammarAccess.getIfExpressionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__IfExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group_6__0__Impl
	rule__IfExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElseKeyword_6_0()); }
(
	'else' 
)
{ after(grammarAccess.getIfExpressionAccess().getElseKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElseAssignment_6_1()); }
(rule__IfExpression__ElseAssignment_6_1)
{ after(grammarAccess.getIfExpressionAccess().getElseAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SwitchExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__0__Impl
	rule__SwitchExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionAction_0()); }
(

)
{ after(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__1__Impl
	rule__SwitchExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getSwitchKeyword_1()); }

	'switch' 

{ after(grammarAccess.getSwitchExpressionAccess().getSwitchKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__2__Impl
	rule__SwitchExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getAlternatives_2()); }
(rule__SwitchExpression__Alternatives_2)
{ after(grammarAccess.getSwitchExpressionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__3__Impl
	rule__SwitchExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getSwitchExpressionAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__4__Impl
	rule__SwitchExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getCasesAssignment_4()); }
(rule__SwitchExpression__CasesAssignment_4)*
{ after(grammarAccess.getSwitchExpressionAccess().getCasesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__5__Impl
	rule__SwitchExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getGroup_5()); }
(rule__SwitchExpression__Group_5__0)?
{ after(grammarAccess.getSwitchExpressionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getSwitchExpressionAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SwitchExpression__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_2_0__0__Impl
	rule__SwitchExpression__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getGroup_2_0_0()); }
(rule__SwitchExpression__Group_2_0_0__0)
{ after(grammarAccess.getSwitchExpressionAccess().getGroup_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_2_0__1__Impl
	rule__SwitchExpression__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getSwitchAssignment_2_0_1()); }
(rule__SwitchExpression__SwitchAssignment_2_0_1)
{ after(grammarAccess.getSwitchExpressionAccess().getSwitchAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2()); }

	')' 

{ after(grammarAccess.getSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SwitchExpression__Group_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_2_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getGroup_2_0_0_0()); }
(rule__SwitchExpression__Group_2_0_0_0__0)
{ after(grammarAccess.getSwitchExpressionAccess().getGroup_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__SwitchExpression__Group_2_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_2_0_0_0__0__Impl
	rule__SwitchExpression__Group_2_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_2_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0()); }

	'(' 

{ after(grammarAccess.getSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group_2_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_2_0_0_0__1__Impl
	rule__SwitchExpression__Group_2_0_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_2_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getDeclaredParamAssignment_2_0_0_0_1()); }
(rule__SwitchExpression__DeclaredParamAssignment_2_0_0_0_1)
{ after(grammarAccess.getSwitchExpressionAccess().getDeclaredParamAssignment_2_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group_2_0_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_2_0_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_2_0_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getColonKeyword_2_0_0_0_2()); }

	':' 

{ after(grammarAccess.getSwitchExpressionAccess().getColonKeyword_2_0_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SwitchExpression__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_2_1__0__Impl
	rule__SwitchExpression__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getGroup_2_1_0()); }
(rule__SwitchExpression__Group_2_1_0__0)?
{ after(grammarAccess.getSwitchExpressionAccess().getGroup_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getSwitchAssignment_2_1_1()); }
(rule__SwitchExpression__SwitchAssignment_2_1_1)
{ after(grammarAccess.getSwitchExpressionAccess().getSwitchAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SwitchExpression__Group_2_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_2_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_2_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getGroup_2_1_0_0()); }
(rule__SwitchExpression__Group_2_1_0_0__0)
{ after(grammarAccess.getSwitchExpressionAccess().getGroup_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__SwitchExpression__Group_2_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_2_1_0_0__0__Impl
	rule__SwitchExpression__Group_2_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_2_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getDeclaredParamAssignment_2_1_0_0_0()); }
(rule__SwitchExpression__DeclaredParamAssignment_2_1_0_0_0)
{ after(grammarAccess.getSwitchExpressionAccess().getDeclaredParamAssignment_2_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group_2_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_2_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_2_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getColonKeyword_2_1_0_0_1()); }

	':' 

{ after(grammarAccess.getSwitchExpressionAccess().getColonKeyword_2_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SwitchExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_5__0__Impl
	rule__SwitchExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getDefaultKeyword_5_0()); }

	'default' 

{ after(grammarAccess.getSwitchExpressionAccess().getDefaultKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_5__1__Impl
	rule__SwitchExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getColonKeyword_5_1()); }

	':' 

{ after(grammarAccess.getSwitchExpressionAccess().getColonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getDefaultAssignment_5_2()); }
(rule__SwitchExpression__DefaultAssignment_5_2)
{ after(grammarAccess.getSwitchExpressionAccess().getDefaultAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CasePart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group__0__Impl
	rule__CasePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getCasePartAction_0()); }
(

)
{ after(grammarAccess.getCasePartAccess().getCasePartAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CasePart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group__1__Impl
	rule__CasePart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getTypeGuardAssignment_1()); }
(rule__CasePart__TypeGuardAssignment_1)?
{ after(grammarAccess.getCasePartAccess().getTypeGuardAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CasePart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group__2__Impl
	rule__CasePart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getGroup_2()); }
(rule__CasePart__Group_2__0)?
{ after(grammarAccess.getCasePartAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CasePart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getAlternatives_3()); }
(rule__CasePart__Alternatives_3)
{ after(grammarAccess.getCasePartAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CasePart__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group_2__0__Impl
	rule__CasePart__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getCaseKeyword_2_0()); }

	'case' 

{ after(grammarAccess.getCasePartAccess().getCaseKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CasePart__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getCaseAssignment_2_1()); }
(rule__CasePart__CaseAssignment_2_1)
{ after(grammarAccess.getCasePartAccess().getCaseAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CasePart__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group_3_0__0__Impl
	rule__CasePart__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getColonKeyword_3_0_0()); }

	':' 

{ after(grammarAccess.getCasePartAccess().getColonKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CasePart__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getThenAssignment_3_0_1()); }
(rule__CasePart__ThenAssignment_3_0_1)
{ after(grammarAccess.getCasePartAccess().getThenAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForLoopExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group__0__Impl
	rule__ForLoopExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getGroup_0()); }
(rule__ForLoopExpression__Group_0__0)
{ after(grammarAccess.getForLoopExpressionAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoopExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group__1__Impl
	rule__ForLoopExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getForExpressionAssignment_1()); }
(rule__ForLoopExpression__ForExpressionAssignment_1)
{ after(grammarAccess.getForLoopExpressionAccess().getForExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoopExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group__2__Impl
	rule__ForLoopExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getForLoopExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoopExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getEachExpressionAssignment_3()); }
(rule__ForLoopExpression__EachExpressionAssignment_3)
{ after(grammarAccess.getForLoopExpressionAccess().getEachExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ForLoopExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getGroup_0_0()); }
(rule__ForLoopExpression__Group_0_0__0)
{ after(grammarAccess.getForLoopExpressionAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ForLoopExpression__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group_0_0__0__Impl
	rule__ForLoopExpression__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getForLoopExpressionAction_0_0_0()); }
(

)
{ after(grammarAccess.getForLoopExpressionAccess().getForLoopExpressionAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoopExpression__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group_0_0__1__Impl
	rule__ForLoopExpression__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getForKeyword_0_0_1()); }

	'for' 

{ after(grammarAccess.getForLoopExpressionAccess().getForKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoopExpression__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group_0_0__2__Impl
	rule__ForLoopExpression__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2()); }

	'(' 

{ after(grammarAccess.getForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoopExpression__Group_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group_0_0__3__Impl
	rule__ForLoopExpression__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getDeclaredParamAssignment_0_0_3()); }
(rule__ForLoopExpression__DeclaredParamAssignment_0_0_3)
{ after(grammarAccess.getForLoopExpressionAccess().getDeclaredParamAssignment_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoopExpression__Group_0_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoopExpression__Group_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__Group_0_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getColonKeyword_0_0_4()); }

	':' 

{ after(grammarAccess.getForLoopExpressionAccess().getColonKeyword_0_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__BasicForLoopExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicForLoopExpression__Group__0__Impl
	rule__BasicForLoopExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getBasicForLoopExpressionAction_0()); }
(

)
{ after(grammarAccess.getBasicForLoopExpressionAccess().getBasicForLoopExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicForLoopExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicForLoopExpression__Group__1__Impl
	rule__BasicForLoopExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getForKeyword_1()); }

	'for' 

{ after(grammarAccess.getBasicForLoopExpressionAccess().getForKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicForLoopExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicForLoopExpression__Group__2__Impl
	rule__BasicForLoopExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicForLoopExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicForLoopExpression__Group__3__Impl
	rule__BasicForLoopExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getGroup_3()); }
(rule__BasicForLoopExpression__Group_3__0)?
{ after(grammarAccess.getBasicForLoopExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicForLoopExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicForLoopExpression__Group__4__Impl
	rule__BasicForLoopExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getBasicForLoopExpressionAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicForLoopExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicForLoopExpression__Group__5__Impl
	rule__BasicForLoopExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getExpressionAssignment_5()); }
(rule__BasicForLoopExpression__ExpressionAssignment_5)?
{ after(grammarAccess.getBasicForLoopExpressionAccess().getExpressionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicForLoopExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicForLoopExpression__Group__6__Impl
	rule__BasicForLoopExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getBasicForLoopExpressionAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicForLoopExpression__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicForLoopExpression__Group__7__Impl
	rule__BasicForLoopExpression__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getGroup_7()); }
(rule__BasicForLoopExpression__Group_7__0)?
{ after(grammarAccess.getBasicForLoopExpressionAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicForLoopExpression__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicForLoopExpression__Group__8__Impl
	rule__BasicForLoopExpression__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getRightParenthesisKeyword_8()); }

	')' 

{ after(grammarAccess.getBasicForLoopExpressionAccess().getRightParenthesisKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicForLoopExpression__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicForLoopExpression__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getEachExpressionAssignment_9()); }
(rule__BasicForLoopExpression__EachExpressionAssignment_9)
{ after(grammarAccess.getBasicForLoopExpressionAccess().getEachExpressionAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__BasicForLoopExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicForLoopExpression__Group_3__0__Impl
	rule__BasicForLoopExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getInitExpressionsAssignment_3_0()); }
(rule__BasicForLoopExpression__InitExpressionsAssignment_3_0)
{ after(grammarAccess.getBasicForLoopExpressionAccess().getInitExpressionsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicForLoopExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicForLoopExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getGroup_3_1()); }
(rule__BasicForLoopExpression__Group_3_1__0)*
{ after(grammarAccess.getBasicForLoopExpressionAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BasicForLoopExpression__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicForLoopExpression__Group_3_1__0__Impl
	rule__BasicForLoopExpression__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getBasicForLoopExpressionAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicForLoopExpression__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicForLoopExpression__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getInitExpressionsAssignment_3_1_1()); }
(rule__BasicForLoopExpression__InitExpressionsAssignment_3_1_1)
{ after(grammarAccess.getBasicForLoopExpressionAccess().getInitExpressionsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BasicForLoopExpression__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicForLoopExpression__Group_7__0__Impl
	rule__BasicForLoopExpression__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getUpdateExpressionsAssignment_7_0()); }
(rule__BasicForLoopExpression__UpdateExpressionsAssignment_7_0)
{ after(grammarAccess.getBasicForLoopExpressionAccess().getUpdateExpressionsAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicForLoopExpression__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicForLoopExpression__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getGroup_7_1()); }
(rule__BasicForLoopExpression__Group_7_1__0)*
{ after(grammarAccess.getBasicForLoopExpressionAccess().getGroup_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BasicForLoopExpression__Group_7_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicForLoopExpression__Group_7_1__0__Impl
	rule__BasicForLoopExpression__Group_7_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__Group_7_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getCommaKeyword_7_1_0()); }

	',' 

{ after(grammarAccess.getBasicForLoopExpressionAccess().getCommaKeyword_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicForLoopExpression__Group_7_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicForLoopExpression__Group_7_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__Group_7_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getUpdateExpressionsAssignment_7_1_1()); }
(rule__BasicForLoopExpression__UpdateExpressionsAssignment_7_1_1)
{ after(grammarAccess.getBasicForLoopExpressionAccess().getUpdateExpressionsAssignment_7_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WhileExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileExpression__Group__0__Impl
	rule__WhileExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileExpressionAccess().getWhileExpressionAction_0()); }
(

)
{ after(grammarAccess.getWhileExpressionAccess().getWhileExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileExpression__Group__1__Impl
	rule__WhileExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileExpressionAccess().getWhileKeyword_1()); }

	'while' 

{ after(grammarAccess.getWhileExpressionAccess().getWhileKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileExpression__Group__2__Impl
	rule__WhileExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getWhileExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileExpression__Group__3__Impl
	rule__WhileExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileExpressionAccess().getPredicateAssignment_3()); }
(rule__WhileExpression__PredicateAssignment_3)
{ after(grammarAccess.getWhileExpressionAccess().getPredicateAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileExpression__Group__4__Impl
	rule__WhileExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileExpressionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getWhileExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileExpressionAccess().getBodyAssignment_5()); }
(rule__WhileExpression__BodyAssignment_5)
{ after(grammarAccess.getWhileExpressionAccess().getBodyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DoWhileExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileExpression__Group__0__Impl
	rule__DoWhileExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getDoWhileExpressionAction_0()); }
(

)
{ after(grammarAccess.getDoWhileExpressionAccess().getDoWhileExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileExpression__Group__1__Impl
	rule__DoWhileExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getDoKeyword_1()); }

	'do' 

{ after(grammarAccess.getDoWhileExpressionAccess().getDoKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileExpression__Group__2__Impl
	rule__DoWhileExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getBodyAssignment_2()); }
(rule__DoWhileExpression__BodyAssignment_2)
{ after(grammarAccess.getDoWhileExpressionAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileExpression__Group__3__Impl
	rule__DoWhileExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getWhileKeyword_3()); }

	'while' 

{ after(grammarAccess.getDoWhileExpressionAccess().getWhileKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileExpression__Group__4__Impl
	rule__DoWhileExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getDoWhileExpressionAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileExpression__Group__5__Impl
	rule__DoWhileExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getPredicateAssignment_5()); }
(rule__DoWhileExpression__PredicateAssignment_5)
{ after(grammarAccess.getDoWhileExpressionAccess().getPredicateAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getDoWhileExpressionAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__BlockExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockExpression__Group__0__Impl
	rule__BlockExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getBlockExpressionAction_0()); }
(

)
{ after(grammarAccess.getBlockExpressionAccess().getBlockExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockExpression__Group__1__Impl
	rule__BlockExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockExpression__Group__2__Impl
	rule__BlockExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getGroup_2()); }
(rule__BlockExpression__Group_2__0)*
{ after(grammarAccess.getBlockExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BlockExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockExpression__Group_2__0__Impl
	rule__BlockExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_0()); }
(rule__BlockExpression__ExpressionsAssignment_2_0)
{ after(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockExpression__Group_2__1__Impl
	rule__BlockExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getGroup_2_1()); }
(rule__BlockExpression__Group_2_1__0)
{ after(grammarAccess.getBlockExpressionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getSemicolonKeyword_2_2()); }
(
	';' 
)?
{ after(grammarAccess.getBlockExpressionAccess().getSemicolonKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BlockExpression__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockExpression__Group_2_1__0__Impl
	rule__BlockExpression__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getBlockExpressionAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpression__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockExpression__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_1_1()); }
(rule__BlockExpression__ExpressionsAssignment_2_1_1)
{ after(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmFormalParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmFormalParameter__Group__0__Impl
	rule__JvmFormalParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmFormalParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getParameterTypeAssignment_0()); }
(rule__JvmFormalParameter__ParameterTypeAssignment_0)?
{ after(grammarAccess.getJvmFormalParameterAccess().getParameterTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmFormalParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmFormalParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmFormalParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getNameAssignment_1()); }
(rule__JvmFormalParameter__NameAssignment_1)
{ after(grammarAccess.getJvmFormalParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FullJvmFormalParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FullJvmFormalParameter__Group__0__Impl
	rule__FullJvmFormalParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FullJvmFormalParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeAssignment_0()); }
(rule__FullJvmFormalParameter__ParameterTypeAssignment_0)
{ after(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FullJvmFormalParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FullJvmFormalParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FullJvmFormalParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getNameAssignment_1()); }
(rule__FullJvmFormalParameter__NameAssignment_1)
{ after(grammarAccess.getFullJvmFormalParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeatureCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group__0__Impl
	rule__FeatureCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getFeatureCallAction_0()); }
(

)
{ after(grammarAccess.getFeatureCallAccess().getFeatureCallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group__1__Impl
	rule__FeatureCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getGroup_1()); }
(rule__FeatureCall__Group_1__0)?
{ after(grammarAccess.getFeatureCallAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group__2__Impl
	rule__FeatureCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getFeatureAssignment_2()); }
(rule__FeatureCall__FeatureAssignment_2)
{ after(grammarAccess.getFeatureCallAccess().getFeatureAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group__3__Impl
	rule__FeatureCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getGroup_3()); }
(rule__FeatureCall__Group_3__0)?
{ after(grammarAccess.getFeatureCallAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsAssignment_4()); }
(rule__FeatureCall__FeatureCallArgumentsAssignment_4)?
{ after(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FeatureCall__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_1__0__Impl
	rule__FeatureCall__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getLessThanSignKeyword_1_0()); }

	'<' 

{ after(grammarAccess.getFeatureCallAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_1__1__Impl
	rule__FeatureCall__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getTypeArgumentsAssignment_1_1()); }
(rule__FeatureCall__TypeArgumentsAssignment_1_1)
{ after(grammarAccess.getFeatureCallAccess().getTypeArgumentsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_1__2__Impl
	rule__FeatureCall__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getGroup_1_2()); }
(rule__FeatureCall__Group_1_2__0)*
{ after(grammarAccess.getFeatureCallAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getGreaterThanSignKeyword_1_3()); }

	'>' 

{ after(grammarAccess.getFeatureCallAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FeatureCall__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_1_2__0__Impl
	rule__FeatureCall__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getFeatureCallAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getTypeArgumentsAssignment_1_2_1()); }
(rule__FeatureCall__TypeArgumentsAssignment_1_2_1)
{ after(grammarAccess.getFeatureCallAccess().getTypeArgumentsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeatureCall__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_3__0__Impl
	rule__FeatureCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getExplicitOperationCallAssignment_3_0()); }
(rule__FeatureCall__ExplicitOperationCallAssignment_3_0)
{ after(grammarAccess.getFeatureCallAccess().getExplicitOperationCallAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_3__1__Impl
	rule__FeatureCall__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getAlternatives_3_1()); }
(rule__FeatureCall__Alternatives_3_1)?
{ after(grammarAccess.getFeatureCallAccess().getAlternatives_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getFeatureCallAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FeatureCall__Group_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_3_1_1__0__Impl
	rule__FeatureCall__Group_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_1_0()); }
(rule__FeatureCall__FeatureCallArgumentsAssignment_3_1_1_0)
{ after(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getGroup_3_1_1_1()); }
(rule__FeatureCall__Group_3_1_1_1__0)*
{ after(grammarAccess.getFeatureCallAccess().getGroup_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeatureCall__Group_3_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_3_1_1_1__0__Impl
	rule__FeatureCall__Group_3_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_3_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getCommaKeyword_3_1_1_1_0()); }

	',' 

{ after(grammarAccess.getFeatureCallAccess().getCommaKeyword_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group_3_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_3_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_3_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_1_1_1()); }
(rule__FeatureCall__FeatureCallArgumentsAssignment_3_1_1_1_1)
{ after(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstructorCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group__0__Impl
	rule__ConstructorCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getConstructorCallAction_0()); }
(

)
{ after(grammarAccess.getConstructorCallAccess().getConstructorCallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group__1__Impl
	rule__ConstructorCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getNewKeyword_1()); }

	'new' 

{ after(grammarAccess.getConstructorCallAccess().getNewKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group__2__Impl
	rule__ConstructorCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getConstructorAssignment_2()); }
(rule__ConstructorCall__ConstructorAssignment_2)
{ after(grammarAccess.getConstructorCallAccess().getConstructorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group__3__Impl
	rule__ConstructorCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getGroup_3()); }
(rule__ConstructorCall__Group_3__0)?
{ after(grammarAccess.getConstructorCallAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group__4__Impl
	rule__ConstructorCall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getGroup_4()); }
(rule__ConstructorCall__Group_4__0)?
{ after(grammarAccess.getConstructorCallAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getArgumentsAssignment_5()); }
(rule__ConstructorCall__ArgumentsAssignment_5)?
{ after(grammarAccess.getConstructorCallAccess().getArgumentsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ConstructorCall__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group_3__0__Impl
	rule__ConstructorCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getLessThanSignKeyword_3_0()); }
(
	'<' 
)
{ after(grammarAccess.getConstructorCallAccess().getLessThanSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group_3__1__Impl
	rule__ConstructorCall__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getTypeArgumentsAssignment_3_1()); }
(rule__ConstructorCall__TypeArgumentsAssignment_3_1)
{ after(grammarAccess.getConstructorCallAccess().getTypeArgumentsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group_3__2__Impl
	rule__ConstructorCall__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getGroup_3_2()); }
(rule__ConstructorCall__Group_3_2__0)*
{ after(grammarAccess.getConstructorCallAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getGreaterThanSignKeyword_3_3()); }

	'>' 

{ after(grammarAccess.getConstructorCallAccess().getGreaterThanSignKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConstructorCall__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group_3_2__0__Impl
	rule__ConstructorCall__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getConstructorCallAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getTypeArgumentsAssignment_3_2_1()); }
(rule__ConstructorCall__TypeArgumentsAssignment_3_2_1)
{ after(grammarAccess.getConstructorCallAccess().getTypeArgumentsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstructorCall__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group_4__0__Impl
	rule__ConstructorCall__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getExplicitConstructorCallAssignment_4_0()); }
(rule__ConstructorCall__ExplicitConstructorCallAssignment_4_0)
{ after(grammarAccess.getConstructorCallAccess().getExplicitConstructorCallAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group_4__1__Impl
	rule__ConstructorCall__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getAlternatives_4_1()); }
(rule__ConstructorCall__Alternatives_4_1)?
{ after(grammarAccess.getConstructorCallAccess().getAlternatives_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getRightParenthesisKeyword_4_2()); }

	')' 

{ after(grammarAccess.getConstructorCallAccess().getRightParenthesisKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConstructorCall__Group_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group_4_1_1__0__Impl
	rule__ConstructorCall__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getArgumentsAssignment_4_1_1_0()); }
(rule__ConstructorCall__ArgumentsAssignment_4_1_1_0)
{ after(grammarAccess.getConstructorCallAccess().getArgumentsAssignment_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getGroup_4_1_1_1()); }
(rule__ConstructorCall__Group_4_1_1_1__0)*
{ after(grammarAccess.getConstructorCallAccess().getGroup_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstructorCall__Group_4_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group_4_1_1_1__0__Impl
	rule__ConstructorCall__Group_4_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group_4_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getCommaKeyword_4_1_1_1_0()); }

	',' 

{ after(grammarAccess.getConstructorCallAccess().getCommaKeyword_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCall__Group_4_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorCall__Group_4_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__Group_4_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getArgumentsAssignment_4_1_1_1_1()); }
(rule__ConstructorCall__ArgumentsAssignment_4_1_1_1_1)
{ after(grammarAccess.getConstructorCallAccess().getArgumentsAssignment_4_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__0__Impl
	rule__BooleanLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
(

)
{ after(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getAlternatives_1()); }
(rule__BooleanLiteral__Alternatives_1)
{ after(grammarAccess.getBooleanLiteralAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NullLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullLiteral__Group__0__Impl
	rule__NullLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0()); }
(

)
{ after(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getNullKeyword_1()); }

	'null' 

{ after(grammarAccess.getNullLiteralAccess().getNullKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumberLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group__0__Impl
	rule__NumberLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0()); }
(

)
{ after(grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getValueAssignment_1()); }
(rule__NumberLiteral__ValueAssignment_1)
{ after(grammarAccess.getNumberLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group__0__Impl
	rule__StringLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
(

)
{ after(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
(rule__StringLiteral__ValueAssignment_1)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CharLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CharLiteral__Group__0__Impl
	rule__CharLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CharLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharLiteralAccess().getCharLiteralAction_0()); }
(

)
{ after(grammarAccess.getCharLiteralAccess().getCharLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CharLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CharLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CharLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharLiteralAccess().getValueAssignment_1()); }
(rule__CharLiteral__ValueAssignment_1)
{ after(grammarAccess.getCharLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ThrowExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThrowExpression__Group__0__Impl
	rule__ThrowExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowExpressionAccess().getThrowExpressionAction_0()); }
(

)
{ after(grammarAccess.getThrowExpressionAccess().getThrowExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThrowExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThrowExpression__Group__1__Impl
	rule__ThrowExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowExpressionAccess().getThrowKeyword_1()); }

	'throw' 

{ after(grammarAccess.getThrowExpressionAccess().getThrowKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThrowExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThrowExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowExpressionAccess().getExpressionAssignment_2()); }
(rule__ThrowExpression__ExpressionAssignment_2)
{ after(grammarAccess.getThrowExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReturnExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnExpression__Group__0__Impl
	rule__ReturnExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnExpressionAccess().getReturnExpressionAction_0()); }
(

)
{ after(grammarAccess.getReturnExpressionAccess().getReturnExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnExpression__Group__1__Impl
	rule__ReturnExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnExpressionAccess().getReturnKeyword_1()); }

	'return' 

{ after(grammarAccess.getReturnExpressionAccess().getReturnKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnExpressionAccess().getExpressionAssignment_2()); }
(rule__ReturnExpression__ExpressionAssignment_2)?
{ after(grammarAccess.getReturnExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TryCatchFinallyExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryCatchFinallyExpression__Group__0__Impl
	rule__TryCatchFinallyExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchFinallyExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchFinallyExpressionAccess().getTryCatchFinallyExpressionAction_0()); }
(

)
{ after(grammarAccess.getTryCatchFinallyExpressionAccess().getTryCatchFinallyExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryCatchFinallyExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryCatchFinallyExpression__Group__1__Impl
	rule__TryCatchFinallyExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchFinallyExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchFinallyExpressionAccess().getTryKeyword_1()); }

	'try' 

{ after(grammarAccess.getTryCatchFinallyExpressionAccess().getTryKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryCatchFinallyExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryCatchFinallyExpression__Group__2__Impl
	rule__TryCatchFinallyExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchFinallyExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchFinallyExpressionAccess().getExpressionAssignment_2()); }
(rule__TryCatchFinallyExpression__ExpressionAssignment_2)
{ after(grammarAccess.getTryCatchFinallyExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryCatchFinallyExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryCatchFinallyExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchFinallyExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchFinallyExpressionAccess().getAlternatives_3()); }
(rule__TryCatchFinallyExpression__Alternatives_3)
{ after(grammarAccess.getTryCatchFinallyExpressionAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TryCatchFinallyExpression__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryCatchFinallyExpression__Group_3_0__0__Impl
	rule__TryCatchFinallyExpression__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchFinallyExpression__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0()); }
(rule__TryCatchFinallyExpression__CatchClausesAssignment_3_0_0)
{ after(grammarAccess.getTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0()); }
)
(
{ before(grammarAccess.getTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0()); }
(rule__TryCatchFinallyExpression__CatchClausesAssignment_3_0_0)*
{ after(grammarAccess.getTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryCatchFinallyExpression__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryCatchFinallyExpression__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchFinallyExpression__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchFinallyExpressionAccess().getGroup_3_0_1()); }
(rule__TryCatchFinallyExpression__Group_3_0_1__0)?
{ after(grammarAccess.getTryCatchFinallyExpressionAccess().getGroup_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TryCatchFinallyExpression__Group_3_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryCatchFinallyExpression__Group_3_0_1__0__Impl
	rule__TryCatchFinallyExpression__Group_3_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchFinallyExpression__Group_3_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0()); }
(
	'finally' 
)
{ after(grammarAccess.getTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryCatchFinallyExpression__Group_3_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryCatchFinallyExpression__Group_3_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchFinallyExpression__Group_3_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_0_1_1()); }
(rule__TryCatchFinallyExpression__FinallyExpressionAssignment_3_0_1_1)
{ after(grammarAccess.getTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TryCatchFinallyExpression__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryCatchFinallyExpression__Group_3_1__0__Impl
	rule__TryCatchFinallyExpression__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchFinallyExpression__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0()); }

	'finally' 

{ after(grammarAccess.getTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryCatchFinallyExpression__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryCatchFinallyExpression__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchFinallyExpression__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_1_1()); }
(rule__TryCatchFinallyExpression__FinallyExpressionAssignment_3_1_1)
{ after(grammarAccess.getTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SynchronizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SynchronizedExpression__Group__0__Impl
	rule__SynchronizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedExpressionAccess().getGroup_0()); }
(rule__SynchronizedExpression__Group_0__0)
{ after(grammarAccess.getSynchronizedExpressionAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SynchronizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SynchronizedExpression__Group__1__Impl
	rule__SynchronizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedExpressionAccess().getParamAssignment_1()); }
(rule__SynchronizedExpression__ParamAssignment_1)
{ after(grammarAccess.getSynchronizedExpressionAccess().getParamAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SynchronizedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SynchronizedExpression__Group__2__Impl
	rule__SynchronizedExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getSynchronizedExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SynchronizedExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SynchronizedExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedExpressionAccess().getExpressionAssignment_3()); }
(rule__SynchronizedExpression__ExpressionAssignment_3)
{ after(grammarAccess.getSynchronizedExpressionAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SynchronizedExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SynchronizedExpression__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedExpressionAccess().getGroup_0_0()); }
(rule__SynchronizedExpression__Group_0_0__0)
{ after(grammarAccess.getSynchronizedExpressionAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__SynchronizedExpression__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SynchronizedExpression__Group_0_0__0__Impl
	rule__SynchronizedExpression__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedExpression__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedExpressionAccess().getSynchronizedExpressionAction_0_0_0()); }
(

)
{ after(grammarAccess.getSynchronizedExpressionAccess().getSynchronizedExpressionAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SynchronizedExpression__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SynchronizedExpression__Group_0_0__1__Impl
	rule__SynchronizedExpression__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedExpression__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1()); }

	'synchronized' 

{ after(grammarAccess.getSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SynchronizedExpression__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SynchronizedExpression__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedExpression__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2()); }

	'(' 

{ after(grammarAccess.getSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CatchClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CatchClause__Group__0__Impl
	rule__CatchClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchClauseAccess().getCatchKeyword_0()); }
(
	'catch' 
)
{ after(grammarAccess.getCatchClauseAccess().getCatchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CatchClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CatchClause__Group__1__Impl
	rule__CatchClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchClauseAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getCatchClauseAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CatchClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CatchClause__Group__2__Impl
	rule__CatchClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchClauseAccess().getDeclaredParamAssignment_2()); }
(rule__CatchClause__DeclaredParamAssignment_2)
{ after(grammarAccess.getCatchClauseAccess().getDeclaredParamAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CatchClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CatchClause__Group__3__Impl
	rule__CatchClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchClauseAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getCatchClauseAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CatchClause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CatchClause__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchClauseAccess().getExpressionAssignment_4()); }
(rule__CatchClause__ExpressionAssignment_4)
{ after(grammarAccess.getCatchClauseAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
(
	'.' 
)
{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Number__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1__0__Impl
	rule__Number__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getAlternatives_1_0()); }
(rule__Number__Alternatives_1_0)
{ after(grammarAccess.getNumberAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getGroup_1_1()); }
(rule__Number__Group_1_1__0)?
{ after(grammarAccess.getNumberAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Number__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1_1__0__Impl
	rule__Number__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); }

	'.' 

{ after(grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getAlternatives_1_1_1()); }
(rule__Number__Alternatives_1_1_1)
{ after(grammarAccess.getNumberAccess().getAlternatives_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__JvmTypeReference__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0__0__Impl
	rule__JvmTypeReference__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); }
	ruleJvmParameterizedTypeReference
{ after(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmTypeReference__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1()); }
(rule__JvmTypeReference__Group_0_1__0)*
{ after(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmTypeReference__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1_0()); }
(rule__JvmTypeReference__Group_0_1_0__0)
{ after(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__JvmTypeReference__Group_0_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0_1_0__0__Impl
	rule__JvmTypeReference__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0()); }
(

)
{ after(grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmTypeReference__Group_0_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); }
	ruleArrayBrackets
{ after(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayBrackets__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayBrackets__Group__0__Impl
	rule__ArrayBrackets__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayBrackets__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayBrackets__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayBrackets__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayBrackets__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); }

	']' 

{ after(grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFunctionTypeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group__0__Impl
	rule__XFunctionTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup_0()); }
(rule__XFunctionTypeRef__Group_0__0)?
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group__1__Impl
	rule__XFunctionTypeRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	'=>' 

{ after(grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeAssignment_2()); }
(rule__XFunctionTypeRef__ReturnTypeAssignment_2)
{ after(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XFunctionTypeRef__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0__0__Impl
	rule__XFunctionTypeRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0__1__Impl
	rule__XFunctionTypeRef__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1()); }
(rule__XFunctionTypeRef__Group_0_1__0)?
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XFunctionTypeRef__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0_1__0__Impl
	rule__XFunctionTypeRef__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_0()); }
(rule__XFunctionTypeRef__ParamTypesAssignment_0_1_0)
{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1_1()); }
(rule__XFunctionTypeRef__Group_0_1_1__0)*
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFunctionTypeRef__Group_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0_1_1__0__Impl
	rule__XFunctionTypeRef__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0()); }

	',' 

{ after(grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_1_1()); }
(rule__XFunctionTypeRef__ParamTypesAssignment_0_1_1_1)
{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmParameterizedTypeReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group__0__Impl
	rule__JvmParameterizedTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_0()); }
(rule__JvmParameterizedTypeReference__TypeAssignment_0)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1()); }
(rule__JvmParameterizedTypeReference__Group_1__0)?
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmParameterizedTypeReference__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1__0__Impl
	rule__JvmParameterizedTypeReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0()); }
(
	'<' 
)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1__1__Impl
	rule__JvmParameterizedTypeReference__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_1()); }
(rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_1)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1__2__Impl
	rule__JvmParameterizedTypeReference__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_2()); }
(rule__JvmParameterizedTypeReference__Group_1_2__0)*
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1__3__Impl
	rule__JvmParameterizedTypeReference__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3()); }

	'>' 

{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4()); }
(rule__JvmParameterizedTypeReference__Group_1_4__0)*
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__JvmParameterizedTypeReference__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_2__0__Impl
	rule__JvmParameterizedTypeReference__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_2_1()); }
(rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_2_1)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmParameterizedTypeReference__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4__0__Impl
	rule__JvmParameterizedTypeReference__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_0()); }
(rule__JvmParameterizedTypeReference__Group_1_4_0__0)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4__1__Impl
	rule__JvmParameterizedTypeReference__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_1_4_1()); }
(rule__JvmParameterizedTypeReference__TypeAssignment_1_4_1)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_2()); }
(rule__JvmParameterizedTypeReference__Group_1_4_2__0)?
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JvmParameterizedTypeReference__Group_1_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_0_0()); }
(rule__JvmParameterizedTypeReference__Group_1_4_0_0__0)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__JvmParameterizedTypeReference__Group_1_4_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4_0_0__0__Impl
	rule__JvmParameterizedTypeReference__Group_1_4_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0()); }
(

)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1()); }

	'.' 

{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmParameterizedTypeReference__Group_1_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4_2__0__Impl
	rule__JvmParameterizedTypeReference__Group_1_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0()); }
(
	'<' 
)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4_2__1__Impl
	rule__JvmParameterizedTypeReference__Group_1_4_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_4_2_1()); }
(rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_4_2_1)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4_2__2__Impl
	rule__JvmParameterizedTypeReference__Group_1_4_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_2_2()); }
(rule__JvmParameterizedTypeReference__Group_1_4_2_2__0)*
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3()); }

	'>' 

{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__JvmParameterizedTypeReference__Group_1_4_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4_2_2__0__Impl
	rule__JvmParameterizedTypeReference__Group_1_4_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0()); }

	',' 

{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_4_2_2_1()); }
(rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_4_2_2_1)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_4_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmWildcardTypeReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group__0__Impl
	rule__JvmWildcardTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0()); }
(

)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmWildcardTypeReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group__1__Impl
	rule__JvmWildcardTypeReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1()); }

	'?' 

{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmWildcardTypeReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getAlternatives_2()); }
(rule__JvmWildcardTypeReference__Alternatives_2)?
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JvmWildcardTypeReference__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group_2_0__0__Impl
	rule__JvmWildcardTypeReference__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0_0()); }
(rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0_0)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmWildcardTypeReference__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0_1()); }
(rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0_1)*
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmWildcardTypeReference__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group_2_1__0__Impl
	rule__JvmWildcardTypeReference__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1_0()); }
(rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1_0)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmWildcardTypeReference__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1_1()); }
(rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1_1)*
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmUpperBound__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmUpperBound__Group__0__Impl
	rule__JvmUpperBound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBound__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0()); }

	'extends' 

{ after(grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmUpperBound__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmUpperBound__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBound__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceAssignment_1()); }
(rule__JvmUpperBound__TypeReferenceAssignment_1)
{ after(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmUpperBoundAnded__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmUpperBoundAnded__Group__0__Impl
	rule__JvmUpperBoundAnded__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBoundAnded__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0()); }

	'&' 

{ after(grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmUpperBoundAnded__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmUpperBoundAnded__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBoundAnded__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceAssignment_1()); }
(rule__JvmUpperBoundAnded__TypeReferenceAssignment_1)
{ after(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmLowerBound__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmLowerBound__Group__0__Impl
	rule__JvmLowerBound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBound__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0()); }

	'super' 

{ after(grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmLowerBound__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmLowerBound__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBound__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceAssignment_1()); }
(rule__JvmLowerBound__TypeReferenceAssignment_1)
{ after(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmLowerBoundAnded__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmLowerBoundAnded__Group__0__Impl
	rule__JvmLowerBoundAnded__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBoundAnded__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0()); }

	'&' 

{ after(grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmLowerBoundAnded__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmLowerBoundAnded__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBoundAnded__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceAssignment_1()); }
(rule__JvmLowerBoundAnded__TypeReferenceAssignment_1)
{ after(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
	rule__QualifiedNameWithWildcard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); }

	'*' 

{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XImportDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group__0__Impl
	rule__XImportDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getXImportDeclarationAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group__1__Impl
	rule__XImportDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getAlternatives_1()); }
(rule__XImportDeclaration__Alternatives_1)
{ after(grammarAccess.getXImportDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2()); }
(
	';' 
)?
{ after(grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XImportDeclaration__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group_1_0__0__Impl
	rule__XImportDeclaration__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getStaticAssignment_1_0_0()); }
(rule__XImportDeclaration__StaticAssignment_1_0_0)
{ after(grammarAccess.getXImportDeclarationAccess().getStaticAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group_1_0__1__Impl
	rule__XImportDeclaration__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getExtensionAssignment_1_0_1()); }
(rule__XImportDeclaration__ExtensionAssignment_1_0_1)?
{ after(grammarAccess.getXImportDeclarationAccess().getExtensionAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group_1_0__2__Impl
	rule__XImportDeclaration__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_0_2()); }
(rule__XImportDeclaration__ImportedTypeAssignment_1_0_2)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getAlternatives_1_0_3()); }
(rule__XImportDeclaration__Alternatives_1_0_3)
{ after(grammarAccess.getXImportDeclarationAccess().getAlternatives_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__QualifiedNameInStaticImport__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameInStaticImport__Group__0__Impl
	rule__QualifiedNameInStaticImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameInStaticImport__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameInStaticImport__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameInStaticImport__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameInStaticImport__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__CompilationUnit__PackagedeclarationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getPackagedeclarationPackageDeclarationParserRuleCall_1_0()); }
	rulePackageDeclaration{ after(grammarAccess.getCompilationUnitAccess().getPackagedeclarationPackageDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__ImportdeclarationAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getImportdeclarationImportDeclarationParserRuleCall_2_0()); }
	ruleImportDeclaration{ after(grammarAccess.getCompilationUnitAccess().getImportdeclarationImportDeclarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__TypedeclarationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getTypedeclarationClassifierDeclarationWithModifierParserRuleCall_3_0()); }
	ruleClassifierDeclarationWithModifier{ after(grammarAccess.getCompilationUnitAccess().getTypedeclarationClassifierDeclarationWithModifierParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__QualifiednameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getQualifiednameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getPackageDeclarationAccess().getQualifiednameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__StaticAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getStaticStaticKeyword_1_0()); }
(
{ before(grammarAccess.getImportDeclarationAccess().getStaticStaticKeyword_1_0()); }

	'static' 

{ after(grammarAccess.getImportDeclarationAccess().getStaticStaticKeyword_1_0()); }
)

{ after(grammarAccess.getImportDeclarationAccess().getStaticStaticKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__QualifiednameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getQualifiednameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getImportDeclarationAccess().getQualifiednameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__WildcardAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getWildcardAsteriskKeyword_3_1_0()); }
(
{ before(grammarAccess.getImportDeclarationAccess().getWildcardAsteriskKeyword_3_1_0()); }

	'*' 

{ after(grammarAccess.getImportDeclarationAccess().getWildcardAsteriskKeyword_3_1_0()); }
)

{ after(grammarAccess.getImportDeclarationAccess().getWildcardAsteriskKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclarationWithModifier__ModifiersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierDeclarationWithModifierAccess().getModifiersModifierParserRuleCall_0_0()); }
	ruleModifier{ after(grammarAccess.getClassifierDeclarationWithModifierAccess().getModifiersModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDeclarationWithModifier__ClassOrInterfaceDeclarationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierDeclarationWithModifierAccess().getClassOrInterfaceDeclarationClassOrInterfaceDeclarationParserRuleCall_1_0()); }
	ruleClassOrInterfaceDeclaration{ after(grammarAccess.getClassifierDeclarationWithModifierAccess().getClassOrInterfaceDeclarationClassOrInterfaceDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegularModifier__ModifierAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegularModifierAccess().getModifierModifierValueEnumRuleCall_0()); }
	ruleModifierValue{ after(grammarAccess.getRegularModifierAccess().getModifierModifierValueEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__IdentifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getIdentifierIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getNormalClassDeclarationAccess().getIdentifierIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__TypeparametersAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getTypeparametersTypeParametersParserRuleCall_2_0()); }
	ruleTypeParameters{ after(grammarAccess.getNormalClassDeclarationAccess().getTypeparametersTypeParametersParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__SuperTypeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getSuperTypeTypeParserRuleCall_3_1_0()); }
	ruleType{ after(grammarAccess.getNormalClassDeclarationAccess().getSuperTypeTypeParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__ImplementedTypesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getImplementedTypesTypeParserRuleCall_4_1_0()); }
	ruleType{ after(grammarAccess.getNormalClassDeclarationAccess().getImplementedTypesTypeParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__ImplementedTypesAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getImplementedTypesTypeParserRuleCall_4_2_1_0()); }
	ruleType{ after(grammarAccess.getNormalClassDeclarationAccess().getImplementedTypesTypeParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClassDeclaration__BodyDeclarationsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassDeclarationAccess().getBodyDeclarationsClassBodyDeclarationParserRuleCall_6_0()); }
	ruleClassBodyDeclaration{ after(grammarAccess.getNormalClassDeclarationAccess().getBodyDeclarationsClassBodyDeclarationParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameters__TypeparameterAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParametersAccess().getTypeparameterTypeParameterParserRuleCall_1_0()); }
	ruleTypeParameter{ after(grammarAccess.getTypeParametersAccess().getTypeparameterTypeParameterParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameters__TypeparameterAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParametersAccess().getTypeparameterTypeParameterParserRuleCall_2_1_0()); }
	ruleTypeParameter{ after(grammarAccess.getTypeParametersAccess().getTypeparameterTypeParameterParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__IdentifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getIdentifierIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTypeParameterAccess().getIdentifierIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParameter__TypeboundAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParameterAccess().getTypeboundTypeBoundParserRuleCall_2_1_0()); }
	ruleTypeBound{ after(grammarAccess.getTypeParameterAccess().getTypeboundTypeBoundParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBound__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeBoundAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getTypeBoundAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBound__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeBoundAccess().getTypeTypeParserRuleCall_1_1_0()); }
	ruleType{ after(grammarAccess.getTypeBoundAccess().getTypeTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__IdentifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getIdentifierIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEnumDeclarationAccess().getIdentifierIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__ImplementedTypesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getImplementedTypesTypeParserRuleCall_2_1_0()); }
	ruleType{ after(grammarAccess.getEnumDeclarationAccess().getImplementedTypesTypeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__ImplementedTypesAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getImplementedTypesTypeParserRuleCall_2_2_1_0()); }
	ruleType{ after(grammarAccess.getEnumDeclarationAccess().getImplementedTypesTypeParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__EnumconstantsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getEnumconstantsEnumConstantsParserRuleCall_4_0()); }
	ruleEnumConstants{ after(grammarAccess.getEnumDeclarationAccess().getEnumconstantsEnumConstantsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__BodyDeclarationsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclarationAccess().getBodyDeclarationsEnumBodyDeclarationsParserRuleCall_6_0()); }
	ruleEnumBodyDeclarations{ after(grammarAccess.getEnumDeclarationAccess().getBodyDeclarationsEnumBodyDeclarationsParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstants__EnumconstantAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantsAccess().getEnumconstantEnumConstantParserRuleCall_0_0()); }
	ruleEnumConstant{ after(grammarAccess.getEnumConstantsAccess().getEnumconstantEnumConstantParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstants__EnumconstantAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantsAccess().getEnumconstantEnumConstantParserRuleCall_1_1_0()); }
	ruleEnumConstant{ after(grammarAccess.getEnumConstantsAccess().getEnumconstantEnumConstantParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__AnnotationsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getAnnotationsAnnotationsParserRuleCall_1_0_0()); }
	ruleAnnotations{ after(grammarAccess.getEnumConstantAccess().getAnnotationsAnnotationsParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__IdentifierAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getIdentifierIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getEnumConstantAccess().getIdentifierIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__ArgumentsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getArgumentsArgumentsParserRuleCall_1_2_0()); }
	ruleArguments{ after(grammarAccess.getEnumConstantAccess().getArgumentsArgumentsParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__ClassbodydeclarationAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getClassbodydeclarationClassBodyDeclarationParserRuleCall_1_3_1_0()); }
	ruleClassBodyDeclaration{ after(grammarAccess.getEnumConstantAccess().getClassbodydeclarationClassBodyDeclarationParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBodyDeclarations__ClassbodydeclarationAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBodyDeclarationsAccess().getClassbodydeclarationClassBodyDeclarationParserRuleCall_2_0()); }
	ruleClassBodyDeclaration{ after(grammarAccess.getEnumBodyDeclarationsAccess().getClassbodydeclarationClassBodyDeclarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__ExpressionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsAccess().getExpressionsExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getArgumentsAccess().getExpressionsExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__ExpressionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsAccess().getExpressionsExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getArgumentsAccess().getExpressionsExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NormalInterfaceDeclaration__IdentifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalInterfaceDeclarationAccess().getIdentifierIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getNormalInterfaceDeclarationAccess().getIdentifierIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NormalInterfaceDeclaration__TypeparametersAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalInterfaceDeclarationAccess().getTypeparametersTypeParametersParserRuleCall_2_0()); }
	ruleTypeParameters{ after(grammarAccess.getNormalInterfaceDeclarationAccess().getTypeparametersTypeParametersParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NormalInterfaceDeclaration__ImplementedTypesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalInterfaceDeclarationAccess().getImplementedTypesTypeParserRuleCall_3_1_0()); }
	ruleType{ after(grammarAccess.getNormalInterfaceDeclarationAccess().getImplementedTypesTypeParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NormalInterfaceDeclaration__ImplementedTypesAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalInterfaceDeclarationAccess().getImplementedTypesTypeParserRuleCall_3_2_1_0()); }
	ruleType{ after(grammarAccess.getNormalInterfaceDeclarationAccess().getImplementedTypesTypeParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NormalInterfaceDeclaration__BodyDeclarationsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalInterfaceDeclarationAccess().getBodyDeclarationsClassBodyDeclarationParserRuleCall_5_0()); }
	ruleClassBodyDeclaration{ after(grammarAccess.getNormalInterfaceDeclarationAccess().getBodyDeclarationsClassBodyDeclarationParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticBlock__StaticAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticBlockAccess().getStaticStaticKeyword_0_0()); }
(
{ before(grammarAccess.getStaticBlockAccess().getStaticStaticKeyword_0_0()); }

	'static' 

{ after(grammarAccess.getStaticBlockAccess().getStaticStaticKeyword_0_0()); }
)

{ after(grammarAccess.getStaticBlockAccess().getStaticStaticKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticBlock__BlockAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticBlockAccess().getBlockBlockParserRuleCall_1_0()); }
	ruleBlock{ after(grammarAccess.getStaticBlockAccess().getBlockBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMultilineSpec__JmlTypeSpecificationsAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMultilineSpecAccess().getJmlTypeSpecificationsJMLTypeExpressionWithModifierParserRuleCall_1_0_0_0()); }
	ruleJMLTypeExpressionWithModifier{ after(grammarAccess.getJMLMultilineSpecAccess().getJmlTypeSpecificationsJMLTypeExpressionWithModifierParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMultilineSpec__JmlSpecificationsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMultilineSpecAccess().getJmlSpecificationsJMLMethodSpecificationWithModifierParserRuleCall_1_1_0_0()); }
	ruleJMLMethodSpecificationWithModifier{ after(grammarAccess.getJMLMultilineSpecAccess().getJmlSpecificationsJMLMethodSpecificationWithModifierParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMultilineSpec__ModelElementAssignment_1_1_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMultilineSpecAccess().getModelElementJMLSpecificationOnlyElementWithModifierParserRuleCall_1_1_1_0_0_0()); }
	ruleJMLSpecificationOnlyElementWithModifier{ after(grammarAccess.getJMLMultilineSpecAccess().getModelElementJMLSpecificationOnlyElementWithModifierParserRuleCall_1_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMultilineSpec__ElementAssignment_1_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMultilineSpecAccess().getElementMemberDeclWithModifierRegularParserRuleCall_1_1_1_1_1_0()); }
	ruleMemberDeclWithModifierRegular{ after(grammarAccess.getJMLMultilineSpecAccess().getElementMemberDeclWithModifierRegularParserRuleCall_1_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSinglelineSpec__ElementAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSinglelineSpecAccess().getElementMemberDeclWithModifierRegularParserRuleCall_0_0()); }
	ruleMemberDeclWithModifierRegular{ after(grammarAccess.getJMLSinglelineSpecAccess().getElementMemberDeclWithModifierRegularParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSinglelineSpec__JmlTypeSpecificationsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSinglelineSpecAccess().getJmlTypeSpecificationsJMLTypeExpressionWithModifierParserRuleCall_1_1_0_0()); }
	ruleJMLTypeExpressionWithModifier{ after(grammarAccess.getJMLSinglelineSpecAccess().getJmlTypeSpecificationsJMLTypeExpressionWithModifierParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSinglelineSpec__JmlSpecificationsAssignment_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSinglelineSpecAccess().getJmlSpecificationsJMLMethodSpecificationWithModifierParserRuleCall_1_1_1_0_0()); }
	ruleJMLMethodSpecificationWithModifier{ after(grammarAccess.getJMLSinglelineSpecAccess().getJmlSpecificationsJMLMethodSpecificationWithModifierParserRuleCall_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSinglelineSpec__JmlSpecificationsAssignment_1_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSinglelineSpecAccess().getJmlSpecificationsJMLMethodSpecificationWithModifierParserRuleCall_1_1_1_1_1_0()); }
	ruleJMLMethodSpecificationWithModifier{ after(grammarAccess.getJMLSinglelineSpecAccess().getJmlSpecificationsJMLMethodSpecificationWithModifierParserRuleCall_1_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSinglelineSpec__ElementAssignment_1_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSinglelineSpecAccess().getElementMemberDeclWithModifierRegularParserRuleCall_1_1_1_2_0()); }
	ruleMemberDeclWithModifierRegular{ after(grammarAccess.getJMLSinglelineSpecAccess().getElementMemberDeclWithModifierRegularParserRuleCall_1_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisiblityModifier__ModifierAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisiblityModifierAccess().getModifierVisibilityModifierValueEnumRuleCall_0()); }
	ruleVisibilityModifierValue{ after(grammarAccess.getVisiblityModifierAccess().getModifierVisibilityModifierValueEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMethodSpecificationWithModifierRegular__ModifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMethodSpecificationWithModifierRegularAccess().getModifierVisiblityModifierParserRuleCall_0_0()); }
	ruleVisiblityModifier{ after(grammarAccess.getJMLMethodSpecificationWithModifierRegularAccess().getModifierVisiblityModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMethodSpecificationWithModifierRegular__SpecAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMethodSpecificationWithModifierRegularAccess().getSpecJMLMethodSpecificationParserRuleCall_1_0()); }
	ruleJMLMethodSpecification{ after(grammarAccess.getJMLMethodSpecificationWithModifierRegularAccess().getSpecJMLMethodSpecificationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMethodSpecificationWithModifierExtended__ModifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMethodSpecificationWithModifierExtendedAccess().getModifierVisiblityModifierParserRuleCall_1_0()); }
	ruleVisiblityModifier{ after(grammarAccess.getJMLMethodSpecificationWithModifierExtendedAccess().getModifierVisiblityModifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMethodSpecificationWithModifierExtended__SpecAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMethodSpecificationWithModifierExtendedAccess().getSpecJMLMethodSpecificationParserRuleCall_2_0()); }
	ruleJMLMethodSpecification{ after(grammarAccess.getJMLMethodSpecificationWithModifierExtendedAccess().getSpecJMLMethodSpecificationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLExceptionalBehaviorBlock__SpecificationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLExceptionalBehaviorBlockAccess().getSpecificationsJMLMethodExpressionParserRuleCall_1_0()); }
	ruleJMLMethodExpression{ after(grammarAccess.getJMLExceptionalBehaviorBlockAccess().getSpecificationsJMLMethodExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLNormalBehaviorBlock__SpecificationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLNormalBehaviorBlockAccess().getSpecificationsJMLMethodExpressionParserRuleCall_1_0()); }
	ruleJMLMethodExpression{ after(grammarAccess.getJMLNormalBehaviorBlockAccess().getSpecificationsJMLMethodExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLBehaviorBlock__SpecificationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLBehaviorBlockAccess().getSpecificationsJMLMethodExpressionParserRuleCall_1_0()); }
	ruleJMLMethodExpression{ after(grammarAccess.getJMLBehaviorBlockAccess().getSpecificationsJMLMethodExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLEnsuresExpression__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLEnsuresExpressionAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getJMLEnsuresExpressionAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLRequiresExpression__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLRequiresExpressionAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getJMLRequiresExpressionAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSpecificationOnlyElementWithModifier__ModifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSpecificationOnlyElementWithModifierAccess().getModifierVisiblityModifierParserRuleCall_0_0()); }
	ruleVisiblityModifier{ after(grammarAccess.getJMLSpecificationOnlyElementWithModifierAccess().getModifierVisiblityModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLSpecificationOnlyElementWithModifier__ElementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLSpecificationOnlyElementWithModifierAccess().getElementJMLSpecificationOnlyElementParserRuleCall_1_0()); }
	ruleJMLSpecificationOnlyElement{ after(grammarAccess.getJMLSpecificationOnlyElementWithModifierAccess().getElementJMLSpecificationOnlyElementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLModelElement__InstanceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLModelElementAccess().getInstanceInstanceKeyword_1_0()); }
(
{ before(grammarAccess.getJMLModelElementAccess().getInstanceInstanceKeyword_1_0()); }

	'instance' 

{ after(grammarAccess.getJMLModelElementAccess().getInstanceInstanceKeyword_1_0()); }
)

{ after(grammarAccess.getJMLModelElementAccess().getInstanceInstanceKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLModelElement__ElementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLModelElementAccess().getElementMemberDeclWithModifierSpecParserRuleCall_2_0()); }
	ruleMemberDeclWithModifierSpec{ after(grammarAccess.getJMLModelElementAccess().getElementMemberDeclWithModifierSpecParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLGhostElement__InstanceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLGhostElementAccess().getInstanceInstanceKeyword_1_0()); }
(
{ before(grammarAccess.getJMLGhostElementAccess().getInstanceInstanceKeyword_1_0()); }

	'instance' 

{ after(grammarAccess.getJMLGhostElementAccess().getInstanceInstanceKeyword_1_0()); }
)

{ after(grammarAccess.getJMLGhostElementAccess().getInstanceInstanceKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLGhostElement__ElementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLGhostElementAccess().getElementMemberDeclWithModifierSpecParserRuleCall_2_0()); }
	ruleMemberDeclWithModifierSpec{ after(grammarAccess.getJMLGhostElementAccess().getElementMemberDeclWithModifierSpecParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLTypeExpressionWithModifier__ModifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLTypeExpressionWithModifierAccess().getModifierVisiblityModifierParserRuleCall_0_0()); }
	ruleVisiblityModifier{ after(grammarAccess.getJMLTypeExpressionWithModifierAccess().getModifierVisiblityModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLTypeExpressionWithModifier__SpecAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLTypeExpressionWithModifierAccess().getSpecJMLTypeExpressionParserRuleCall_1_0()); }
	ruleJMLTypeExpression{ after(grammarAccess.getJMLTypeExpressionWithModifierAccess().getSpecJMLTypeExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLInvariantExpression__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLInvariantExpressionAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getJMLInvariantExpressionAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLConstraintExpression__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLConstraintExpressionAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getJMLConstraintExpressionAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLAxiomExpression__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLAxiomExpressionAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getJMLAxiomExpressionAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLMemberModifier__ModifierAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLMemberModifierAccess().getModifierJMLSpecMemberModifierEnumRuleCall_0()); }
	ruleJMLSpecMemberModifier{ after(grammarAccess.getJMLMemberModifierAccess().getModifierJMLSpecMemberModifierEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclWithModifierRegular__ModifiersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclWithModifierRegularAccess().getModifiersModifierParserRuleCall_0_0()); }
	ruleModifier{ after(grammarAccess.getMemberDeclWithModifierRegularAccess().getModifiersModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclWithModifierRegular__JmlModifiersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclWithModifierRegularAccess().getJmlModifiersJMLMemberModifierParserRuleCall_1_1_0()); }
	ruleJMLMemberModifier{ after(grammarAccess.getMemberDeclWithModifierRegularAccess().getJmlModifiersJMLMemberModifierParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclWithModifierRegular__MemberdeclAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclWithModifierRegularAccess().getMemberdeclMemberDeclParserRuleCall_2_0()); }
	ruleMemberDecl{ after(grammarAccess.getMemberDeclWithModifierRegularAccess().getMemberdeclMemberDeclParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclWithModifierSpec__ModifiersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclWithModifierSpecAccess().getModifiersModifierParserRuleCall_0_0()); }
	ruleModifier{ after(grammarAccess.getMemberDeclWithModifierSpecAccess().getModifiersModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclWithModifierSpec__JmlModifiersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclWithModifierSpecAccess().getJmlModifiersJMLMemberModifierParserRuleCall_1_0()); }
	ruleJMLMemberModifier{ after(grammarAccess.getMemberDeclWithModifierSpecAccess().getJmlModifiersJMLMemberModifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclWithModifierSpec__MemberdeclAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclWithModifierSpecAccess().getMemberdeclMemberDeclParserRuleCall_2_0()); }
	ruleMemberDecl{ after(grammarAccess.getMemberDeclWithModifierSpecAccess().getMemberdeclMemberDeclParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__IdentifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getIdentifierIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getConstructorAccess().getIdentifierIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__ParametersAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getParametersFormalParameterDeclParserRuleCall_2_0_0()); }
	ruleFormalParameterDecl{ after(grammarAccess.getConstructorAccess().getParametersFormalParameterDeclParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__ParametersAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getParametersFormalParameterDeclParserRuleCall_2_1_1_0()); }
	ruleFormalParameterDecl{ after(grammarAccess.getConstructorAccess().getParametersFormalParameterDeclParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__ExceptionsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getExceptionsDeclaredExceptionParserRuleCall_4_1_0()); }
	ruleDeclaredException{ after(grammarAccess.getConstructorAccess().getExceptionsDeclaredExceptionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__ExceptionsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getExceptionsDeclaredExceptionParserRuleCall_4_2_1_0()); }
	ruleDeclaredException{ after(grammarAccess.getConstructorAccess().getExceptionsDeclaredExceptionParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__ConstructorbodyAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getConstructorbodyConstructorBodyParserRuleCall_5_0_0()); }
	ruleConstructorBody{ after(grammarAccess.getConstructorAccess().getConstructorbodyConstructorBodyParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclaration__TypeAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclarationAccess().getTypeTypeParserRuleCall_0_0_0()); }
	ruleType{ after(grammarAccess.getMemberDeclarationAccess().getTypeTypeParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclaration__MethodAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclarationAccess().getMethodMethodDeclarationParserRuleCall_1_0_0()); }
	ruleMethodDeclaration{ after(grammarAccess.getMemberDeclarationAccess().getMethodMethodDeclarationParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclaration__FieldAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberDeclarationAccess().getFieldFieldDeclarationParserRuleCall_1_1_0()); }
	ruleFieldDeclaration{ after(grammarAccess.getMemberDeclarationAccess().getFieldFieldDeclarationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__GenericMethodOrConstructorDecl__TypeParametersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericMethodOrConstructorDeclAccess().getTypeParametersTypeParametersParserRuleCall_0_0()); }
	ruleTypeParameters{ after(grammarAccess.getGenericMethodOrConstructorDeclAccess().getTypeParametersTypeParametersParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericMethodOrConstructorDecl__TypeAssignment_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericMethodOrConstructorDeclAccess().getTypeTypeParserRuleCall_1_0_0_0_0()); }
	ruleType{ after(grammarAccess.getGenericMethodOrConstructorDeclAccess().getTypeTypeParserRuleCall_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericMethodOrConstructorDecl__MethodAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericMethodOrConstructorDeclAccess().getMethodMethodDeclarationParserRuleCall_1_0_0_1_0()); }
	ruleMethodDeclaration{ after(grammarAccess.getGenericMethodOrConstructorDeclAccess().getMethodMethodDeclarationParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericMethodOrConstructorDecl__MethodAssignment_1_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericMethodOrConstructorDeclAccess().getMethodMethodDeclarationParserRuleCall_1_0_1_1_0()); }
	ruleMethodDeclaration{ after(grammarAccess.getGenericMethodOrConstructorDeclAccess().getMethodMethodDeclarationParserRuleCall_1_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericMethodOrConstructorDecl__ConstructorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericMethodOrConstructorDeclAccess().getConstructorConstructorParserRuleCall_1_1_0()); }
	ruleConstructor{ after(grammarAccess.getGenericMethodOrConstructorDeclAccess().getConstructorConstructorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__IdentifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getIdentifierIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getMethodDeclarationAccess().getIdentifierIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__ParametersAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getParametersFormalParameterDeclParserRuleCall_2_0_0()); }
	ruleFormalParameterDecl{ after(grammarAccess.getMethodDeclarationAccess().getParametersFormalParameterDeclParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__ParametersAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getParametersFormalParameterDeclParserRuleCall_2_1_1_0()); }
	ruleFormalParameterDecl{ after(grammarAccess.getMethodDeclarationAccess().getParametersFormalParameterDeclParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__ExceptionsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getExceptionsDeclaredExceptionParserRuleCall_4_1_0()); }
	ruleDeclaredException{ after(grammarAccess.getMethodDeclarationAccess().getExceptionsDeclaredExceptionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__ExceptionsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getExceptionsDeclaredExceptionParserRuleCall_4_2_1_0()); }
	ruleDeclaredException{ after(grammarAccess.getMethodDeclarationAccess().getExceptionsDeclaredExceptionParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__MethodbodyAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDeclarationAccess().getMethodbodyMethodBodyParserRuleCall_5_0_0()); }
	ruleMethodBody{ after(grammarAccess.getMethodDeclarationAccess().getMethodbodyMethodBodyParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__VariabledeclaratorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getVariabledeclaratorVariableDeclaratorParserRuleCall_0_0()); }
	ruleVariableDeclarator{ after(grammarAccess.getFieldDeclarationAccess().getVariabledeclaratorVariableDeclaratorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__VariabledeclaratorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldDeclarationAccess().getVariabledeclaratorVariableDeclaratorParserRuleCall_1_1_0()); }
	ruleVariableDeclarator{ after(grammarAccess.getFieldDeclarationAccess().getVariabledeclaratorVariableDeclaratorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredException__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredExceptionAccess().getNameQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName{ after(grammarAccess.getDeclaredExceptionAccess().getNameQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__IdentifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getIdentifierIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getVariableDeclaratorAccess().getIdentifierIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__BracketsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getBracketsBracketsParserRuleCall_2_0()); }
	ruleBrackets{ after(grammarAccess.getVariableDeclaratorAccess().getBracketsBracketsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__ExpressionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getVariableDeclaratorAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceTypeWithBrackets__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getTypeClassifierTypeParserRuleCall_0_0()); }
	ruleClassifierType{ after(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getTypeClassifierTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceTypeWithBrackets__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getTypeClassifierTypeParserRuleCall_1_1_0()); }
	ruleClassifierType{ after(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getTypeClassifierTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceTypeWithBrackets__BracketsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getBracketsBracketsParserRuleCall_2_0()); }
	ruleBrackets{ after(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getBracketsBracketsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeWithBrackets__PrimitivetypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeWithBracketsAccess().getPrimitivetypePrimitiveTypeEnumRuleCall_0_0()); }
	rulePrimitiveType{ after(grammarAccess.getPrimitiveTypeWithBracketsAccess().getPrimitivetypePrimitiveTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeWithBrackets__BracketsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeWithBracketsAccess().getBracketsBracketsParserRuleCall_1_0()); }
	ruleBrackets{ after(grammarAccess.getPrimitiveTypeWithBracketsAccess().getBracketsBracketsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ClassifierType__IdentifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTypeAccess().getIdentifierIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getClassifierTypeAccess().getIdentifierIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierType__TypeargumentsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTypeAccess().getTypeargumentsTypeArgumentsParserRuleCall_1_0()); }
	ruleTypeArguments{ after(grammarAccess.getClassifierTypeAccess().getTypeargumentsTypeArgumentsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__TypeargumentAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getTypeargumentTypeArgumentParserRuleCall_1_0()); }
	ruleTypeArgument{ after(grammarAccess.getTypeArgumentsAccess().getTypeargumentTypeArgumentParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArguments__TypeargumentAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentsAccess().getTypeargumentTypeArgumentParserRuleCall_2_1_0()); }
	ruleTypeArgument{ after(grammarAccess.getTypeArgumentsAccess().getTypeargumentTypeArgumentParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArgument__TypeAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentAccess().getTypeTypeParserRuleCall_1_0_0()); }
	ruleType{ after(grammarAccess.getTypeArgumentAccess().getTypeTypeParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArgument__WildcardAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentAccess().getWildcardQuestionMarkKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getTypeArgumentAccess().getWildcardQuestionMarkKeyword_1_1_0_0()); }

	'?' 

{ after(grammarAccess.getTypeArgumentAccess().getWildcardQuestionMarkKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getTypeArgumentAccess().getWildcardQuestionMarkKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArgument__ExtendsAssignment_1_1_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentAccess().getExtendsExtendsKeyword_1_1_1_0_0_0()); }
(
{ before(grammarAccess.getTypeArgumentAccess().getExtendsExtendsKeyword_1_1_1_0_0_0()); }

	'extends' 

{ after(grammarAccess.getTypeArgumentAccess().getExtendsExtendsKeyword_1_1_1_0_0_0()); }
)

{ after(grammarAccess.getTypeArgumentAccess().getExtendsExtendsKeyword_1_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArgument__SuperAssignment_1_1_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentAccess().getSuperSuperKeyword_1_1_1_0_1_0()); }
(
{ before(grammarAccess.getTypeArgumentAccess().getSuperSuperKeyword_1_1_1_0_1_0()); }

	'super' 

{ after(grammarAccess.getTypeArgumentAccess().getSuperSuperKeyword_1_1_1_0_1_0()); }
)

{ after(grammarAccess.getTypeArgumentAccess().getSuperSuperKeyword_1_1_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArgument__TypeAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentAccess().getTypeTypeParserRuleCall_1_1_1_1_0()); }
	ruleType{ after(grammarAccess.getTypeArgumentAccess().getTypeTypeParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterDecl__ModifiersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterDeclAccess().getModifiersModifierParserRuleCall_0_0()); }
	ruleModifier{ after(grammarAccess.getFormalParameterDeclAccess().getModifiersModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterDecl__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterDeclAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getFormalParameterDeclAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterDecl__VarargsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterDeclAccess().getVarargsFullStopFullStopFullStopKeyword_2_0()); }
(
{ before(grammarAccess.getFormalParameterDeclAccess().getVarargsFullStopFullStopFullStopKeyword_2_0()); }

	'...' 

{ after(grammarAccess.getFormalParameterDeclAccess().getVarargsFullStopFullStopFullStopKeyword_2_0()); }
)

{ after(grammarAccess.getFormalParameterDeclAccess().getVarargsFullStopFullStopFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterDecl__IdentifierAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterDeclAccess().getIdentifierIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getFormalParameterDeclAccess().getIdentifierIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorBody__BlockstatementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorBodyAccess().getBlockstatementBlockStatementParserRuleCall_2_0()); }
	ruleBlockStatement{ after(grammarAccess.getConstructorBodyAccess().getBlockstatementBlockStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotations__AnnotationAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationsAccess().getAnnotationAnnotationParserRuleCall_0()); }
	ruleAnnotation{ after(grammarAccess.getAnnotationsAccess().getAnnotationAnnotationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__AnnotationnameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getAnnotationnameAnnotationNameParserRuleCall_2_0()); }
	ruleAnnotationName{ after(grammarAccess.getAnnotationAccess().getAnnotationnameAnnotationNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__ElementvaluepairsAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getElementvaluepairsElementValuePairsParserRuleCall_3_1_0_0()); }
	ruleElementValuePairs{ after(grammarAccess.getAnnotationAccess().getElementvaluepairsElementValuePairsParserRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__ElementvalueAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getElementvalueElementValueParserRuleCall_3_1_1_0()); }
	ruleElementValue{ after(grammarAccess.getAnnotationAccess().getElementvalueElementValueParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValuePairs__ElementvaluepairAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValuePairsAccess().getElementvaluepairElementValuePairParserRuleCall_0_0()); }
	ruleElementValuePair{ after(grammarAccess.getElementValuePairsAccess().getElementvaluepairElementValuePairParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValuePairs__ElementvaluepairAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValuePairsAccess().getElementvaluepairElementValuePairParserRuleCall_1_1_0()); }
	ruleElementValuePair{ after(grammarAccess.getElementValuePairsAccess().getElementvaluepairElementValuePairParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValuePair__IdentifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValuePairAccess().getIdentifierIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getElementValuePairAccess().getIdentifierIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValuePair__ElementvalueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValuePairAccess().getElementvalueElementValueParserRuleCall_2_0()); }
	ruleElementValue{ after(grammarAccess.getElementValuePairAccess().getElementvalueElementValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValueArrayInitializer__ElementvalueAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValueArrayInitializerAccess().getElementvalueElementValueParserRuleCall_2_0_0()); }
	ruleElementValue{ after(grammarAccess.getElementValueArrayInitializerAccess().getElementvalueElementValueParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementValueArrayInitializer__ElementvalueAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementValueArrayInitializerAccess().getElementvalueElementValueParserRuleCall_2_1_1_0()); }
	ruleElementValue{ after(grammarAccess.getElementValueArrayInitializerAccess().getElementvalueElementValueParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeDeclaration__IdentifierAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeDeclarationAccess().getIdentifierIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAnnotationTypeDeclarationAccess().getIdentifierIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeDeclaration__AnnotationtypeelementdeclarationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeDeclarationAccess().getAnnotationtypeelementdeclarationAnnotationTypeElementDeclarationParserRuleCall_4_0()); }
	ruleAnnotationTypeElementDeclaration{ after(grammarAccess.getAnnotationTypeDeclarationAccess().getAnnotationtypeelementdeclarationAnnotationTypeElementDeclarationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeElementDeclaration__ModifiersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeElementDeclarationAccess().getModifiersModifierParserRuleCall_0_0()); }
	ruleModifier{ after(grammarAccess.getAnnotationTypeElementDeclarationAccess().getModifiersModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeElementDeclaration__AnnotationtypeelementrestAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeElementDeclarationAccess().getAnnotationtypeelementrestAnnotationTypeElementRestParserRuleCall_1_0()); }
	ruleAnnotationTypeElementRest{ after(grammarAccess.getAnnotationTypeElementDeclarationAccess().getAnnotationtypeelementrestAnnotationTypeElementRestParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMethodOrConstantRest__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMethodOrConstantRestAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getAnnotationMethodOrConstantRestAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMethodOrConstantRest__MethodAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMethodOrConstantRestAccess().getMethodAnnotationMethodRestParserRuleCall_1_0_0()); }
	ruleAnnotationMethodRest{ after(grammarAccess.getAnnotationMethodOrConstantRestAccess().getMethodAnnotationMethodRestParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMethodOrConstantRest__ConstantAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMethodOrConstantRestAccess().getConstantAnnotationConstantRestParserRuleCall_1_1_0()); }
	ruleAnnotationConstantRest{ after(grammarAccess.getAnnotationMethodOrConstantRestAccess().getConstantAnnotationConstantRestParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMethodRest__IdentifierAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMethodRestAccess().getIdentifierIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getAnnotationMethodRestAccess().getIdentifierIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMethodRest__DefaultvalueAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMethodRestAccess().getDefaultvalueDefaultValueParserRuleCall_1_3_0()); }
	ruleDefaultValue{ after(grammarAccess.getAnnotationMethodRestAccess().getDefaultvalueDefaultValueParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationConstantRest__VariabledeclaratorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationConstantRestAccess().getVariabledeclaratorVariableDeclaratorParserRuleCall_0_0()); }
	ruleVariableDeclarator{ after(grammarAccess.getAnnotationConstantRestAccess().getVariabledeclaratorVariableDeclaratorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationConstantRest__VariabledeclaratorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationConstantRestAccess().getVariabledeclaratorVariableDeclaratorParserRuleCall_1_1_0()); }
	ruleVariableDeclarator{ after(grammarAccess.getAnnotationConstantRestAccess().getVariabledeclaratorVariableDeclaratorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__ElementvalueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getElementvalueElementValueParserRuleCall_1_0()); }
	ruleElementValue{ after(grammarAccess.getDefaultValueAccess().getElementvalueElementValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__BlockstatementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlockstatementBlockStatementParserRuleCall_2_0()); }
	ruleBlockStatement{ after(grammarAccess.getBlockAccess().getBlockstatementBlockStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__TypeForVariableDeclarationAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getTypeForVariableDeclarationValidIDParserRuleCall_0_1_0_0()); }
	ruleValidID{ after(grammarAccess.getAssignmentAccess().getTypeForVariableDeclarationValidIDParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__FeatureAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getFeatureFeatureCallIDParserRuleCall_0_2_0()); }
	ruleFeatureCallID{ after(grammarAccess.getAssignmentAccess().getFeatureFeatureCallIDParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ValueAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getValueAssignmentParserRuleCall_0_4_0()); }
	ruleAssignment{ after(grammarAccess.getAssignmentAccess().getValueAssignmentParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__FeatureAssignment_1_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getFeatureOpMultiAssignParserRuleCall_1_1_0_0_1_0()); }
	ruleOpMultiAssign{ after(grammarAccess.getAssignmentAccess().getFeatureOpMultiAssignParserRuleCall_1_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__RightOperandAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightOperandAssignmentParserRuleCall_1_1_1_0()); }
	ruleAssignment{ after(grammarAccess.getAssignmentAccess().getRightOperandAssignmentParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getFeatureOpOrParserRuleCall_1_0_0_1_0()); }
	ruleOpOr{ after(grammarAccess.getOrExpressionAccess().getFeatureOpOrParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightOperandAndExpressionParserRuleCall_1_1_0()); }
	ruleAndExpression{ after(grammarAccess.getOrExpressionAccess().getRightOperandAndExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getFeatureOpAndParserRuleCall_1_0_0_1_0()); }
	ruleOpAnd{ after(grammarAccess.getAndExpressionAccess().getFeatureOpAndParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightOperandEqualityExpressionParserRuleCall_1_1_0()); }
	ruleEqualityExpression{ after(grammarAccess.getAndExpressionAccess().getRightOperandEqualityExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getFeatureOpEqualityParserRuleCall_1_0_0_1_0()); }
	ruleOpEquality{ after(grammarAccess.getEqualityExpressionAccess().getFeatureOpEqualityParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getRightOperandRelationalExpressionParserRuleCall_1_1_0()); }
	ruleRelationalExpression{ after(grammarAccess.getEqualityExpressionAccess().getRightOperandRelationalExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__TypeAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getTypeTypeParserRuleCall_1_0_1_0()); }
	ruleType{ after(grammarAccess.getRelationalExpressionAccess().getTypeTypeParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__FeatureAssignment_1_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getFeatureOpCompareParserRuleCall_1_1_0_0_1_0()); }
	ruleOpCompare{ after(grammarAccess.getRelationalExpressionAccess().getFeatureOpCompareParserRuleCall_1_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightOperandAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightOperandOtherOperatorExpressionParserRuleCall_1_1_1_0()); }
	ruleOtherOperatorExpression{ after(grammarAccess.getRelationalExpressionAccess().getRightOperandOtherOperatorExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getFeatureOpOtherParserRuleCall_1_0_0_1_0()); }
	ruleOpOther{ after(grammarAccess.getOtherOperatorExpressionAccess().getFeatureOpOtherParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getRightOperandAdditiveExpressionParserRuleCall_1_1_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getOtherOperatorExpressionAccess().getRightOperandAdditiveExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getFeatureOpAddParserRuleCall_1_0_0_1_0()); }
	ruleOpAdd{ after(grammarAccess.getAdditiveExpressionAccess().getFeatureOpAddParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getRightOperandMultiplicativeExpressionParserRuleCall_1_1_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getRightOperandMultiplicativeExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getFeatureOpMultiParserRuleCall_1_0_0_1_0()); }
	ruleOpMulti{ after(grammarAccess.getMultiplicativeExpressionAccess().getFeatureOpMultiParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightOperandUnaryOperationParserRuleCall_1_1_0()); }
	ruleUnaryOperation{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightOperandUnaryOperationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__FeatureAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getFeatureOpUnaryParserRuleCall_0_1_0()); }
	ruleOpUnary{ after(grammarAccess.getUnaryOperationAccess().getFeatureOpUnaryParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__OperandAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getOperandUnaryOperationParserRuleCall_0_2_0()); }
	ruleUnaryOperation{ after(grammarAccess.getUnaryOperationAccess().getOperandUnaryOperationParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOperation__FeatureAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOperationAccess().getFeatureOpPostfixParserRuleCall_1_0_1_0()); }
	ruleOpPostfix{ after(grammarAccess.getPostfixOperationAccess().getFeatureOpPostfixParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__FeatureAssignment_1_0_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getFeatureFeatureCallIDParserRuleCall_1_0_0_0_2_0()); }
	ruleFeatureCallID{ after(grammarAccess.getMemberFeatureCallAccess().getFeatureFeatureCallIDParserRuleCall_1_0_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__ValueAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getValueAssignmentParserRuleCall_1_0_1_0()); }
	ruleAssignment{ after(grammarAccess.getMemberFeatureCallAccess().getValueAssignmentParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__NullSafeAssignment_1_1_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0()); }
(
{ before(grammarAccess.getMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0()); }

	'?.' 

{ after(grammarAccess.getMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0()); }
)

{ after(grammarAccess.getMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__ExplicitStaticAssignment_1_1_0_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0()); }
(
{ before(grammarAccess.getMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0()); }

	'::' 

{ after(grammarAccess.getMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0()); }
)

{ after(grammarAccess.getMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__TypeArgumentsAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__TypeArgumentsAssignment_1_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__FeatureAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getFeatureIdOrSuperParserRuleCall_1_1_2_0()); }
	ruleIdOrSuper{ after(grammarAccess.getMemberFeatureCallAccess().getFeatureIdOrSuperParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__ExplicitOperationCallAssignment_1_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0()); }
(
{ before(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0()); }

	'(' 

{ after(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0()); }
)

{ after(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsShortClosureParserRuleCall_1_1_3_1_0_0()); }
	ruleShortClosure{ after(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsShortClosureParserRuleCall_1_1_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsExpressionParserRuleCall_1_1_3_1_1_0_0()); }
	ruleExpression{ after(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsExpressionParserRuleCall_1_1_3_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsExpressionParserRuleCall_1_1_3_1_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsExpressionParserRuleCall_1_1_3_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberFeatureCall__MemberCallArgumentsAssignment_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsClosureParserRuleCall_1_1_4_0()); }
	ruleClosure{ after(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsClosureParserRuleCall_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisExpression__ExprAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisExpressionAccess().getExprParenthesizedExpressionParserRuleCall_1_0_0()); }
	ruleParenthesizedExpression{ after(grammarAccess.getParenthesisExpressionAccess().getExprParenthesizedExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisExpression__ExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisExpressionAccess().getExprJMLForAllExpressionParserRuleCall_1_1_0()); }
	ruleJMLForAllExpression{ after(grammarAccess.getParenthesisExpressionAccess().getExprJMLForAllExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLOldExpression__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLOldExpressionAccess().getExprParenthesisExpressionParserRuleCall_2_0()); }
	ruleParenthesisExpression{ after(grammarAccess.getJMLOldExpressionAccess().getExprParenthesisExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLFreshExpression__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLFreshExpressionAccess().getExprParenthesisExpressionParserRuleCall_2_0()); }
	ruleParenthesisExpression{ after(grammarAccess.getJMLFreshExpressionAccess().getExprParenthesisExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__InitExpressionsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getInitExpressionsVarDeclParserRuleCall_2_0_0()); }
	ruleVarDecl{ after(grammarAccess.getJMLForAllExpressionAccess().getInitExpressionsVarDeclParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__InitExpressionsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getInitExpressionsVarDeclParserRuleCall_2_1_1_0()); }
	ruleVarDecl{ after(grammarAccess.getJMLForAllExpressionAccess().getInitExpressionsVarDeclParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getExpressionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getJMLForAllExpressionAccess().getExpressionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__UpdateExpressionsAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getUpdateExpressionsExpressionParserRuleCall_6_0_0()); }
	ruleExpression{ after(grammarAccess.getJMLForAllExpressionAccess().getUpdateExpressionsExpressionParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JMLForAllExpression__UpdateExpressionsAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJMLForAllExpressionAccess().getUpdateExpressionsExpressionParserRuleCall_6_1_1_0()); }
	ruleExpression{ after(grammarAccess.getJMLForAllExpressionAccess().getUpdateExpressionsExpressionParserRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__TypeAssignment_0_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getTypeTypeParserRuleCall_0_0_0_0_0()); }
	ruleType{ after(grammarAccess.getVarDeclAccess().getTypeTypeParserRuleCall_0_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__NameAssignment_0_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getNameValidIDParserRuleCall_0_0_0_1_0()); }
	ruleValidID{ after(grammarAccess.getVarDeclAccess().getNameValidIDParserRuleCall_0_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getNameValidIDParserRuleCall_0_1_0()); }
	ruleValidID{ after(grammarAccess.getVarDeclAccess().getNameValidIDParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getRightExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getVarDeclAccess().getRightExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__ElementsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getElementsExpressionParserRuleCall_3_0_0()); }
	ruleExpression{ after(grammarAccess.getSetLiteralAccess().getElementsExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__ElementsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getElementsExpressionParserRuleCall_3_1_1_0()); }
	ruleExpression{ after(grammarAccess.getSetLiteralAccess().getElementsExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__ElementsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getElementsExpressionParserRuleCall_3_0_0()); }
	ruleExpression{ after(grammarAccess.getListLiteralAccess().getElementsExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__ElementsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getElementsExpressionParserRuleCall_3_1_1_0()); }
	ruleExpression{ after(grammarAccess.getListLiteralAccess().getElementsExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__DeclaredFormalParametersAssignment_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__DeclaredFormalParametersAssignment_1_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__ExplicitSyntaxAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }

	'|' 

{ after(grammarAccess.getClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Closure__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureAccess().getExpressionExpressionInClosureParserRuleCall_2_0()); }
	ruleExpressionInClosure{ after(grammarAccess.getClosureAccess().getExpressionExpressionInClosureParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionInClosure__ExpressionsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionInClosureAccess().getExpressionsExpressionOrVarDeclarationParserRuleCall_1_0_0()); }
	ruleExpressionOrVarDeclaration{ after(grammarAccess.getExpressionInClosureAccess().getExpressionsExpressionOrVarDeclarationParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClosure__DeclaredFormalParametersAssignment_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClosure__DeclaredFormalParametersAssignment_0_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClosure__ExplicitSyntaxAssignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0()); }
(
{ before(grammarAccess.getShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0()); }

	'|' 

{ after(grammarAccess.getShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0()); }
)

{ after(grammarAccess.getShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClosure__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShortClosureAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getShortClosureAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__IfAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getIfExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getIfExpressionAccess().getIfExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ThenAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getThenExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getIfExpressionAccess().getThenExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElseAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElseExpressionParserRuleCall_6_1_0()); }
	ruleExpression{ after(grammarAccess.getIfExpressionAccess().getElseExpressionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__DeclaredParamAssignment_2_0_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__SwitchAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionParserRuleCall_2_0_1_0()); }
	ruleExpression{ after(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__DeclaredParamAssignment_2_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__SwitchAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionParserRuleCall_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__CasesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getCasesCasePartParserRuleCall_4_0()); }
	ruleCasePart{ after(grammarAccess.getSwitchExpressionAccess().getCasesCasePartParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__DefaultAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getDefaultExpressionParserRuleCall_5_2_0()); }
	ruleExpression{ after(grammarAccess.getSwitchExpressionAccess().getDefaultExpressionParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__TypeGuardAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__CaseAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getCaseExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getCasePartAccess().getCaseExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__ThenAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getThenExpressionParserRuleCall_3_0_1_0()); }
	ruleExpression{ after(grammarAccess.getCasePartAccess().getThenExpressionParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__DeclaredParamAssignment_0_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__ForExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getForExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getForLoopExpressionAccess().getForExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoopExpression__EachExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopExpressionAccess().getEachExpressionExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getForLoopExpressionAccess().getEachExpressionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__InitExpressionsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getInitExpressionsExpressionOrVarDeclarationParserRuleCall_3_0_0()); }
	ruleExpressionOrVarDeclaration{ after(grammarAccess.getBasicForLoopExpressionAccess().getInitExpressionsExpressionOrVarDeclarationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__InitExpressionsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getInitExpressionsExpressionOrVarDeclarationParserRuleCall_3_1_1_0()); }
	ruleExpressionOrVarDeclaration{ after(grammarAccess.getBasicForLoopExpressionAccess().getInitExpressionsExpressionOrVarDeclarationParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__ExpressionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getExpressionExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getBasicForLoopExpressionAccess().getExpressionExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__UpdateExpressionsAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getUpdateExpressionsExpressionParserRuleCall_7_0_0()); }
	ruleExpression{ after(grammarAccess.getBasicForLoopExpressionAccess().getUpdateExpressionsExpressionParserRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__UpdateExpressionsAssignment_7_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getUpdateExpressionsExpressionParserRuleCall_7_1_1_0()); }
	ruleExpression{ after(grammarAccess.getBasicForLoopExpressionAccess().getUpdateExpressionsExpressionParserRuleCall_7_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicForLoopExpression__EachExpressionAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicForLoopExpressionAccess().getEachExpressionExpressionParserRuleCall_9_0()); }
	ruleExpression{ after(grammarAccess.getBasicForLoopExpressionAccess().getEachExpressionExpressionParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__PredicateAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileExpressionAccess().getPredicateExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getWhileExpressionAccess().getPredicateExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__BodyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileExpressionAccess().getBodyExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getWhileExpressionAccess().getBodyExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileExpression__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getBodyExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getDoWhileExpressionAccess().getBodyExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileExpression__PredicateAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileExpressionAccess().getPredicateExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getDoWhileExpressionAccess().getPredicateExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__ExpressionsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getExpressionsExpressionOrVarDeclarationParserRuleCall_2_0_0()); }
	ruleExpressionOrVarDeclaration{ after(grammarAccess.getBlockExpressionAccess().getExpressionsExpressionOrVarDeclarationParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__ExpressionsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockExpressionAccess().getExpressionsExpressionOrVarDeclarationParserRuleCall_2_1_1_0()); }
	ruleExpressionOrVarDeclaration{ after(grammarAccess.getBlockExpressionAccess().getExpressionsExpressionOrVarDeclarationParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmFormalParameter__ParameterTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getParameterTypeValidIDParserRuleCall_0_0()); }
	ruleValidID{ after(grammarAccess.getJvmFormalParameterAccess().getParameterTypeValidIDParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmFormalParameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FullJvmFormalParameter__ParameterTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeValidIDParserRuleCall_0_0()); }
	ruleValidID{ after(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeValidIDParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FullJvmFormalParameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__TypeArgumentsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__TypeArgumentsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__FeatureAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getFeatureIdOrSuperParserRuleCall_2_0()); }
	ruleIdOrSuper{ after(grammarAccess.getFeatureCallAccess().getFeatureIdOrSuperParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__ExplicitOperationCallAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0()); }
(
{ before(grammarAccess.getFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0()); }

	'(' 

{ after(grammarAccess.getFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0()); }
)

{ after(grammarAccess.getFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__FeatureCallArgumentsAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsShortClosureParserRuleCall_3_1_0_0()); }
	ruleShortClosure{ after(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsShortClosureParserRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__FeatureCallArgumentsAssignment_3_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsExpressionParserRuleCall_3_1_1_0_0()); }
	ruleExpression{ after(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsExpressionParserRuleCall_3_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__FeatureCallArgumentsAssignment_3_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsExpressionParserRuleCall_3_1_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsExpressionParserRuleCall_3_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__FeatureCallArgumentsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsClosureParserRuleCall_4_0()); }
	ruleClosure{ after(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsClosureParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__ConstructorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getConstructorQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getConstructorCallAccess().getConstructorQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__TypeArgumentsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__TypeArgumentsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__ExplicitConstructorCallAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0()); }
(
{ before(grammarAccess.getConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0()); }

	'(' 

{ after(grammarAccess.getConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0()); }
)

{ after(grammarAccess.getConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__ArgumentsAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getArgumentsShortClosureParserRuleCall_4_1_0_0()); }
	ruleShortClosure{ after(grammarAccess.getConstructorCallAccess().getArgumentsShortClosureParserRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__ArgumentsAssignment_4_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getArgumentsExpressionParserRuleCall_4_1_1_0_0()); }
	ruleExpression{ after(grammarAccess.getConstructorCallAccess().getArgumentsExpressionParserRuleCall_4_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__ArgumentsAssignment_4_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getArgumentsExpressionParserRuleCall_4_1_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getConstructorCallAccess().getArgumentsExpressionParserRuleCall_4_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCall__ArgumentsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorCallAccess().getArgumentsClosureParserRuleCall_5_0()); }
	ruleClosure{ after(grammarAccess.getConstructorCallAccess().getArgumentsClosureParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__IsTrueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
(
{ before(grammarAccess.getBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }

	'true' 

{ after(grammarAccess.getBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
)

{ after(grammarAccess.getBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); }
	ruleNumber{ after(grammarAccess.getNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CharLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharLiteralAccess().getValueCHARTerminalRuleCall_1_0()); }
	RULE_CHAR{ after(grammarAccess.getCharLiteralAccess().getValueCHARTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getThrowExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getReturnExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchFinallyExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchFinallyExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getTryCatchFinallyExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchFinallyExpression__CatchClausesAssignment_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchFinallyExpressionAccess().getCatchClausesCatchClauseParserRuleCall_3_0_0_0()); }
	ruleCatchClause{ after(grammarAccess.getTryCatchFinallyExpressionAccess().getCatchClausesCatchClauseParserRuleCall_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchFinallyExpression__FinallyExpressionAssignment_3_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchFinallyExpressionAccess().getFinallyExpressionExpressionParserRuleCall_3_0_1_1_0()); }
	ruleExpression{ after(grammarAccess.getTryCatchFinallyExpressionAccess().getFinallyExpressionExpressionParserRuleCall_3_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryCatchFinallyExpression__FinallyExpressionAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryCatchFinallyExpressionAccess().getFinallyExpressionExpressionParserRuleCall_3_1_1_0()); }
	ruleExpression{ after(grammarAccess.getTryCatchFinallyExpressionAccess().getFinallyExpressionExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedExpression__ParamAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedExpressionAccess().getParamExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getSynchronizedExpressionAccess().getParamExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedExpression__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynchronizedExpressionAccess().getExpressionExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getSynchronizedExpressionAccess().getExpressionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClause__DeclaredParamAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); }
	ruleFullJvmFormalParameter{ after(grammarAccess.getCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClause__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchClauseAccess().getExpressionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getCatchClauseAccess().getExpressionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__ParamTypesAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__ParamTypesAssignment_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__ReturnTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__TypeAssignment_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0()); }
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeValidIDParserRuleCall_1_4_1_0_1()); }
	ruleValidID{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeValidIDParserRuleCall_1_4_1_0_1()); }
)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_4_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0()); }
	ruleJvmUpperBound{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0()); }
	ruleJvmUpperBoundAnded{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0()); }
	ruleJvmLowerBound{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0()); }
	ruleJvmLowerBoundAnded{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBound__TypeReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBoundAnded__TypeReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBound__TypeReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBoundAnded__TypeReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__XImportDeclaration__StaticAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }
(
{ before(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }

	'static' 

{ after(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }
)

{ after(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ExtensionAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }

	'extension' 

{ after(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ImportedTypeAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); }
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameInStaticImportParserRuleCall_1_0_2_0_1()); }
	ruleQualifiedNameInStaticImport{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameInStaticImportParserRuleCall_1_0_2_0_1()); }
)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__WildcardAssignment_1_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0()); }
(
{ before(grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0()); }

	'*' 

{ after(grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0()); }
)

{ after(grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__MemberNameAssignment_1_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0()); }
	ruleValidID{ after(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ImportedTypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); }
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameParserRuleCall_1_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameParserRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ImportedNamespaceAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_HEX : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F'|'_')+ ('#' (('b'|'B') ('i'|'I')|('l'|'L')))?;

RULE_INT : '0'..'9' ('0'..'9'|'_')*;

RULE_DECIMAL : RULE_INT (('e'|'E') ('+'|'-')? RULE_INT)? (('b'|'B') ('i'|'I'|'d'|'D')|('l'|'L'|'d'|'D'|'f'|'F'))?;

RULE_ML_COMMENT : '/*' ~('@') ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~('@') ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_CHAR : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\''))) '\'';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'$'|'_') ('a'..'z'|'A'..'Z'|'$'|'_'|'0'..'9')*;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


