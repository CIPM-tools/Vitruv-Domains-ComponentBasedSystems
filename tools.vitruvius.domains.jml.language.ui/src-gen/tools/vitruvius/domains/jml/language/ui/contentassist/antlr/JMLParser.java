/*
 * generated by Xtext
 */
package tools.vitruvius.domains.jml.language.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import tools.vitruvius.domains.jml.language.services.JMLGrammarAccess;

public class JMLParser extends AbstractContentAssistParser {
	
	@Inject
	private JMLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected tools.vitruvius.domains.jml.language.ui.contentassist.antlr.internal.InternalJMLParser createParser() {
		tools.vitruvius.domains.jml.language.ui.contentassist.antlr.internal.InternalJMLParser result = new tools.vitruvius.domains.jml.language.ui.contentassist.antlr.internal.InternalJMLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getClassOrInterfaceDeclarationAccess().getAlternatives(), "rule__ClassOrInterfaceDeclaration__Alternatives");
					put(grammarAccess.getModifierAccess().getAlternatives(), "rule__Modifier__Alternatives");
					put(grammarAccess.getClassDeclarationAccess().getAlternatives(), "rule__ClassDeclaration__Alternatives");
					put(grammarAccess.getInterfaceDeclarationAccess().getAlternatives(), "rule__InterfaceDeclaration__Alternatives");
					put(grammarAccess.getClassBodyDeclarationAccess().getAlternatives(), "rule__ClassBodyDeclaration__Alternatives");
					put(grammarAccess.getJMLSpecifiedElementAccess().getAlternatives(), "rule__JMLSpecifiedElement__Alternatives");
					put(grammarAccess.getJMLMultilineSpecAccess().getAlternatives_1(), "rule__JMLMultilineSpec__Alternatives_1");
					put(grammarAccess.getJMLMultilineSpecAccess().getAlternatives_1_1_1(), "rule__JMLMultilineSpec__Alternatives_1_1_1");
					put(grammarAccess.getJMLSinglelineSpecAccess().getAlternatives(), "rule__JMLSinglelineSpec__Alternatives");
					put(grammarAccess.getJMLSinglelineSpecAccess().getAlternatives_1_1(), "rule__JMLSinglelineSpec__Alternatives_1_1");
					put(grammarAccess.getJMLExpressionHavingAccess().getAlternatives(), "rule__JMLExpressionHaving__Alternatives");
					put(grammarAccess.getJMLMethodSpecificationWithModifierAccess().getAlternatives(), "rule__JMLMethodSpecificationWithModifier__Alternatives");
					put(grammarAccess.getJMLMethodSpecificationAccess().getAlternatives(), "rule__JMLMethodSpecification__Alternatives");
					put(grammarAccess.getJMLMethodBehaviorAccess().getAlternatives(), "rule__JMLMethodBehavior__Alternatives");
					put(grammarAccess.getJMLMethodExpressionAccess().getAlternatives_0(), "rule__JMLMethodExpression__Alternatives_0");
					put(grammarAccess.getJMLSpecificationOnlyElementAccess().getAlternatives(), "rule__JMLSpecificationOnlyElement__Alternatives");
					put(grammarAccess.getJMLTypeExpressionAccess().getAlternatives_0(), "rule__JMLTypeExpression__Alternatives_0");
					put(grammarAccess.getMemberDeclWithModifierAccess().getAlternatives(), "rule__MemberDeclWithModifier__Alternatives");
					put(grammarAccess.getMemberDeclAccess().getAlternatives(), "rule__MemberDecl__Alternatives");
					put(grammarAccess.getConstructorAccess().getAlternatives_5(), "rule__Constructor__Alternatives_5");
					put(grammarAccess.getMemberDeclarationAccess().getAlternatives_0(), "rule__MemberDeclaration__Alternatives_0");
					put(grammarAccess.getMemberDeclarationAccess().getAlternatives_1(), "rule__MemberDeclaration__Alternatives_1");
					put(grammarAccess.getGenericMethodOrConstructorDeclOldAccess().getAlternatives(), "rule__GenericMethodOrConstructorDeclOld__Alternatives");
					put(grammarAccess.getGenericMethodOrConstructorDeclOldAccess().getAlternatives_0_1(), "rule__GenericMethodOrConstructorDeclOld__Alternatives_0_1");
					put(grammarAccess.getGenericMethodOrConstructorDeclOldAccess().getAlternatives_0_7(), "rule__GenericMethodOrConstructorDeclOld__Alternatives_0_7");
					put(grammarAccess.getGenericMethodOrConstructorDeclAccess().getAlternatives_1(), "rule__GenericMethodOrConstructorDecl__Alternatives_1");
					put(grammarAccess.getGenericMethodOrConstructorDeclAccess().getAlternatives_1_0(), "rule__GenericMethodOrConstructorDecl__Alternatives_1_0");
					put(grammarAccess.getMethodDeclarationAccess().getAlternatives_5(), "rule__MethodDeclaration__Alternatives_5");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getTypeArgumentAccess().getAlternatives_1(), "rule__TypeArgument__Alternatives_1");
					put(grammarAccess.getTypeArgumentAccess().getAlternatives_1_1_1_0(), "rule__TypeArgument__Alternatives_1_1_1_0");
					put(grammarAccess.getModifiableAccess().getAlternatives(), "rule__Modifiable__Alternatives");
					put(grammarAccess.getTypedAccess().getAlternatives(), "rule__Typed__Alternatives");
					put(grammarAccess.getAnnotationAccess().getAlternatives_3_1(), "rule__Annotation__Alternatives_3_1");
					put(grammarAccess.getElementValueAccess().getAlternatives(), "rule__ElementValue__Alternatives");
					put(grammarAccess.getAnnotationTypeElementRestAccess().getAlternatives(), "rule__AnnotationTypeElementRest__Alternatives");
					put(grammarAccess.getAnnotationMethodOrConstantRestAccess().getAlternatives_1(), "rule__AnnotationMethodOrConstantRest__Alternatives_1");
					put(grammarAccess.getBlockStatementAccess().getAlternatives(), "rule__BlockStatement__Alternatives");
					put(grammarAccess.getIdentifierHavingAccess().getAlternatives(), "rule__IdentifierHaving__Alternatives");
					put(grammarAccess.getAssignmentAccess().getAlternatives(), "rule__Assignment__Alternatives");
					put(grammarAccess.getOpMultiAssignAccess().getAlternatives(), "rule__OpMultiAssign__Alternatives");
					put(grammarAccess.getOpEqualityAccess().getAlternatives(), "rule__OpEquality__Alternatives");
					put(grammarAccess.getRelationalExpressionAccess().getAlternatives_1(), "rule__RelationalExpression__Alternatives_1");
					put(grammarAccess.getOpCompareAccess().getAlternatives(), "rule__OpCompare__Alternatives");
					put(grammarAccess.getOpOtherAccess().getAlternatives(), "rule__OpOther__Alternatives");
					put(grammarAccess.getOpOtherAccess().getAlternatives_5_1(), "rule__OpOther__Alternatives_5_1");
					put(grammarAccess.getOpOtherAccess().getAlternatives_6_1(), "rule__OpOther__Alternatives_6_1");
					put(grammarAccess.getOpAddAccess().getAlternatives(), "rule__OpAdd__Alternatives");
					put(grammarAccess.getOpMultiAccess().getAlternatives(), "rule__OpMulti__Alternatives");
					put(grammarAccess.getUnaryOperationAccess().getAlternatives(), "rule__UnaryOperation__Alternatives");
					put(grammarAccess.getOpUnaryAccess().getAlternatives(), "rule__OpUnary__Alternatives");
					put(grammarAccess.getOpPostfixAccess().getAlternatives(), "rule__OpPostfix__Alternatives");
					put(grammarAccess.getMemberFeatureCallAccess().getAlternatives_1(), "rule__MemberFeatureCall__Alternatives_1");
					put(grammarAccess.getMemberFeatureCallAccess().getAlternatives_1_1_0_0_1(), "rule__MemberFeatureCall__Alternatives_1_1_0_0_1");
					put(grammarAccess.getMemberFeatureCallAccess().getAlternatives_1_1_3_1(), "rule__MemberFeatureCall__Alternatives_1_1_3_1");
					put(grammarAccess.getPrimaryExpressionAccess().getAlternatives(), "rule__PrimaryExpression__Alternatives");
					put(grammarAccess.getParenthesisExpressionAccess().getAlternatives_1(), "rule__ParenthesisExpression__Alternatives_1");
					put(grammarAccess.getVarDeclAccess().getAlternatives_0(), "rule__VarDecl__Alternatives_0");
					put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
					put(grammarAccess.getCollectionLiteralAccess().getAlternatives(), "rule__CollectionLiteral__Alternatives");
					put(grammarAccess.getSwitchExpressionAccess().getAlternatives_2(), "rule__SwitchExpression__Alternatives_2");
					put(grammarAccess.getCasePartAccess().getAlternatives_3(), "rule__CasePart__Alternatives_3");
					put(grammarAccess.getFeatureCallAccess().getAlternatives_3_1(), "rule__FeatureCall__Alternatives_3_1");
					put(grammarAccess.getIdOrSuperAccess().getAlternatives(), "rule__IdOrSuper__Alternatives");
					put(grammarAccess.getConstructorCallAccess().getAlternatives_4_1(), "rule__ConstructorCall__Alternatives_4_1");
					put(grammarAccess.getBooleanLiteralAccess().getAlternatives_1(), "rule__BooleanLiteral__Alternatives_1");
					put(grammarAccess.getTryCatchFinallyExpressionAccess().getAlternatives_3(), "rule__TryCatchFinallyExpression__Alternatives_3");
					put(grammarAccess.getNumberAccess().getAlternatives(), "rule__Number__Alternatives");
					put(grammarAccess.getNumberAccess().getAlternatives_1_0(), "rule__Number__Alternatives_1_0");
					put(grammarAccess.getNumberAccess().getAlternatives_1_1_1(), "rule__Number__Alternatives_1_1_1");
					put(grammarAccess.getJMLMultilineSpecCommentEndAccess().getAlternatives(), "rule__JMLMultilineSpecCommentEnd__Alternatives");
					put(grammarAccess.getJvmTypeReferenceAccess().getAlternatives(), "rule__JvmTypeReference__Alternatives");
					put(grammarAccess.getJvmArgumentTypeReferenceAccess().getAlternatives(), "rule__JvmArgumentTypeReference__Alternatives");
					put(grammarAccess.getJvmWildcardTypeReferenceAccess().getAlternatives_2(), "rule__JvmWildcardTypeReference__Alternatives_2");
					put(grammarAccess.getXImportDeclarationAccess().getAlternatives_1(), "rule__XImportDeclaration__Alternatives_1");
					put(grammarAccess.getXImportDeclarationAccess().getAlternatives_1_0_3(), "rule__XImportDeclaration__Alternatives_1_0_3");
					put(grammarAccess.getModifierValueAccess().getAlternatives(), "rule__ModifierValue__Alternatives");
					put(grammarAccess.getVisibilityModifierValueAccess().getAlternatives(), "rule__VisibilityModifierValue__Alternatives");
					put(grammarAccess.getJMLSpecMemberModifierAccess().getAlternatives(), "rule__JMLSpecMemberModifier__Alternatives");
					put(grammarAccess.getPrimitiveTypeAccess().getAlternatives(), "rule__PrimitiveType__Alternatives");
					put(grammarAccess.getCompilationUnitAccess().getGroup(), "rule__CompilationUnit__Group__0");
					put(grammarAccess.getPackageDeclarationAccess().getGroup(), "rule__PackageDeclaration__Group__0");
					put(grammarAccess.getImportDeclarationAccess().getGroup(), "rule__ImportDeclaration__Group__0");
					put(grammarAccess.getImportDeclarationAccess().getGroup_3(), "rule__ImportDeclaration__Group_3__0");
					put(grammarAccess.getClassifierDeclarationWithModifierAccess().getGroup(), "rule__ClassifierDeclarationWithModifier__Group__0");
					put(grammarAccess.getNormalClassDeclarationAccess().getGroup(), "rule__NormalClassDeclaration__Group__0");
					put(grammarAccess.getNormalClassDeclarationAccess().getGroup_3(), "rule__NormalClassDeclaration__Group_3__0");
					put(grammarAccess.getNormalClassDeclarationAccess().getGroup_4(), "rule__NormalClassDeclaration__Group_4__0");
					put(grammarAccess.getNormalClassDeclarationAccess().getGroup_4_2(), "rule__NormalClassDeclaration__Group_4_2__0");
					put(grammarAccess.getTypeParametersAccess().getGroup(), "rule__TypeParameters__Group__0");
					put(grammarAccess.getTypeParametersAccess().getGroup_2(), "rule__TypeParameters__Group_2__0");
					put(grammarAccess.getTypeParameterAccess().getGroup(), "rule__TypeParameter__Group__0");
					put(grammarAccess.getTypeParameterAccess().getGroup_2(), "rule__TypeParameter__Group_2__0");
					put(grammarAccess.getTypeBoundAccess().getGroup(), "rule__TypeBound__Group__0");
					put(grammarAccess.getTypeBoundAccess().getGroup_1(), "rule__TypeBound__Group_1__0");
					put(grammarAccess.getEnumDeclarationAccess().getGroup(), "rule__EnumDeclaration__Group__0");
					put(grammarAccess.getEnumDeclarationAccess().getGroup_2(), "rule__EnumDeclaration__Group_2__0");
					put(grammarAccess.getEnumDeclarationAccess().getGroup_2_2(), "rule__EnumDeclaration__Group_2_2__0");
					put(grammarAccess.getEnumConstantsAccess().getGroup(), "rule__EnumConstants__Group__0");
					put(grammarAccess.getEnumConstantsAccess().getGroup_1(), "rule__EnumConstants__Group_1__0");
					put(grammarAccess.getEnumConstantAccess().getGroup(), "rule__EnumConstant__Group__0");
					put(grammarAccess.getEnumConstantAccess().getGroup_1(), "rule__EnumConstant__Group_1__0");
					put(grammarAccess.getEnumConstantAccess().getGroup_1_3(), "rule__EnumConstant__Group_1_3__0");
					put(grammarAccess.getEnumBodyDeclarationsAccess().getGroup(), "rule__EnumBodyDeclarations__Group__0");
					put(grammarAccess.getArgumentsAccess().getGroup(), "rule__Arguments__Group__0");
					put(grammarAccess.getArgumentsAccess().getGroup_3(), "rule__Arguments__Group_3__0");
					put(grammarAccess.getNormalInterfaceDeclarationAccess().getGroup(), "rule__NormalInterfaceDeclaration__Group__0");
					put(grammarAccess.getNormalInterfaceDeclarationAccess().getGroup_3(), "rule__NormalInterfaceDeclaration__Group_3__0");
					put(grammarAccess.getNormalInterfaceDeclarationAccess().getGroup_3_2(), "rule__NormalInterfaceDeclaration__Group_3_2__0");
					put(grammarAccess.getClassBodyDeclarationAccess().getGroup_0(), "rule__ClassBodyDeclaration__Group_0__0");
					put(grammarAccess.getStaticBlockAccess().getGroup(), "rule__StaticBlock__Group__0");
					put(grammarAccess.getJMLMultilineSpecAccess().getGroup(), "rule__JMLMultilineSpec__Group__0");
					put(grammarAccess.getJMLMultilineSpecAccess().getGroup_1_0(), "rule__JMLMultilineSpec__Group_1_0__0");
					put(grammarAccess.getJMLMultilineSpecAccess().getGroup_1_1(), "rule__JMLMultilineSpec__Group_1_1__0");
					put(grammarAccess.getJMLMultilineSpecAccess().getGroup_1_1_1_0(), "rule__JMLMultilineSpec__Group_1_1_1_0__0");
					put(grammarAccess.getJMLMultilineSpecAccess().getGroup_1_1_1_1(), "rule__JMLMultilineSpec__Group_1_1_1_1__0");
					put(grammarAccess.getJMLSinglelineSpecAccess().getGroup_1(), "rule__JMLSinglelineSpec__Group_1__0");
					put(grammarAccess.getJMLSinglelineSpecAccess().getGroup_1_1_1(), "rule__JMLSinglelineSpec__Group_1_1_1__0");
					put(grammarAccess.getJMLSinglelineSpecAccess().getGroup_1_1_1_1(), "rule__JMLSinglelineSpec__Group_1_1_1_1__0");
					put(grammarAccess.getJMLMethodSpecificationWithModifierRegularAccess().getGroup(), "rule__JMLMethodSpecificationWithModifierRegular__Group__0");
					put(grammarAccess.getJMLMethodSpecificationWithModifierExtendedAccess().getGroup(), "rule__JMLMethodSpecificationWithModifierExtended__Group__0");
					put(grammarAccess.getJMLExceptionalBehaviorBlockAccess().getGroup(), "rule__JMLExceptionalBehaviorBlock__Group__0");
					put(grammarAccess.getJMLNormalBehaviorBlockAccess().getGroup(), "rule__JMLNormalBehaviorBlock__Group__0");
					put(grammarAccess.getJMLBehaviorBlockAccess().getGroup(), "rule__JMLBehaviorBlock__Group__0");
					put(grammarAccess.getJMLMethodExpressionAccess().getGroup(), "rule__JMLMethodExpression__Group__0");
					put(grammarAccess.getJMLEnsuresExpressionAccess().getGroup(), "rule__JMLEnsuresExpression__Group__0");
					put(grammarAccess.getJMLRequiresExpressionAccess().getGroup(), "rule__JMLRequiresExpression__Group__0");
					put(grammarAccess.getJMLSpecificationOnlyElementWithModifierAccess().getGroup(), "rule__JMLSpecificationOnlyElementWithModifier__Group__0");
					put(grammarAccess.getJMLModelElementAccess().getGroup(), "rule__JMLModelElement__Group__0");
					put(grammarAccess.getJMLGhostElementAccess().getGroup(), "rule__JMLGhostElement__Group__0");
					put(grammarAccess.getJMLTypeExpressionWithModifierAccess().getGroup(), "rule__JMLTypeExpressionWithModifier__Group__0");
					put(grammarAccess.getJMLTypeExpressionAccess().getGroup(), "rule__JMLTypeExpression__Group__0");
					put(grammarAccess.getJMLInvariantExpressionAccess().getGroup(), "rule__JMLInvariantExpression__Group__0");
					put(grammarAccess.getJMLConstraintExpressionAccess().getGroup(), "rule__JMLConstraintExpression__Group__0");
					put(grammarAccess.getJMLAxiomExpressionAccess().getGroup(), "rule__JMLAxiomExpression__Group__0");
					put(grammarAccess.getMemberDeclWithModifierRegularAccess().getGroup(), "rule__MemberDeclWithModifierRegular__Group__0");
					put(grammarAccess.getMemberDeclWithModifierRegularAccess().getGroup_1(), "rule__MemberDeclWithModifierRegular__Group_1__0");
					put(grammarAccess.getMemberDeclWithModifierSpecAccess().getGroup(), "rule__MemberDeclWithModifierSpec__Group__0");
					put(grammarAccess.getConstructorAccess().getGroup(), "rule__Constructor__Group__0");
					put(grammarAccess.getConstructorAccess().getGroup_2(), "rule__Constructor__Group_2__0");
					put(grammarAccess.getConstructorAccess().getGroup_2_1(), "rule__Constructor__Group_2_1__0");
					put(grammarAccess.getConstructorAccess().getGroup_4(), "rule__Constructor__Group_4__0");
					put(grammarAccess.getConstructorAccess().getGroup_4_2(), "rule__Constructor__Group_4_2__0");
					put(grammarAccess.getMemberDeclarationAccess().getGroup(), "rule__MemberDeclaration__Group__0");
					put(grammarAccess.getGenericMethodOrConstructorDeclOldAccess().getGroup_0(), "rule__GenericMethodOrConstructorDeclOld__Group_0__0");
					put(grammarAccess.getGenericMethodOrConstructorDeclOldAccess().getGroup_0_4(), "rule__GenericMethodOrConstructorDeclOld__Group_0_4__0");
					put(grammarAccess.getGenericMethodOrConstructorDeclOldAccess().getGroup_0_4_1(), "rule__GenericMethodOrConstructorDeclOld__Group_0_4_1__0");
					put(grammarAccess.getGenericMethodOrConstructorDeclOldAccess().getGroup_0_6(), "rule__GenericMethodOrConstructorDeclOld__Group_0_6__0");
					put(grammarAccess.getGenericMethodOrConstructorDeclOldAccess().getGroup_0_6_2(), "rule__GenericMethodOrConstructorDeclOld__Group_0_6_2__0");
					put(grammarAccess.getGenericMethodOrConstructorDeclAccess().getGroup(), "rule__GenericMethodOrConstructorDecl__Group__0");
					put(grammarAccess.getGenericMethodOrConstructorDeclAccess().getGroup_1_0_0(), "rule__GenericMethodOrConstructorDecl__Group_1_0_0__0");
					put(grammarAccess.getGenericMethodOrConstructorDeclAccess().getGroup_1_0_1(), "rule__GenericMethodOrConstructorDecl__Group_1_0_1__0");
					put(grammarAccess.getMethodDeclarationAccess().getGroup(), "rule__MethodDeclaration__Group__0");
					put(grammarAccess.getMethodDeclarationAccess().getGroup_2(), "rule__MethodDeclaration__Group_2__0");
					put(grammarAccess.getMethodDeclarationAccess().getGroup_2_1(), "rule__MethodDeclaration__Group_2_1__0");
					put(grammarAccess.getMethodDeclarationAccess().getGroup_4(), "rule__MethodDeclaration__Group_4__0");
					put(grammarAccess.getMethodDeclarationAccess().getGroup_4_2(), "rule__MethodDeclaration__Group_4_2__0");
					put(grammarAccess.getFieldDeclarationAccess().getGroup(), "rule__FieldDeclaration__Group__0");
					put(grammarAccess.getFieldDeclarationAccess().getGroup_1(), "rule__FieldDeclaration__Group_1__0");
					put(grammarAccess.getVariableDeclaratorAccess().getGroup(), "rule__VariableDeclarator__Group__0");
					put(grammarAccess.getVariableDeclaratorAccess().getGroup_3(), "rule__VariableDeclarator__Group_3__0");
					put(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getGroup(), "rule__ClassOrInterfaceTypeWithBrackets__Group__0");
					put(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getGroup_1(), "rule__ClassOrInterfaceTypeWithBrackets__Group_1__0");
					put(grammarAccess.getPrimitiveTypeWithBracketsAccess().getGroup(), "rule__PrimitiveTypeWithBrackets__Group__0");
					put(grammarAccess.getBracketsAccess().getGroup(), "rule__Brackets__Group__0");
					put(grammarAccess.getClassOrInterfaceTypeAccess().getGroup(), "rule__ClassOrInterfaceType__Group__0");
					put(grammarAccess.getClassOrInterfaceTypeAccess().getGroup_2(), "rule__ClassOrInterfaceType__Group_2__0");
					put(grammarAccess.getClassifierTypeAccess().getGroup(), "rule__ClassifierType__Group__0");
					put(grammarAccess.getTypeArgumentsAccess().getGroup(), "rule__TypeArguments__Group__0");
					put(grammarAccess.getTypeArgumentsAccess().getGroup_2(), "rule__TypeArguments__Group_2__0");
					put(grammarAccess.getTypeArgumentAccess().getGroup(), "rule__TypeArgument__Group__0");
					put(grammarAccess.getTypeArgumentAccess().getGroup_1_1(), "rule__TypeArgument__Group_1_1__0");
					put(grammarAccess.getTypeArgumentAccess().getGroup_1_1_1(), "rule__TypeArgument__Group_1_1_1__0");
					put(grammarAccess.getFormalParameterDeclAccess().getGroup(), "rule__FormalParameterDecl__Group__0");
					put(grammarAccess.getConstructorBodyAccess().getGroup(), "rule__ConstructorBody__Group__0");
					put(grammarAccess.getAnnotationAccess().getGroup(), "rule__Annotation__Group__0");
					put(grammarAccess.getAnnotationAccess().getGroup_3(), "rule__Annotation__Group_3__0");
					put(grammarAccess.getAnnotationNameAccess().getGroup(), "rule__AnnotationName__Group__0");
					put(grammarAccess.getAnnotationNameAccess().getGroup_1(), "rule__AnnotationName__Group_1__0");
					put(grammarAccess.getElementValuePairsAccess().getGroup(), "rule__ElementValuePairs__Group__0");
					put(grammarAccess.getElementValuePairsAccess().getGroup_1(), "rule__ElementValuePairs__Group_1__0");
					put(grammarAccess.getElementValuePairAccess().getGroup(), "rule__ElementValuePair__Group__0");
					put(grammarAccess.getElementValueArrayInitializerAccess().getGroup(), "rule__ElementValueArrayInitializer__Group__0");
					put(grammarAccess.getElementValueArrayInitializerAccess().getGroup_2(), "rule__ElementValueArrayInitializer__Group_2__0");
					put(grammarAccess.getElementValueArrayInitializerAccess().getGroup_2_1(), "rule__ElementValueArrayInitializer__Group_2_1__0");
					put(grammarAccess.getAnnotationTypeDeclarationAccess().getGroup(), "rule__AnnotationTypeDeclaration__Group__0");
					put(grammarAccess.getAnnotationTypeElementDeclarationAccess().getGroup(), "rule__AnnotationTypeElementDeclaration__Group__0");
					put(grammarAccess.getAnnotationTypeElementRestAccess().getGroup_0(), "rule__AnnotationTypeElementRest__Group_0__0");
					put(grammarAccess.getAnnotationTypeElementRestAccess().getGroup_1(), "rule__AnnotationTypeElementRest__Group_1__0");
					put(grammarAccess.getAnnotationTypeElementRestAccess().getGroup_2(), "rule__AnnotationTypeElementRest__Group_2__0");
					put(grammarAccess.getAnnotationTypeElementRestAccess().getGroup_3(), "rule__AnnotationTypeElementRest__Group_3__0");
					put(grammarAccess.getAnnotationTypeElementRestAccess().getGroup_4(), "rule__AnnotationTypeElementRest__Group_4__0");
					put(grammarAccess.getAnnotationMethodOrConstantRestAccess().getGroup(), "rule__AnnotationMethodOrConstantRest__Group__0");
					put(grammarAccess.getAnnotationMethodRestAccess().getGroup(), "rule__AnnotationMethodRest__Group__0");
					put(grammarAccess.getAnnotationMethodRestAccess().getGroup_1(), "rule__AnnotationMethodRest__Group_1__0");
					put(grammarAccess.getAnnotationConstantRestAccess().getGroup(), "rule__AnnotationConstantRest__Group__0");
					put(grammarAccess.getAnnotationConstantRestAccess().getGroup_1(), "rule__AnnotationConstantRest__Group_1__0");
					put(grammarAccess.getDefaultValueAccess().getGroup(), "rule__DefaultValue__Group__0");
					put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
					put(grammarAccess.getBlockStatementAccess().getGroup_1(), "rule__BlockStatement__Group_1__0");
					put(grammarAccess.getAssignmentAccess().getGroup_0(), "rule__Assignment__Group_0__0");
					put(grammarAccess.getAssignmentAccess().getGroup_0_1(), "rule__Assignment__Group_0_1__0");
					put(grammarAccess.getAssignmentAccess().getGroup_0_1_1(), "rule__Assignment__Group_0_1_1__0");
					put(grammarAccess.getAssignmentAccess().getGroup_1(), "rule__Assignment__Group_1__0");
					put(grammarAccess.getAssignmentAccess().getGroup_1_1(), "rule__Assignment__Group_1_1__0");
					put(grammarAccess.getAssignmentAccess().getGroup_1_1_0(), "rule__Assignment__Group_1_1_0__0");
					put(grammarAccess.getAssignmentAccess().getGroup_1_1_0_0(), "rule__Assignment__Group_1_1_0_0__0");
					put(grammarAccess.getOpMultiAssignAccess().getGroup_5(), "rule__OpMultiAssign__Group_5__0");
					put(grammarAccess.getOpMultiAssignAccess().getGroup_6(), "rule__OpMultiAssign__Group_6__0");
					put(grammarAccess.getOrExpressionAccess().getGroup(), "rule__OrExpression__Group__0");
					put(grammarAccess.getOrExpressionAccess().getGroup_1(), "rule__OrExpression__Group_1__0");
					put(grammarAccess.getOrExpressionAccess().getGroup_1_0(), "rule__OrExpression__Group_1_0__0");
					put(grammarAccess.getOrExpressionAccess().getGroup_1_0_0(), "rule__OrExpression__Group_1_0_0__0");
					put(grammarAccess.getAndExpressionAccess().getGroup(), "rule__AndExpression__Group__0");
					put(grammarAccess.getAndExpressionAccess().getGroup_1(), "rule__AndExpression__Group_1__0");
					put(grammarAccess.getAndExpressionAccess().getGroup_1_0(), "rule__AndExpression__Group_1_0__0");
					put(grammarAccess.getAndExpressionAccess().getGroup_1_0_0(), "rule__AndExpression__Group_1_0_0__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup(), "rule__EqualityExpression__Group__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup_1(), "rule__EqualityExpression__Group_1__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup_1_0(), "rule__EqualityExpression__Group_1_0__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup_1_0_0(), "rule__EqualityExpression__Group_1_0_0__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup(), "rule__RelationalExpression__Group__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1_0(), "rule__RelationalExpression__Group_1_0__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0(), "rule__RelationalExpression__Group_1_0_0__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0_0(), "rule__RelationalExpression__Group_1_0_0_0__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1_1(), "rule__RelationalExpression__Group_1_1__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1_1_0(), "rule__RelationalExpression__Group_1_1_0__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1_1_0_0(), "rule__RelationalExpression__Group_1_1_0_0__0");
					put(grammarAccess.getOpCompareAccess().getGroup_1(), "rule__OpCompare__Group_1__0");
					put(grammarAccess.getOtherOperatorExpressionAccess().getGroup(), "rule__OtherOperatorExpression__Group__0");
					put(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1(), "rule__OtherOperatorExpression__Group_1__0");
					put(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1_0(), "rule__OtherOperatorExpression__Group_1_0__0");
					put(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1_0_0(), "rule__OtherOperatorExpression__Group_1_0_0__0");
					put(grammarAccess.getOpOtherAccess().getGroup_2(), "rule__OpOther__Group_2__0");
					put(grammarAccess.getOpOtherAccess().getGroup_5(), "rule__OpOther__Group_5__0");
					put(grammarAccess.getOpOtherAccess().getGroup_5_1_0(), "rule__OpOther__Group_5_1_0__0");
					put(grammarAccess.getOpOtherAccess().getGroup_5_1_0_0(), "rule__OpOther__Group_5_1_0_0__0");
					put(grammarAccess.getOpOtherAccess().getGroup_6(), "rule__OpOther__Group_6__0");
					put(grammarAccess.getOpOtherAccess().getGroup_6_1_0(), "rule__OpOther__Group_6_1_0__0");
					put(grammarAccess.getOpOtherAccess().getGroup_6_1_0_0(), "rule__OpOther__Group_6_1_0_0__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup(), "rule__AdditiveExpression__Group__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_1(), "rule__AdditiveExpression__Group_1__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0(), "rule__AdditiveExpression__Group_1_0__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0_0(), "rule__AdditiveExpression__Group_1_0_0__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup(), "rule__MultiplicativeExpression__Group__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1(), "rule__MultiplicativeExpression__Group_1__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0(), "rule__MultiplicativeExpression__Group_1_0__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0_0(), "rule__MultiplicativeExpression__Group_1_0_0__0");
					put(grammarAccess.getUnaryOperationAccess().getGroup_0(), "rule__UnaryOperation__Group_0__0");
					put(grammarAccess.getPostfixOperationAccess().getGroup(), "rule__PostfixOperation__Group__0");
					put(grammarAccess.getPostfixOperationAccess().getGroup_1(), "rule__PostfixOperation__Group_1__0");
					put(grammarAccess.getPostfixOperationAccess().getGroup_1_0(), "rule__PostfixOperation__Group_1_0__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup(), "rule__MemberFeatureCall__Group__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_0(), "rule__MemberFeatureCall__Group_1_0__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_0_0(), "rule__MemberFeatureCall__Group_1_0_0__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_0_0_0(), "rule__MemberFeatureCall__Group_1_0_0_0__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1(), "rule__MemberFeatureCall__Group_1_1__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_0(), "rule__MemberFeatureCall__Group_1_1_0__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_0_0(), "rule__MemberFeatureCall__Group_1_1_0_0__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_1(), "rule__MemberFeatureCall__Group_1_1_1__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_1_2(), "rule__MemberFeatureCall__Group_1_1_1_2__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_3(), "rule__MemberFeatureCall__Group_1_1_3__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_3_1_1(), "rule__MemberFeatureCall__Group_1_1_3_1_1__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1_3_1_1_1(), "rule__MemberFeatureCall__Group_1_1_3_1_1_1__0");
					put(grammarAccess.getParenthesisExpressionAccess().getGroup(), "rule__ParenthesisExpression__Group__0");
					put(grammarAccess.getJMLOldExpressionAccess().getGroup(), "rule__JMLOldExpression__Group__0");
					put(grammarAccess.getJMLFreshExpressionAccess().getGroup(), "rule__JMLFreshExpression__Group__0");
					put(grammarAccess.getJMLResultExpressionAccess().getGroup(), "rule__JMLResultExpression__Group__0");
					put(grammarAccess.getJMLForAllExpressionAccess().getGroup(), "rule__JMLForAllExpression__Group__0");
					put(grammarAccess.getJMLForAllExpressionAccess().getGroup_2(), "rule__JMLForAllExpression__Group_2__0");
					put(grammarAccess.getJMLForAllExpressionAccess().getGroup_2_1(), "rule__JMLForAllExpression__Group_2_1__0");
					put(grammarAccess.getJMLForAllExpressionAccess().getGroup_6(), "rule__JMLForAllExpression__Group_6__0");
					put(grammarAccess.getJMLForAllExpressionAccess().getGroup_6_1(), "rule__JMLForAllExpression__Group_6_1__0");
					put(grammarAccess.getVarDeclAccess().getGroup(), "rule__VarDecl__Group__0");
					put(grammarAccess.getVarDeclAccess().getGroup_0_0(), "rule__VarDecl__Group_0_0__0");
					put(grammarAccess.getVarDeclAccess().getGroup_0_0_0(), "rule__VarDecl__Group_0_0_0__0");
					put(grammarAccess.getVarDeclAccess().getGroup_1(), "rule__VarDecl__Group_1__0");
					put(grammarAccess.getSetLiteralAccess().getGroup(), "rule__SetLiteral__Group__0");
					put(grammarAccess.getSetLiteralAccess().getGroup_3(), "rule__SetLiteral__Group_3__0");
					put(grammarAccess.getSetLiteralAccess().getGroup_3_1(), "rule__SetLiteral__Group_3_1__0");
					put(grammarAccess.getListLiteralAccess().getGroup(), "rule__ListLiteral__Group__0");
					put(grammarAccess.getListLiteralAccess().getGroup_3(), "rule__ListLiteral__Group_3__0");
					put(grammarAccess.getListLiteralAccess().getGroup_3_1(), "rule__ListLiteral__Group_3_1__0");
					put(grammarAccess.getClosureAccess().getGroup(), "rule__Closure__Group__0");
					put(grammarAccess.getClosureAccess().getGroup_0(), "rule__Closure__Group_0__0");
					put(grammarAccess.getClosureAccess().getGroup_0_0(), "rule__Closure__Group_0_0__0");
					put(grammarAccess.getClosureAccess().getGroup_1(), "rule__Closure__Group_1__0");
					put(grammarAccess.getClosureAccess().getGroup_1_0(), "rule__Closure__Group_1_0__0");
					put(grammarAccess.getClosureAccess().getGroup_1_0_0(), "rule__Closure__Group_1_0_0__0");
					put(grammarAccess.getClosureAccess().getGroup_1_0_0_1(), "rule__Closure__Group_1_0_0_1__0");
					put(grammarAccess.getExpressionInClosureAccess().getGroup(), "rule__ExpressionInClosure__Group__0");
					put(grammarAccess.getExpressionInClosureAccess().getGroup_1(), "rule__ExpressionInClosure__Group_1__0");
					put(grammarAccess.getShortClosureAccess().getGroup(), "rule__ShortClosure__Group__0");
					put(grammarAccess.getShortClosureAccess().getGroup_0(), "rule__ShortClosure__Group_0__0");
					put(grammarAccess.getShortClosureAccess().getGroup_0_0(), "rule__ShortClosure__Group_0_0__0");
					put(grammarAccess.getShortClosureAccess().getGroup_0_0_1(), "rule__ShortClosure__Group_0_0_1__0");
					put(grammarAccess.getShortClosureAccess().getGroup_0_0_1_1(), "rule__ShortClosure__Group_0_0_1_1__0");
					put(grammarAccess.getParenthesizedExpressionAccess().getGroup(), "rule__ParenthesizedExpression__Group__0");
					put(grammarAccess.getIfExpressionAccess().getGroup(), "rule__IfExpression__Group__0");
					put(grammarAccess.getIfExpressionAccess().getGroup_6(), "rule__IfExpression__Group_6__0");
					put(grammarAccess.getSwitchExpressionAccess().getGroup(), "rule__SwitchExpression__Group__0");
					put(grammarAccess.getSwitchExpressionAccess().getGroup_2_0(), "rule__SwitchExpression__Group_2_0__0");
					put(grammarAccess.getSwitchExpressionAccess().getGroup_2_0_0(), "rule__SwitchExpression__Group_2_0_0__0");
					put(grammarAccess.getSwitchExpressionAccess().getGroup_2_0_0_0(), "rule__SwitchExpression__Group_2_0_0_0__0");
					put(grammarAccess.getSwitchExpressionAccess().getGroup_2_1(), "rule__SwitchExpression__Group_2_1__0");
					put(grammarAccess.getSwitchExpressionAccess().getGroup_2_1_0(), "rule__SwitchExpression__Group_2_1_0__0");
					put(grammarAccess.getSwitchExpressionAccess().getGroup_2_1_0_0(), "rule__SwitchExpression__Group_2_1_0_0__0");
					put(grammarAccess.getSwitchExpressionAccess().getGroup_5(), "rule__SwitchExpression__Group_5__0");
					put(grammarAccess.getCasePartAccess().getGroup(), "rule__CasePart__Group__0");
					put(grammarAccess.getCasePartAccess().getGroup_2(), "rule__CasePart__Group_2__0");
					put(grammarAccess.getCasePartAccess().getGroup_3_0(), "rule__CasePart__Group_3_0__0");
					put(grammarAccess.getForLoopExpressionAccess().getGroup(), "rule__ForLoopExpression__Group__0");
					put(grammarAccess.getForLoopExpressionAccess().getGroup_0(), "rule__ForLoopExpression__Group_0__0");
					put(grammarAccess.getForLoopExpressionAccess().getGroup_0_0(), "rule__ForLoopExpression__Group_0_0__0");
					put(grammarAccess.getBasicForLoopExpressionAccess().getGroup(), "rule__BasicForLoopExpression__Group__0");
					put(grammarAccess.getBasicForLoopExpressionAccess().getGroup_3(), "rule__BasicForLoopExpression__Group_3__0");
					put(grammarAccess.getBasicForLoopExpressionAccess().getGroup_3_1(), "rule__BasicForLoopExpression__Group_3_1__0");
					put(grammarAccess.getBasicForLoopExpressionAccess().getGroup_7(), "rule__BasicForLoopExpression__Group_7__0");
					put(grammarAccess.getBasicForLoopExpressionAccess().getGroup_7_1(), "rule__BasicForLoopExpression__Group_7_1__0");
					put(grammarAccess.getWhileExpressionAccess().getGroup(), "rule__WhileExpression__Group__0");
					put(grammarAccess.getDoWhileExpressionAccess().getGroup(), "rule__DoWhileExpression__Group__0");
					put(grammarAccess.getBlockExpressionAccess().getGroup(), "rule__BlockExpression__Group__0");
					put(grammarAccess.getBlockExpressionAccess().getGroup_2(), "rule__BlockExpression__Group_2__0");
					put(grammarAccess.getBlockExpressionAccess().getGroup_2_1(), "rule__BlockExpression__Group_2_1__0");
					put(grammarAccess.getJvmFormalParameterAccess().getGroup(), "rule__JvmFormalParameter__Group__0");
					put(grammarAccess.getFullJvmFormalParameterAccess().getGroup(), "rule__FullJvmFormalParameter__Group__0");
					put(grammarAccess.getFeatureCallAccess().getGroup(), "rule__FeatureCall__Group__0");
					put(grammarAccess.getFeatureCallAccess().getGroup_1(), "rule__FeatureCall__Group_1__0");
					put(grammarAccess.getFeatureCallAccess().getGroup_1_2(), "rule__FeatureCall__Group_1_2__0");
					put(grammarAccess.getFeatureCallAccess().getGroup_3(), "rule__FeatureCall__Group_3__0");
					put(grammarAccess.getFeatureCallAccess().getGroup_3_1_1(), "rule__FeatureCall__Group_3_1_1__0");
					put(grammarAccess.getFeatureCallAccess().getGroup_3_1_1_1(), "rule__FeatureCall__Group_3_1_1_1__0");
					put(grammarAccess.getConstructorCallAccess().getGroup(), "rule__ConstructorCall__Group__0");
					put(grammarAccess.getConstructorCallAccess().getGroup_3(), "rule__ConstructorCall__Group_3__0");
					put(grammarAccess.getConstructorCallAccess().getGroup_3_2(), "rule__ConstructorCall__Group_3_2__0");
					put(grammarAccess.getConstructorCallAccess().getGroup_4(), "rule__ConstructorCall__Group_4__0");
					put(grammarAccess.getConstructorCallAccess().getGroup_4_1_1(), "rule__ConstructorCall__Group_4_1_1__0");
					put(grammarAccess.getConstructorCallAccess().getGroup_4_1_1_1(), "rule__ConstructorCall__Group_4_1_1_1__0");
					put(grammarAccess.getBooleanLiteralAccess().getGroup(), "rule__BooleanLiteral__Group__0");
					put(grammarAccess.getNullLiteralAccess().getGroup(), "rule__NullLiteral__Group__0");
					put(grammarAccess.getNumberLiteralAccess().getGroup(), "rule__NumberLiteral__Group__0");
					put(grammarAccess.getStringLiteralAccess().getGroup(), "rule__StringLiteral__Group__0");
					put(grammarAccess.getCharLiteralAccess().getGroup(), "rule__CharLiteral__Group__0");
					put(grammarAccess.getThrowExpressionAccess().getGroup(), "rule__ThrowExpression__Group__0");
					put(grammarAccess.getReturnExpressionAccess().getGroup(), "rule__ReturnExpression__Group__0");
					put(grammarAccess.getTryCatchFinallyExpressionAccess().getGroup(), "rule__TryCatchFinallyExpression__Group__0");
					put(grammarAccess.getTryCatchFinallyExpressionAccess().getGroup_3_0(), "rule__TryCatchFinallyExpression__Group_3_0__0");
					put(grammarAccess.getTryCatchFinallyExpressionAccess().getGroup_3_0_1(), "rule__TryCatchFinallyExpression__Group_3_0_1__0");
					put(grammarAccess.getTryCatchFinallyExpressionAccess().getGroup_3_1(), "rule__TryCatchFinallyExpression__Group_3_1__0");
					put(grammarAccess.getSynchronizedExpressionAccess().getGroup(), "rule__SynchronizedExpression__Group__0");
					put(grammarAccess.getSynchronizedExpressionAccess().getGroup_0(), "rule__SynchronizedExpression__Group_0__0");
					put(grammarAccess.getSynchronizedExpressionAccess().getGroup_0_0(), "rule__SynchronizedExpression__Group_0_0__0");
					put(grammarAccess.getCatchClauseAccess().getGroup(), "rule__CatchClause__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getNumberAccess().getGroup_1(), "rule__Number__Group_1__0");
					put(grammarAccess.getNumberAccess().getGroup_1_1(), "rule__Number__Group_1_1__0");
					put(grammarAccess.getStaticQualifierAccess().getGroup(), "rule__StaticQualifier__Group__0");
					put(grammarAccess.getJvmTypeReferenceAccess().getGroup_0(), "rule__JvmTypeReference__Group_0__0");
					put(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1(), "rule__JvmTypeReference__Group_0_1__0");
					put(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1_0(), "rule__JvmTypeReference__Group_0_1_0__0");
					put(grammarAccess.getArrayBracketsAccess().getGroup(), "rule__ArrayBrackets__Group__0");
					put(grammarAccess.getXFunctionTypeRefAccess().getGroup(), "rule__XFunctionTypeRef__Group__0");
					put(grammarAccess.getXFunctionTypeRefAccess().getGroup_0(), "rule__XFunctionTypeRef__Group_0__0");
					put(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1(), "rule__XFunctionTypeRef__Group_0_1__0");
					put(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1_1(), "rule__XFunctionTypeRef__Group_0_1_1__0");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup(), "rule__JvmParameterizedTypeReference__Group__0");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1(), "rule__JvmParameterizedTypeReference__Group_1__0");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_2(), "rule__JvmParameterizedTypeReference__Group_1_2__0");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4(), "rule__JvmParameterizedTypeReference__Group_1_4__0");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_0(), "rule__JvmParameterizedTypeReference__Group_1_4_0__0");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_0_0(), "rule__JvmParameterizedTypeReference__Group_1_4_0_0__0");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_2(), "rule__JvmParameterizedTypeReference__Group_1_4_2__0");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_2_2(), "rule__JvmParameterizedTypeReference__Group_1_4_2_2__0");
					put(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup(), "rule__JvmWildcardTypeReference__Group__0");
					put(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup_2_0(), "rule__JvmWildcardTypeReference__Group_2_0__0");
					put(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup_2_1(), "rule__JvmWildcardTypeReference__Group_2_1__0");
					put(grammarAccess.getJvmUpperBoundAccess().getGroup(), "rule__JvmUpperBound__Group__0");
					put(grammarAccess.getJvmUpperBoundAndedAccess().getGroup(), "rule__JvmUpperBoundAnded__Group__0");
					put(grammarAccess.getJvmLowerBoundAccess().getGroup(), "rule__JvmLowerBound__Group__0");
					put(grammarAccess.getJvmLowerBoundAndedAccess().getGroup(), "rule__JvmLowerBoundAnded__Group__0");
					put(grammarAccess.getJvmTypeParameterAccess().getGroup(), "rule__JvmTypeParameter__Group__0");
					put(grammarAccess.getJvmTypeParameterAccess().getGroup_1(), "rule__JvmTypeParameter__Group_1__0");
					put(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup(), "rule__QualifiedNameWithWildcard__Group__0");
					put(grammarAccess.getXImportDeclarationAccess().getGroup(), "rule__XImportDeclaration__Group__0");
					put(grammarAccess.getXImportDeclarationAccess().getGroup_1_0(), "rule__XImportDeclaration__Group_1_0__0");
					put(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup(), "rule__QualifiedNameInStaticImport__Group__0");
					put(grammarAccess.getCompilationUnitAccess().getPackagedeclarationAssignment_1(), "rule__CompilationUnit__PackagedeclarationAssignment_1");
					put(grammarAccess.getCompilationUnitAccess().getImportdeclarationAssignment_2(), "rule__CompilationUnit__ImportdeclarationAssignment_2");
					put(grammarAccess.getCompilationUnitAccess().getTypedeclarationAssignment_3(), "rule__CompilationUnit__TypedeclarationAssignment_3");
					put(grammarAccess.getPackageDeclarationAccess().getQualifiednameAssignment_1(), "rule__PackageDeclaration__QualifiednameAssignment_1");
					put(grammarAccess.getImportDeclarationAccess().getStaticAssignment_1(), "rule__ImportDeclaration__StaticAssignment_1");
					put(grammarAccess.getImportDeclarationAccess().getQualifiednameAssignment_2(), "rule__ImportDeclaration__QualifiednameAssignment_2");
					put(grammarAccess.getImportDeclarationAccess().getWildcardAssignment_3_1(), "rule__ImportDeclaration__WildcardAssignment_3_1");
					put(grammarAccess.getClassifierDeclarationWithModifierAccess().getModifiersAssignment_0(), "rule__ClassifierDeclarationWithModifier__ModifiersAssignment_0");
					put(grammarAccess.getClassifierDeclarationWithModifierAccess().getClassOrInterfaceDeclarationAssignment_1(), "rule__ClassifierDeclarationWithModifier__ClassOrInterfaceDeclarationAssignment_1");
					put(grammarAccess.getRegularModifierAccess().getModifierAssignment(), "rule__RegularModifier__ModifierAssignment");
					put(grammarAccess.getNormalClassDeclarationAccess().getIdentifierAssignment_1(), "rule__NormalClassDeclaration__IdentifierAssignment_1");
					put(grammarAccess.getNormalClassDeclarationAccess().getTypeparametersAssignment_2(), "rule__NormalClassDeclaration__TypeparametersAssignment_2");
					put(grammarAccess.getNormalClassDeclarationAccess().getSuperTypeAssignment_3_1(), "rule__NormalClassDeclaration__SuperTypeAssignment_3_1");
					put(grammarAccess.getNormalClassDeclarationAccess().getImplementedTypesAssignment_4_1(), "rule__NormalClassDeclaration__ImplementedTypesAssignment_4_1");
					put(grammarAccess.getNormalClassDeclarationAccess().getImplementedTypesAssignment_4_2_1(), "rule__NormalClassDeclaration__ImplementedTypesAssignment_4_2_1");
					put(grammarAccess.getNormalClassDeclarationAccess().getBodyDeclarationsAssignment_6(), "rule__NormalClassDeclaration__BodyDeclarationsAssignment_6");
					put(grammarAccess.getTypeParametersAccess().getTypeparameterAssignment_1(), "rule__TypeParameters__TypeparameterAssignment_1");
					put(grammarAccess.getTypeParametersAccess().getTypeparameterAssignment_2_1(), "rule__TypeParameters__TypeparameterAssignment_2_1");
					put(grammarAccess.getTypeParameterAccess().getIdentifierAssignment_1(), "rule__TypeParameter__IdentifierAssignment_1");
					put(grammarAccess.getTypeParameterAccess().getTypeboundAssignment_2_1(), "rule__TypeParameter__TypeboundAssignment_2_1");
					put(grammarAccess.getTypeBoundAccess().getTypeAssignment_0(), "rule__TypeBound__TypeAssignment_0");
					put(grammarAccess.getTypeBoundAccess().getTypeAssignment_1_1(), "rule__TypeBound__TypeAssignment_1_1");
					put(grammarAccess.getEnumDeclarationAccess().getIdentifierAssignment_1(), "rule__EnumDeclaration__IdentifierAssignment_1");
					put(grammarAccess.getEnumDeclarationAccess().getImplementedTypesAssignment_2_1(), "rule__EnumDeclaration__ImplementedTypesAssignment_2_1");
					put(grammarAccess.getEnumDeclarationAccess().getImplementedTypesAssignment_2_2_1(), "rule__EnumDeclaration__ImplementedTypesAssignment_2_2_1");
					put(grammarAccess.getEnumDeclarationAccess().getEnumconstantsAssignment_4(), "rule__EnumDeclaration__EnumconstantsAssignment_4");
					put(grammarAccess.getEnumDeclarationAccess().getBodyDeclarationsAssignment_6(), "rule__EnumDeclaration__BodyDeclarationsAssignment_6");
					put(grammarAccess.getEnumConstantsAccess().getEnumconstantAssignment_0(), "rule__EnumConstants__EnumconstantAssignment_0");
					put(grammarAccess.getEnumConstantsAccess().getEnumconstantAssignment_1_1(), "rule__EnumConstants__EnumconstantAssignment_1_1");
					put(grammarAccess.getEnumConstantAccess().getAnnotationsAssignment_1_0(), "rule__EnumConstant__AnnotationsAssignment_1_0");
					put(grammarAccess.getEnumConstantAccess().getIdentifierAssignment_1_1(), "rule__EnumConstant__IdentifierAssignment_1_1");
					put(grammarAccess.getEnumConstantAccess().getArgumentsAssignment_1_2(), "rule__EnumConstant__ArgumentsAssignment_1_2");
					put(grammarAccess.getEnumConstantAccess().getClassbodydeclarationAssignment_1_3_1(), "rule__EnumConstant__ClassbodydeclarationAssignment_1_3_1");
					put(grammarAccess.getEnumBodyDeclarationsAccess().getClassbodydeclarationAssignment_2(), "rule__EnumBodyDeclarations__ClassbodydeclarationAssignment_2");
					put(grammarAccess.getArgumentsAccess().getExpressionsAssignment_2(), "rule__Arguments__ExpressionsAssignment_2");
					put(grammarAccess.getArgumentsAccess().getExpressionsAssignment_3_1(), "rule__Arguments__ExpressionsAssignment_3_1");
					put(grammarAccess.getNormalInterfaceDeclarationAccess().getIdentifierAssignment_1(), "rule__NormalInterfaceDeclaration__IdentifierAssignment_1");
					put(grammarAccess.getNormalInterfaceDeclarationAccess().getTypeparametersAssignment_2(), "rule__NormalInterfaceDeclaration__TypeparametersAssignment_2");
					put(grammarAccess.getNormalInterfaceDeclarationAccess().getImplementedTypesAssignment_3_1(), "rule__NormalInterfaceDeclaration__ImplementedTypesAssignment_3_1");
					put(grammarAccess.getNormalInterfaceDeclarationAccess().getImplementedTypesAssignment_3_2_1(), "rule__NormalInterfaceDeclaration__ImplementedTypesAssignment_3_2_1");
					put(grammarAccess.getNormalInterfaceDeclarationAccess().getBodyDeclarationsAssignment_5(), "rule__NormalInterfaceDeclaration__BodyDeclarationsAssignment_5");
					put(grammarAccess.getStaticBlockAccess().getStaticAssignment_0(), "rule__StaticBlock__StaticAssignment_0");
					put(grammarAccess.getStaticBlockAccess().getBlockAssignment_1(), "rule__StaticBlock__BlockAssignment_1");
					put(grammarAccess.getJMLMultilineSpecAccess().getJmlTypeSpecificationsAssignment_1_0_0(), "rule__JMLMultilineSpec__JmlTypeSpecificationsAssignment_1_0_0");
					put(grammarAccess.getJMLMultilineSpecAccess().getJmlSpecificationsAssignment_1_1_0(), "rule__JMLMultilineSpec__JmlSpecificationsAssignment_1_1_0");
					put(grammarAccess.getJMLMultilineSpecAccess().getModelElementAssignment_1_1_1_0_0(), "rule__JMLMultilineSpec__ModelElementAssignment_1_1_1_0_0");
					put(grammarAccess.getJMLMultilineSpecAccess().getElementAssignment_1_1_1_1_1(), "rule__JMLMultilineSpec__ElementAssignment_1_1_1_1_1");
					put(grammarAccess.getJMLSinglelineSpecAccess().getElementAssignment_0(), "rule__JMLSinglelineSpec__ElementAssignment_0");
					put(grammarAccess.getJMLSinglelineSpecAccess().getJmlTypeSpecificationsAssignment_1_1_0(), "rule__JMLSinglelineSpec__JmlTypeSpecificationsAssignment_1_1_0");
					put(grammarAccess.getJMLSinglelineSpecAccess().getJmlSpecificationsAssignment_1_1_1_0(), "rule__JMLSinglelineSpec__JmlSpecificationsAssignment_1_1_1_0");
					put(grammarAccess.getJMLSinglelineSpecAccess().getJmlSpecificationsAssignment_1_1_1_1_1(), "rule__JMLSinglelineSpec__JmlSpecificationsAssignment_1_1_1_1_1");
					put(grammarAccess.getJMLSinglelineSpecAccess().getElementAssignment_1_1_1_2(), "rule__JMLSinglelineSpec__ElementAssignment_1_1_1_2");
					put(grammarAccess.getVisiblityModifierAccess().getModifierAssignment(), "rule__VisiblityModifier__ModifierAssignment");
					put(grammarAccess.getJMLMethodSpecificationWithModifierRegularAccess().getModifierAssignment_0(), "rule__JMLMethodSpecificationWithModifierRegular__ModifierAssignment_0");
					put(grammarAccess.getJMLMethodSpecificationWithModifierRegularAccess().getSpecAssignment_1(), "rule__JMLMethodSpecificationWithModifierRegular__SpecAssignment_1");
					put(grammarAccess.getJMLMethodSpecificationWithModifierExtendedAccess().getModifierAssignment_1(), "rule__JMLMethodSpecificationWithModifierExtended__ModifierAssignment_1");
					put(grammarAccess.getJMLMethodSpecificationWithModifierExtendedAccess().getSpecAssignment_2(), "rule__JMLMethodSpecificationWithModifierExtended__SpecAssignment_2");
					put(grammarAccess.getJMLExceptionalBehaviorBlockAccess().getSpecificationsAssignment_1(), "rule__JMLExceptionalBehaviorBlock__SpecificationsAssignment_1");
					put(grammarAccess.getJMLNormalBehaviorBlockAccess().getSpecificationsAssignment_1(), "rule__JMLNormalBehaviorBlock__SpecificationsAssignment_1");
					put(grammarAccess.getJMLBehaviorBlockAccess().getSpecificationsAssignment_1(), "rule__JMLBehaviorBlock__SpecificationsAssignment_1");
					put(grammarAccess.getJMLEnsuresExpressionAccess().getExprAssignment_1(), "rule__JMLEnsuresExpression__ExprAssignment_1");
					put(grammarAccess.getJMLRequiresExpressionAccess().getExprAssignment_1(), "rule__JMLRequiresExpression__ExprAssignment_1");
					put(grammarAccess.getJMLSpecificationOnlyElementWithModifierAccess().getModifierAssignment_0(), "rule__JMLSpecificationOnlyElementWithModifier__ModifierAssignment_0");
					put(grammarAccess.getJMLSpecificationOnlyElementWithModifierAccess().getElementAssignment_1(), "rule__JMLSpecificationOnlyElementWithModifier__ElementAssignment_1");
					put(grammarAccess.getJMLModelElementAccess().getInstanceAssignment_1(), "rule__JMLModelElement__InstanceAssignment_1");
					put(grammarAccess.getJMLModelElementAccess().getElementAssignment_2(), "rule__JMLModelElement__ElementAssignment_2");
					put(grammarAccess.getJMLGhostElementAccess().getInstanceAssignment_1(), "rule__JMLGhostElement__InstanceAssignment_1");
					put(grammarAccess.getJMLGhostElementAccess().getElementAssignment_2(), "rule__JMLGhostElement__ElementAssignment_2");
					put(grammarAccess.getJMLTypeExpressionWithModifierAccess().getModifierAssignment_0(), "rule__JMLTypeExpressionWithModifier__ModifierAssignment_0");
					put(grammarAccess.getJMLTypeExpressionWithModifierAccess().getSpecAssignment_1(), "rule__JMLTypeExpressionWithModifier__SpecAssignment_1");
					put(grammarAccess.getJMLInvariantExpressionAccess().getExprAssignment_1(), "rule__JMLInvariantExpression__ExprAssignment_1");
					put(grammarAccess.getJMLConstraintExpressionAccess().getExprAssignment_1(), "rule__JMLConstraintExpression__ExprAssignment_1");
					put(grammarAccess.getJMLAxiomExpressionAccess().getExprAssignment_1(), "rule__JMLAxiomExpression__ExprAssignment_1");
					put(grammarAccess.getJMLMemberModifierAccess().getModifierAssignment(), "rule__JMLMemberModifier__ModifierAssignment");
					put(grammarAccess.getMemberDeclWithModifierRegularAccess().getModifiersAssignment_0(), "rule__MemberDeclWithModifierRegular__ModifiersAssignment_0");
					put(grammarAccess.getMemberDeclWithModifierRegularAccess().getJmlModifiersAssignment_1_1(), "rule__MemberDeclWithModifierRegular__JmlModifiersAssignment_1_1");
					put(grammarAccess.getMemberDeclWithModifierRegularAccess().getMemberdeclAssignment_2(), "rule__MemberDeclWithModifierRegular__MemberdeclAssignment_2");
					put(grammarAccess.getMemberDeclWithModifierSpecAccess().getModifiersAssignment_0(), "rule__MemberDeclWithModifierSpec__ModifiersAssignment_0");
					put(grammarAccess.getMemberDeclWithModifierSpecAccess().getJmlModifiersAssignment_1(), "rule__MemberDeclWithModifierSpec__JmlModifiersAssignment_1");
					put(grammarAccess.getMemberDeclWithModifierSpecAccess().getMemberdeclAssignment_2(), "rule__MemberDeclWithModifierSpec__MemberdeclAssignment_2");
					put(grammarAccess.getConstructorAccess().getIdentifierAssignment_0(), "rule__Constructor__IdentifierAssignment_0");
					put(grammarAccess.getConstructorAccess().getParametersAssignment_2_0(), "rule__Constructor__ParametersAssignment_2_0");
					put(grammarAccess.getConstructorAccess().getParametersAssignment_2_1_1(), "rule__Constructor__ParametersAssignment_2_1_1");
					put(grammarAccess.getConstructorAccess().getExceptionsAssignment_4_1(), "rule__Constructor__ExceptionsAssignment_4_1");
					put(grammarAccess.getConstructorAccess().getExceptionsAssignment_4_2_1(), "rule__Constructor__ExceptionsAssignment_4_2_1");
					put(grammarAccess.getConstructorAccess().getConstructorbodyAssignment_5_0(), "rule__Constructor__ConstructorbodyAssignment_5_0");
					put(grammarAccess.getMemberDeclarationAccess().getTypeAssignment_0_0(), "rule__MemberDeclaration__TypeAssignment_0_0");
					put(grammarAccess.getMemberDeclarationAccess().getMethodAssignment_1_0(), "rule__MemberDeclaration__MethodAssignment_1_0");
					put(grammarAccess.getMemberDeclarationAccess().getFieldAssignment_1_1(), "rule__MemberDeclaration__FieldAssignment_1_1");
					put(grammarAccess.getGenericMethodOrConstructorDeclOldAccess().getTypeAssignment_0_1_0(), "rule__GenericMethodOrConstructorDeclOld__TypeAssignment_0_1_0");
					put(grammarAccess.getGenericMethodOrConstructorDeclOldAccess().getIdentifierAssignment_0_2(), "rule__GenericMethodOrConstructorDeclOld__IdentifierAssignment_0_2");
					put(grammarAccess.getGenericMethodOrConstructorDeclOldAccess().getParametersAssignment_0_4_0(), "rule__GenericMethodOrConstructorDeclOld__ParametersAssignment_0_4_0");
					put(grammarAccess.getGenericMethodOrConstructorDeclOldAccess().getParametersAssignment_0_4_1_1(), "rule__GenericMethodOrConstructorDeclOld__ParametersAssignment_0_4_1_1");
					put(grammarAccess.getGenericMethodOrConstructorDeclOldAccess().getExceptionsAssignment_0_6_1(), "rule__GenericMethodOrConstructorDeclOld__ExceptionsAssignment_0_6_1");
					put(grammarAccess.getGenericMethodOrConstructorDeclOldAccess().getExceptionsAssignment_0_6_2_1(), "rule__GenericMethodOrConstructorDeclOld__ExceptionsAssignment_0_6_2_1");
					put(grammarAccess.getGenericMethodOrConstructorDeclOldAccess().getMethodbodyAssignment_0_7_0(), "rule__GenericMethodOrConstructorDeclOld__MethodbodyAssignment_0_7_0");
					put(grammarAccess.getGenericMethodOrConstructorDeclOldAccess().getConstructorAssignment_1(), "rule__GenericMethodOrConstructorDeclOld__ConstructorAssignment_1");
					put(grammarAccess.getGenericMethodOrConstructorDeclAccess().getTypeParametersAssignment_0(), "rule__GenericMethodOrConstructorDecl__TypeParametersAssignment_0");
					put(grammarAccess.getGenericMethodOrConstructorDeclAccess().getTypeAssignment_1_0_0_0(), "rule__GenericMethodOrConstructorDecl__TypeAssignment_1_0_0_0");
					put(grammarAccess.getGenericMethodOrConstructorDeclAccess().getMethodAssignment_1_0_0_1(), "rule__GenericMethodOrConstructorDecl__MethodAssignment_1_0_0_1");
					put(grammarAccess.getGenericMethodOrConstructorDeclAccess().getMethodAssignment_1_0_1_1(), "rule__GenericMethodOrConstructorDecl__MethodAssignment_1_0_1_1");
					put(grammarAccess.getGenericMethodOrConstructorDeclAccess().getConstructorAssignment_1_1(), "rule__GenericMethodOrConstructorDecl__ConstructorAssignment_1_1");
					put(grammarAccess.getMethodDeclarationAccess().getIdentifierAssignment_0(), "rule__MethodDeclaration__IdentifierAssignment_0");
					put(grammarAccess.getMethodDeclarationAccess().getParametersAssignment_2_0(), "rule__MethodDeclaration__ParametersAssignment_2_0");
					put(grammarAccess.getMethodDeclarationAccess().getParametersAssignment_2_1_1(), "rule__MethodDeclaration__ParametersAssignment_2_1_1");
					put(grammarAccess.getMethodDeclarationAccess().getExceptionsAssignment_4_1(), "rule__MethodDeclaration__ExceptionsAssignment_4_1");
					put(grammarAccess.getMethodDeclarationAccess().getExceptionsAssignment_4_2_1(), "rule__MethodDeclaration__ExceptionsAssignment_4_2_1");
					put(grammarAccess.getMethodDeclarationAccess().getMethodbodyAssignment_5_0(), "rule__MethodDeclaration__MethodbodyAssignment_5_0");
					put(grammarAccess.getFieldDeclarationAccess().getVariabledeclaratorAssignment_0(), "rule__FieldDeclaration__VariabledeclaratorAssignment_0");
					put(grammarAccess.getFieldDeclarationAccess().getVariabledeclaratorAssignment_1_1(), "rule__FieldDeclaration__VariabledeclaratorAssignment_1_1");
					put(grammarAccess.getDeclaredExceptionAccess().getNameAssignment(), "rule__DeclaredException__NameAssignment");
					put(grammarAccess.getVariableDeclaratorAccess().getIdentifierAssignment_1(), "rule__VariableDeclarator__IdentifierAssignment_1");
					put(grammarAccess.getVariableDeclaratorAccess().getBracketsAssignment_2(), "rule__VariableDeclarator__BracketsAssignment_2");
					put(grammarAccess.getVariableDeclaratorAccess().getExpressionAssignment_3_1(), "rule__VariableDeclarator__ExpressionAssignment_3_1");
					put(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getTypeAssignment_0(), "rule__ClassOrInterfaceTypeWithBrackets__TypeAssignment_0");
					put(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getTypeAssignment_1_1(), "rule__ClassOrInterfaceTypeWithBrackets__TypeAssignment_1_1");
					put(grammarAccess.getClassOrInterfaceTypeWithBracketsAccess().getBracketsAssignment_2(), "rule__ClassOrInterfaceTypeWithBrackets__BracketsAssignment_2");
					put(grammarAccess.getPrimitiveTypeWithBracketsAccess().getPrimitivetypeAssignment_0(), "rule__PrimitiveTypeWithBrackets__PrimitivetypeAssignment_0");
					put(grammarAccess.getPrimitiveTypeWithBracketsAccess().getBracketsAssignment_1(), "rule__PrimitiveTypeWithBrackets__BracketsAssignment_1");
					put(grammarAccess.getClassOrInterfaceTypeAccess().getTypeAssignment_1(), "rule__ClassOrInterfaceType__TypeAssignment_1");
					put(grammarAccess.getClassOrInterfaceTypeAccess().getTypeAssignment_2_1(), "rule__ClassOrInterfaceType__TypeAssignment_2_1");
					put(grammarAccess.getClassifierTypeAccess().getIdentifierAssignment_0(), "rule__ClassifierType__IdentifierAssignment_0");
					put(grammarAccess.getClassifierTypeAccess().getTypeargumentsAssignment_1(), "rule__ClassifierType__TypeargumentsAssignment_1");
					put(grammarAccess.getTypeArgumentsAccess().getTypeargumentAssignment_1(), "rule__TypeArguments__TypeargumentAssignment_1");
					put(grammarAccess.getTypeArgumentsAccess().getTypeargumentAssignment_2_1(), "rule__TypeArguments__TypeargumentAssignment_2_1");
					put(grammarAccess.getTypeArgumentAccess().getTypeAssignment_1_0(), "rule__TypeArgument__TypeAssignment_1_0");
					put(grammarAccess.getTypeArgumentAccess().getWildcardAssignment_1_1_0(), "rule__TypeArgument__WildcardAssignment_1_1_0");
					put(grammarAccess.getTypeArgumentAccess().getExtendsAssignment_1_1_1_0_0(), "rule__TypeArgument__ExtendsAssignment_1_1_1_0_0");
					put(grammarAccess.getTypeArgumentAccess().getSuperAssignment_1_1_1_0_1(), "rule__TypeArgument__SuperAssignment_1_1_1_0_1");
					put(grammarAccess.getTypeArgumentAccess().getTypeAssignment_1_1_1_1(), "rule__TypeArgument__TypeAssignment_1_1_1_1");
					put(grammarAccess.getFormalParameterDeclAccess().getModifiersAssignment_0(), "rule__FormalParameterDecl__ModifiersAssignment_0");
					put(grammarAccess.getFormalParameterDeclAccess().getTypeAssignment_1(), "rule__FormalParameterDecl__TypeAssignment_1");
					put(grammarAccess.getFormalParameterDeclAccess().getVarargsAssignment_2(), "rule__FormalParameterDecl__VarargsAssignment_2");
					put(grammarAccess.getFormalParameterDeclAccess().getIdentifierAssignment_3(), "rule__FormalParameterDecl__IdentifierAssignment_3");
					put(grammarAccess.getConstructorBodyAccess().getBlockstatementAssignment_2(), "rule__ConstructorBody__BlockstatementAssignment_2");
					put(grammarAccess.getAnnotationsAccess().getAnnotationAssignment(), "rule__Annotations__AnnotationAssignment");
					put(grammarAccess.getAnnotationAccess().getAnnotationnameAssignment_2(), "rule__Annotation__AnnotationnameAssignment_2");
					put(grammarAccess.getAnnotationAccess().getElementvaluepairsAssignment_3_1_0(), "rule__Annotation__ElementvaluepairsAssignment_3_1_0");
					put(grammarAccess.getAnnotationAccess().getElementvalueAssignment_3_1_1(), "rule__Annotation__ElementvalueAssignment_3_1_1");
					put(grammarAccess.getElementValuePairsAccess().getElementvaluepairAssignment_0(), "rule__ElementValuePairs__ElementvaluepairAssignment_0");
					put(grammarAccess.getElementValuePairsAccess().getElementvaluepairAssignment_1_1(), "rule__ElementValuePairs__ElementvaluepairAssignment_1_1");
					put(grammarAccess.getElementValuePairAccess().getIdentifierAssignment_0(), "rule__ElementValuePair__IdentifierAssignment_0");
					put(grammarAccess.getElementValuePairAccess().getElementvalueAssignment_2(), "rule__ElementValuePair__ElementvalueAssignment_2");
					put(grammarAccess.getElementValueArrayInitializerAccess().getElementvalueAssignment_2_0(), "rule__ElementValueArrayInitializer__ElementvalueAssignment_2_0");
					put(grammarAccess.getElementValueArrayInitializerAccess().getElementvalueAssignment_2_1_1(), "rule__ElementValueArrayInitializer__ElementvalueAssignment_2_1_1");
					put(grammarAccess.getAnnotationTypeDeclarationAccess().getIdentifierAssignment_2(), "rule__AnnotationTypeDeclaration__IdentifierAssignment_2");
					put(grammarAccess.getAnnotationTypeDeclarationAccess().getAnnotationtypeelementdeclarationAssignment_4(), "rule__AnnotationTypeDeclaration__AnnotationtypeelementdeclarationAssignment_4");
					put(grammarAccess.getAnnotationTypeElementDeclarationAccess().getModifiersAssignment_0(), "rule__AnnotationTypeElementDeclaration__ModifiersAssignment_0");
					put(grammarAccess.getAnnotationTypeElementDeclarationAccess().getAnnotationtypeelementrestAssignment_1(), "rule__AnnotationTypeElementDeclaration__AnnotationtypeelementrestAssignment_1");
					put(grammarAccess.getAnnotationMethodOrConstantRestAccess().getTypeAssignment_0(), "rule__AnnotationMethodOrConstantRest__TypeAssignment_0");
					put(grammarAccess.getAnnotationMethodOrConstantRestAccess().getMethodAssignment_1_0(), "rule__AnnotationMethodOrConstantRest__MethodAssignment_1_0");
					put(grammarAccess.getAnnotationMethodOrConstantRestAccess().getConstantAssignment_1_1(), "rule__AnnotationMethodOrConstantRest__ConstantAssignment_1_1");
					put(grammarAccess.getAnnotationMethodRestAccess().getIdentifierAssignment_1_0(), "rule__AnnotationMethodRest__IdentifierAssignment_1_0");
					put(grammarAccess.getAnnotationMethodRestAccess().getDefaultvalueAssignment_1_3(), "rule__AnnotationMethodRest__DefaultvalueAssignment_1_3");
					put(grammarAccess.getAnnotationConstantRestAccess().getVariabledeclaratorAssignment_0(), "rule__AnnotationConstantRest__VariabledeclaratorAssignment_0");
					put(grammarAccess.getAnnotationConstantRestAccess().getVariabledeclaratorAssignment_1_1(), "rule__AnnotationConstantRest__VariabledeclaratorAssignment_1_1");
					put(grammarAccess.getDefaultValueAccess().getElementvalueAssignment_1(), "rule__DefaultValue__ElementvalueAssignment_1");
					put(grammarAccess.getBlockAccess().getBlockstatementAssignment_2(), "rule__Block__BlockstatementAssignment_2");
					put(grammarAccess.getAssignmentAccess().getTypeForVariableDeclarationAssignment_0_1_0(), "rule__Assignment__TypeForVariableDeclarationAssignment_0_1_0");
					put(grammarAccess.getAssignmentAccess().getFeatureAssignment_0_2(), "rule__Assignment__FeatureAssignment_0_2");
					put(grammarAccess.getAssignmentAccess().getValueAssignment_0_4(), "rule__Assignment__ValueAssignment_0_4");
					put(grammarAccess.getAssignmentAccess().getFeatureAssignment_1_1_0_0_1(), "rule__Assignment__FeatureAssignment_1_1_0_0_1");
					put(grammarAccess.getAssignmentAccess().getRightOperandAssignment_1_1_1(), "rule__Assignment__RightOperandAssignment_1_1_1");
					put(grammarAccess.getOrExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__OrExpression__FeatureAssignment_1_0_0_1");
					put(grammarAccess.getOrExpressionAccess().getRightOperandAssignment_1_1(), "rule__OrExpression__RightOperandAssignment_1_1");
					put(grammarAccess.getAndExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__AndExpression__FeatureAssignment_1_0_0_1");
					put(grammarAccess.getAndExpressionAccess().getRightOperandAssignment_1_1(), "rule__AndExpression__RightOperandAssignment_1_1");
					put(grammarAccess.getEqualityExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__EqualityExpression__FeatureAssignment_1_0_0_1");
					put(grammarAccess.getEqualityExpressionAccess().getRightOperandAssignment_1_1(), "rule__EqualityExpression__RightOperandAssignment_1_1");
					put(grammarAccess.getRelationalExpressionAccess().getTypeAssignment_1_0_1(), "rule__RelationalExpression__TypeAssignment_1_0_1");
					put(grammarAccess.getRelationalExpressionAccess().getFeatureAssignment_1_1_0_0_1(), "rule__RelationalExpression__FeatureAssignment_1_1_0_0_1");
					put(grammarAccess.getRelationalExpressionAccess().getRightOperandAssignment_1_1_1(), "rule__RelationalExpression__RightOperandAssignment_1_1_1");
					put(grammarAccess.getOtherOperatorExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__OtherOperatorExpression__FeatureAssignment_1_0_0_1");
					put(grammarAccess.getOtherOperatorExpressionAccess().getRightOperandAssignment_1_1(), "rule__OtherOperatorExpression__RightOperandAssignment_1_1");
					put(grammarAccess.getAdditiveExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__AdditiveExpression__FeatureAssignment_1_0_0_1");
					put(grammarAccess.getAdditiveExpressionAccess().getRightOperandAssignment_1_1(), "rule__AdditiveExpression__RightOperandAssignment_1_1");
					put(grammarAccess.getMultiplicativeExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__MultiplicativeExpression__FeatureAssignment_1_0_0_1");
					put(grammarAccess.getMultiplicativeExpressionAccess().getRightOperandAssignment_1_1(), "rule__MultiplicativeExpression__RightOperandAssignment_1_1");
					put(grammarAccess.getUnaryOperationAccess().getFeatureAssignment_0_1(), "rule__UnaryOperation__FeatureAssignment_0_1");
					put(grammarAccess.getUnaryOperationAccess().getOperandAssignment_0_2(), "rule__UnaryOperation__OperandAssignment_0_2");
					put(grammarAccess.getPostfixOperationAccess().getFeatureAssignment_1_0_1(), "rule__PostfixOperation__FeatureAssignment_1_0_1");
					put(grammarAccess.getMemberFeatureCallAccess().getFeatureAssignment_1_0_0_0_2(), "rule__MemberFeatureCall__FeatureAssignment_1_0_0_0_2");
					put(grammarAccess.getMemberFeatureCallAccess().getValueAssignment_1_0_1(), "rule__MemberFeatureCall__ValueAssignment_1_0_1");
					put(grammarAccess.getMemberFeatureCallAccess().getNullSafeAssignment_1_1_0_0_1_1(), "rule__MemberFeatureCall__NullSafeAssignment_1_1_0_0_1_1");
					put(grammarAccess.getMemberFeatureCallAccess().getExplicitStaticAssignment_1_1_0_0_1_2(), "rule__MemberFeatureCall__ExplicitStaticAssignment_1_1_0_0_1_2");
					put(grammarAccess.getMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_1(), "rule__MemberFeatureCall__TypeArgumentsAssignment_1_1_1_1");
					put(grammarAccess.getMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_2_1(), "rule__MemberFeatureCall__TypeArgumentsAssignment_1_1_1_2_1");
					put(grammarAccess.getMemberFeatureCallAccess().getFeatureAssignment_1_1_2(), "rule__MemberFeatureCall__FeatureAssignment_1_1_2");
					put(grammarAccess.getMemberFeatureCallAccess().getExplicitOperationCallAssignment_1_1_3_0(), "rule__MemberFeatureCall__ExplicitOperationCallAssignment_1_1_3_0");
					put(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_0(), "rule__MemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_0");
					put(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_0(), "rule__MemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_0");
					put(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_1_1(), "rule__MemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_1_1");
					put(grammarAccess.getMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_4(), "rule__MemberFeatureCall__MemberCallArgumentsAssignment_1_1_4");
					put(grammarAccess.getParenthesisExpressionAccess().getExprAssignment_1_0(), "rule__ParenthesisExpression__ExprAssignment_1_0");
					put(grammarAccess.getParenthesisExpressionAccess().getExprAssignment_1_1(), "rule__ParenthesisExpression__ExprAssignment_1_1");
					put(grammarAccess.getJMLOldExpressionAccess().getExprAssignment_2(), "rule__JMLOldExpression__ExprAssignment_2");
					put(grammarAccess.getJMLFreshExpressionAccess().getExprAssignment_2(), "rule__JMLFreshExpression__ExprAssignment_2");
					put(grammarAccess.getJMLForAllExpressionAccess().getInitExpressionsAssignment_2_0(), "rule__JMLForAllExpression__InitExpressionsAssignment_2_0");
					put(grammarAccess.getJMLForAllExpressionAccess().getInitExpressionsAssignment_2_1_1(), "rule__JMLForAllExpression__InitExpressionsAssignment_2_1_1");
					put(grammarAccess.getJMLForAllExpressionAccess().getExpressionAssignment_4(), "rule__JMLForAllExpression__ExpressionAssignment_4");
					put(grammarAccess.getJMLForAllExpressionAccess().getUpdateExpressionsAssignment_6_0(), "rule__JMLForAllExpression__UpdateExpressionsAssignment_6_0");
					put(grammarAccess.getJMLForAllExpressionAccess().getUpdateExpressionsAssignment_6_1_1(), "rule__JMLForAllExpression__UpdateExpressionsAssignment_6_1_1");
					put(grammarAccess.getVarDeclAccess().getTypeAssignment_0_0_0_0(), "rule__VarDecl__TypeAssignment_0_0_0_0");
					put(grammarAccess.getVarDeclAccess().getNameAssignment_0_0_0_1(), "rule__VarDecl__NameAssignment_0_0_0_1");
					put(grammarAccess.getVarDeclAccess().getNameAssignment_0_1(), "rule__VarDecl__NameAssignment_0_1");
					put(grammarAccess.getVarDeclAccess().getRightAssignment_1_1(), "rule__VarDecl__RightAssignment_1_1");
					put(grammarAccess.getSetLiteralAccess().getElementsAssignment_3_0(), "rule__SetLiteral__ElementsAssignment_3_0");
					put(grammarAccess.getSetLiteralAccess().getElementsAssignment_3_1_1(), "rule__SetLiteral__ElementsAssignment_3_1_1");
					put(grammarAccess.getListLiteralAccess().getElementsAssignment_3_0(), "rule__ListLiteral__ElementsAssignment_3_0");
					put(grammarAccess.getListLiteralAccess().getElementsAssignment_3_1_1(), "rule__ListLiteral__ElementsAssignment_3_1_1");
					put(grammarAccess.getClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_0(), "rule__Closure__DeclaredFormalParametersAssignment_1_0_0_0");
					put(grammarAccess.getClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_1_1(), "rule__Closure__DeclaredFormalParametersAssignment_1_0_0_1_1");
					put(grammarAccess.getClosureAccess().getExplicitSyntaxAssignment_1_0_1(), "rule__Closure__ExplicitSyntaxAssignment_1_0_1");
					put(grammarAccess.getClosureAccess().getExpressionAssignment_2(), "rule__Closure__ExpressionAssignment_2");
					put(grammarAccess.getExpressionInClosureAccess().getExpressionsAssignment_1_0(), "rule__ExpressionInClosure__ExpressionsAssignment_1_0");
					put(grammarAccess.getShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_0(), "rule__ShortClosure__DeclaredFormalParametersAssignment_0_0_1_0");
					put(grammarAccess.getShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_1_1(), "rule__ShortClosure__DeclaredFormalParametersAssignment_0_0_1_1_1");
					put(grammarAccess.getShortClosureAccess().getExplicitSyntaxAssignment_0_0_2(), "rule__ShortClosure__ExplicitSyntaxAssignment_0_0_2");
					put(grammarAccess.getShortClosureAccess().getExpressionAssignment_1(), "rule__ShortClosure__ExpressionAssignment_1");
					put(grammarAccess.getIfExpressionAccess().getIfAssignment_3(), "rule__IfExpression__IfAssignment_3");
					put(grammarAccess.getIfExpressionAccess().getThenAssignment_5(), "rule__IfExpression__ThenAssignment_5");
					put(grammarAccess.getIfExpressionAccess().getElseAssignment_6_1(), "rule__IfExpression__ElseAssignment_6_1");
					put(grammarAccess.getSwitchExpressionAccess().getDeclaredParamAssignment_2_0_0_0_1(), "rule__SwitchExpression__DeclaredParamAssignment_2_0_0_0_1");
					put(grammarAccess.getSwitchExpressionAccess().getSwitchAssignment_2_0_1(), "rule__SwitchExpression__SwitchAssignment_2_0_1");
					put(grammarAccess.getSwitchExpressionAccess().getDeclaredParamAssignment_2_1_0_0_0(), "rule__SwitchExpression__DeclaredParamAssignment_2_1_0_0_0");
					put(grammarAccess.getSwitchExpressionAccess().getSwitchAssignment_2_1_1(), "rule__SwitchExpression__SwitchAssignment_2_1_1");
					put(grammarAccess.getSwitchExpressionAccess().getCasesAssignment_4(), "rule__SwitchExpression__CasesAssignment_4");
					put(grammarAccess.getSwitchExpressionAccess().getDefaultAssignment_5_2(), "rule__SwitchExpression__DefaultAssignment_5_2");
					put(grammarAccess.getCasePartAccess().getTypeGuardAssignment_1(), "rule__CasePart__TypeGuardAssignment_1");
					put(grammarAccess.getCasePartAccess().getCaseAssignment_2_1(), "rule__CasePart__CaseAssignment_2_1");
					put(grammarAccess.getCasePartAccess().getThenAssignment_3_0_1(), "rule__CasePart__ThenAssignment_3_0_1");
					put(grammarAccess.getForLoopExpressionAccess().getDeclaredParamAssignment_0_0_3(), "rule__ForLoopExpression__DeclaredParamAssignment_0_0_3");
					put(grammarAccess.getForLoopExpressionAccess().getForExpressionAssignment_1(), "rule__ForLoopExpression__ForExpressionAssignment_1");
					put(grammarAccess.getForLoopExpressionAccess().getEachExpressionAssignment_3(), "rule__ForLoopExpression__EachExpressionAssignment_3");
					put(grammarAccess.getBasicForLoopExpressionAccess().getInitExpressionsAssignment_3_0(), "rule__BasicForLoopExpression__InitExpressionsAssignment_3_0");
					put(grammarAccess.getBasicForLoopExpressionAccess().getInitExpressionsAssignment_3_1_1(), "rule__BasicForLoopExpression__InitExpressionsAssignment_3_1_1");
					put(grammarAccess.getBasicForLoopExpressionAccess().getExpressionAssignment_5(), "rule__BasicForLoopExpression__ExpressionAssignment_5");
					put(grammarAccess.getBasicForLoopExpressionAccess().getUpdateExpressionsAssignment_7_0(), "rule__BasicForLoopExpression__UpdateExpressionsAssignment_7_0");
					put(grammarAccess.getBasicForLoopExpressionAccess().getUpdateExpressionsAssignment_7_1_1(), "rule__BasicForLoopExpression__UpdateExpressionsAssignment_7_1_1");
					put(grammarAccess.getBasicForLoopExpressionAccess().getEachExpressionAssignment_9(), "rule__BasicForLoopExpression__EachExpressionAssignment_9");
					put(grammarAccess.getWhileExpressionAccess().getPredicateAssignment_3(), "rule__WhileExpression__PredicateAssignment_3");
					put(grammarAccess.getWhileExpressionAccess().getBodyAssignment_5(), "rule__WhileExpression__BodyAssignment_5");
					put(grammarAccess.getDoWhileExpressionAccess().getBodyAssignment_2(), "rule__DoWhileExpression__BodyAssignment_2");
					put(grammarAccess.getDoWhileExpressionAccess().getPredicateAssignment_5(), "rule__DoWhileExpression__PredicateAssignment_5");
					put(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_0(), "rule__BlockExpression__ExpressionsAssignment_2_0");
					put(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_1_1(), "rule__BlockExpression__ExpressionsAssignment_2_1_1");
					put(grammarAccess.getJvmFormalParameterAccess().getParameterTypeAssignment_0(), "rule__JvmFormalParameter__ParameterTypeAssignment_0");
					put(grammarAccess.getJvmFormalParameterAccess().getNameAssignment_1(), "rule__JvmFormalParameter__NameAssignment_1");
					put(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeAssignment_0(), "rule__FullJvmFormalParameter__ParameterTypeAssignment_0");
					put(grammarAccess.getFullJvmFormalParameterAccess().getNameAssignment_1(), "rule__FullJvmFormalParameter__NameAssignment_1");
					put(grammarAccess.getFeatureCallAccess().getTypeArgumentsAssignment_1_1(), "rule__FeatureCall__TypeArgumentsAssignment_1_1");
					put(grammarAccess.getFeatureCallAccess().getTypeArgumentsAssignment_1_2_1(), "rule__FeatureCall__TypeArgumentsAssignment_1_2_1");
					put(grammarAccess.getFeatureCallAccess().getFeatureAssignment_2(), "rule__FeatureCall__FeatureAssignment_2");
					put(grammarAccess.getFeatureCallAccess().getExplicitOperationCallAssignment_3_0(), "rule__FeatureCall__ExplicitOperationCallAssignment_3_0");
					put(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_0(), "rule__FeatureCall__FeatureCallArgumentsAssignment_3_1_0");
					put(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_1_0(), "rule__FeatureCall__FeatureCallArgumentsAssignment_3_1_1_0");
					put(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_1_1_1(), "rule__FeatureCall__FeatureCallArgumentsAssignment_3_1_1_1_1");
					put(grammarAccess.getFeatureCallAccess().getFeatureCallArgumentsAssignment_4(), "rule__FeatureCall__FeatureCallArgumentsAssignment_4");
					put(grammarAccess.getConstructorCallAccess().getConstructorAssignment_2(), "rule__ConstructorCall__ConstructorAssignment_2");
					put(grammarAccess.getConstructorCallAccess().getTypeArgumentsAssignment_3_1(), "rule__ConstructorCall__TypeArgumentsAssignment_3_1");
					put(grammarAccess.getConstructorCallAccess().getTypeArgumentsAssignment_3_2_1(), "rule__ConstructorCall__TypeArgumentsAssignment_3_2_1");
					put(grammarAccess.getConstructorCallAccess().getExplicitConstructorCallAssignment_4_0(), "rule__ConstructorCall__ExplicitConstructorCallAssignment_4_0");
					put(grammarAccess.getConstructorCallAccess().getArgumentsAssignment_4_1_0(), "rule__ConstructorCall__ArgumentsAssignment_4_1_0");
					put(grammarAccess.getConstructorCallAccess().getArgumentsAssignment_4_1_1_0(), "rule__ConstructorCall__ArgumentsAssignment_4_1_1_0");
					put(grammarAccess.getConstructorCallAccess().getArgumentsAssignment_4_1_1_1_1(), "rule__ConstructorCall__ArgumentsAssignment_4_1_1_1_1");
					put(grammarAccess.getConstructorCallAccess().getArgumentsAssignment_5(), "rule__ConstructorCall__ArgumentsAssignment_5");
					put(grammarAccess.getBooleanLiteralAccess().getIsTrueAssignment_1_1(), "rule__BooleanLiteral__IsTrueAssignment_1_1");
					put(grammarAccess.getNumberLiteralAccess().getValueAssignment_1(), "rule__NumberLiteral__ValueAssignment_1");
					put(grammarAccess.getStringLiteralAccess().getValueAssignment_1(), "rule__StringLiteral__ValueAssignment_1");
					put(grammarAccess.getCharLiteralAccess().getValueAssignment_1(), "rule__CharLiteral__ValueAssignment_1");
					put(grammarAccess.getThrowExpressionAccess().getExpressionAssignment_2(), "rule__ThrowExpression__ExpressionAssignment_2");
					put(grammarAccess.getReturnExpressionAccess().getExpressionAssignment_2(), "rule__ReturnExpression__ExpressionAssignment_2");
					put(grammarAccess.getTryCatchFinallyExpressionAccess().getExpressionAssignment_2(), "rule__TryCatchFinallyExpression__ExpressionAssignment_2");
					put(grammarAccess.getTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0(), "rule__TryCatchFinallyExpression__CatchClausesAssignment_3_0_0");
					put(grammarAccess.getTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_0_1_1(), "rule__TryCatchFinallyExpression__FinallyExpressionAssignment_3_0_1_1");
					put(grammarAccess.getTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_1_1(), "rule__TryCatchFinallyExpression__FinallyExpressionAssignment_3_1_1");
					put(grammarAccess.getSynchronizedExpressionAccess().getParamAssignment_1(), "rule__SynchronizedExpression__ParamAssignment_1");
					put(grammarAccess.getSynchronizedExpressionAccess().getExpressionAssignment_3(), "rule__SynchronizedExpression__ExpressionAssignment_3");
					put(grammarAccess.getCatchClauseAccess().getDeclaredParamAssignment_2(), "rule__CatchClause__DeclaredParamAssignment_2");
					put(grammarAccess.getCatchClauseAccess().getExpressionAssignment_4(), "rule__CatchClause__ExpressionAssignment_4");
					put(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_0(), "rule__XFunctionTypeRef__ParamTypesAssignment_0_1_0");
					put(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_1_1(), "rule__XFunctionTypeRef__ParamTypesAssignment_0_1_1_1");
					put(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeAssignment_2(), "rule__XFunctionTypeRef__ReturnTypeAssignment_2");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_0(), "rule__JvmParameterizedTypeReference__TypeAssignment_0");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_1(), "rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_1");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_2_1(), "rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_2_1");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_1_4_1(), "rule__JvmParameterizedTypeReference__TypeAssignment_1_4_1");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_4_2_1(), "rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_4_2_1");
					put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_4_2_2_1(), "rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_4_2_2_1");
					put(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0_0(), "rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0_0");
					put(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0_1(), "rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0_1");
					put(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1_0(), "rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1_0");
					put(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1_1(), "rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1_1");
					put(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceAssignment_1(), "rule__JvmUpperBound__TypeReferenceAssignment_1");
					put(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceAssignment_1(), "rule__JvmUpperBoundAnded__TypeReferenceAssignment_1");
					put(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceAssignment_1(), "rule__JvmLowerBound__TypeReferenceAssignment_1");
					put(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceAssignment_1(), "rule__JvmLowerBoundAnded__TypeReferenceAssignment_1");
					put(grammarAccess.getJvmTypeParameterAccess().getNameAssignment_0(), "rule__JvmTypeParameter__NameAssignment_0");
					put(grammarAccess.getJvmTypeParameterAccess().getConstraintsAssignment_1_0(), "rule__JvmTypeParameter__ConstraintsAssignment_1_0");
					put(grammarAccess.getJvmTypeParameterAccess().getConstraintsAssignment_1_1(), "rule__JvmTypeParameter__ConstraintsAssignment_1_1");
					put(grammarAccess.getXImportSectionAccess().getImportDeclarationsAssignment(), "rule__XImportSection__ImportDeclarationsAssignment");
					put(grammarAccess.getXImportDeclarationAccess().getStaticAssignment_1_0_0(), "rule__XImportDeclaration__StaticAssignment_1_0_0");
					put(grammarAccess.getXImportDeclarationAccess().getExtensionAssignment_1_0_1(), "rule__XImportDeclaration__ExtensionAssignment_1_0_1");
					put(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_0_2(), "rule__XImportDeclaration__ImportedTypeAssignment_1_0_2");
					put(grammarAccess.getXImportDeclarationAccess().getWildcardAssignment_1_0_3_0(), "rule__XImportDeclaration__WildcardAssignment_1_0_3_0");
					put(grammarAccess.getXImportDeclarationAccess().getMemberNameAssignment_1_0_3_1(), "rule__XImportDeclaration__MemberNameAssignment_1_0_3_1");
					put(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_1(), "rule__XImportDeclaration__ImportedTypeAssignment_1_1");
					put(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceAssignment_1_2(), "rule__XImportDeclaration__ImportedNamespaceAssignment_1_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			tools.vitruvius.domains.jml.language.ui.contentassist.antlr.internal.InternalJMLParser typedParser = (tools.vitruvius.domains.jml.language.ui.contentassist.antlr.internal.InternalJMLParser) parser;
			typedParser.entryRuleCompilationUnit();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public JMLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(JMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
